
ajedrez_td2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009808  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000284  080099a8  080099a8  000199a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009c2c  08009c2c  000200fc  2**0
                  CONTENTS
  4 .ARM          00000008  08009c2c  08009c2c  00019c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009c34  08009c34  000200fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009c34  08009c34  00019c34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009c38  08009c38  00019c38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000fc  20000000  08009c3c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00005468  200000fc  08009d38  000200fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20005564  08009d38  00025564  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200fc  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002012c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001901e  00000000  00000000  0002016f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00004857  00000000  00000000  0003918d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001658  00000000  00000000  0003d9e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000111d  00000000  00000000  0003f040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001add0  00000000  00000000  0004015d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001cd38  00000000  00000000  0005af2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00099cb4  00000000  00000000  00077c65  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00006504  00000000  00000000  0011191c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  00117e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000fc 	.word	0x200000fc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08009990 	.word	0x08009990

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000100 	.word	0x20000100
 80001dc:	08009990 	.word	0x08009990

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b970 	b.w	8000578 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9e08      	ldr	r6, [sp, #32]
 80002b6:	460d      	mov	r5, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	460f      	mov	r7, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4694      	mov	ip, r2
 80002c4:	d965      	bls.n	8000392 <__udivmoddi4+0xe2>
 80002c6:	fab2 f382 	clz	r3, r2
 80002ca:	b143      	cbz	r3, 80002de <__udivmoddi4+0x2e>
 80002cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002d0:	f1c3 0220 	rsb	r2, r3, #32
 80002d4:	409f      	lsls	r7, r3
 80002d6:	fa20 f202 	lsr.w	r2, r0, r2
 80002da:	4317      	orrs	r7, r2
 80002dc:	409c      	lsls	r4, r3
 80002de:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002e2:	fa1f f58c 	uxth.w	r5, ip
 80002e6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002ea:	0c22      	lsrs	r2, r4, #16
 80002ec:	fb0e 7711 	mls	r7, lr, r1, r7
 80002f0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80002f4:	fb01 f005 	mul.w	r0, r1, r5
 80002f8:	4290      	cmp	r0, r2
 80002fa:	d90a      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000300:	f101 37ff 	add.w	r7, r1, #4294967295
 8000304:	f080 811c 	bcs.w	8000540 <__udivmoddi4+0x290>
 8000308:	4290      	cmp	r0, r2
 800030a:	f240 8119 	bls.w	8000540 <__udivmoddi4+0x290>
 800030e:	3902      	subs	r1, #2
 8000310:	4462      	add	r2, ip
 8000312:	1a12      	subs	r2, r2, r0
 8000314:	b2a4      	uxth	r4, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000322:	fb00 f505 	mul.w	r5, r0, r5
 8000326:	42a5      	cmp	r5, r4
 8000328:	d90a      	bls.n	8000340 <__udivmoddi4+0x90>
 800032a:	eb1c 0404 	adds.w	r4, ip, r4
 800032e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000332:	f080 8107 	bcs.w	8000544 <__udivmoddi4+0x294>
 8000336:	42a5      	cmp	r5, r4
 8000338:	f240 8104 	bls.w	8000544 <__udivmoddi4+0x294>
 800033c:	4464      	add	r4, ip
 800033e:	3802      	subs	r0, #2
 8000340:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000344:	1b64      	subs	r4, r4, r5
 8000346:	2100      	movs	r1, #0
 8000348:	b11e      	cbz	r6, 8000352 <__udivmoddi4+0xa2>
 800034a:	40dc      	lsrs	r4, r3
 800034c:	2300      	movs	r3, #0
 800034e:	e9c6 4300 	strd	r4, r3, [r6]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d908      	bls.n	800036c <__udivmoddi4+0xbc>
 800035a:	2e00      	cmp	r6, #0
 800035c:	f000 80ed 	beq.w	800053a <__udivmoddi4+0x28a>
 8000360:	2100      	movs	r1, #0
 8000362:	e9c6 0500 	strd	r0, r5, [r6]
 8000366:	4608      	mov	r0, r1
 8000368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036c:	fab3 f183 	clz	r1, r3
 8000370:	2900      	cmp	r1, #0
 8000372:	d149      	bne.n	8000408 <__udivmoddi4+0x158>
 8000374:	42ab      	cmp	r3, r5
 8000376:	d302      	bcc.n	800037e <__udivmoddi4+0xce>
 8000378:	4282      	cmp	r2, r0
 800037a:	f200 80f8 	bhi.w	800056e <__udivmoddi4+0x2be>
 800037e:	1a84      	subs	r4, r0, r2
 8000380:	eb65 0203 	sbc.w	r2, r5, r3
 8000384:	2001      	movs	r0, #1
 8000386:	4617      	mov	r7, r2
 8000388:	2e00      	cmp	r6, #0
 800038a:	d0e2      	beq.n	8000352 <__udivmoddi4+0xa2>
 800038c:	e9c6 4700 	strd	r4, r7, [r6]
 8000390:	e7df      	b.n	8000352 <__udivmoddi4+0xa2>
 8000392:	b902      	cbnz	r2, 8000396 <__udivmoddi4+0xe6>
 8000394:	deff      	udf	#255	; 0xff
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	2b00      	cmp	r3, #0
 800039c:	f040 8090 	bne.w	80004c0 <__udivmoddi4+0x210>
 80003a0:	1a8a      	subs	r2, r1, r2
 80003a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003a6:	fa1f fe8c 	uxth.w	lr, ip
 80003aa:	2101      	movs	r1, #1
 80003ac:	fbb2 f5f7 	udiv	r5, r2, r7
 80003b0:	fb07 2015 	mls	r0, r7, r5, r2
 80003b4:	0c22      	lsrs	r2, r4, #16
 80003b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ba:	fb0e f005 	mul.w	r0, lr, r5
 80003be:	4290      	cmp	r0, r2
 80003c0:	d908      	bls.n	80003d4 <__udivmoddi4+0x124>
 80003c2:	eb1c 0202 	adds.w	r2, ip, r2
 80003c6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003ca:	d202      	bcs.n	80003d2 <__udivmoddi4+0x122>
 80003cc:	4290      	cmp	r0, r2
 80003ce:	f200 80cb 	bhi.w	8000568 <__udivmoddi4+0x2b8>
 80003d2:	4645      	mov	r5, r8
 80003d4:	1a12      	subs	r2, r2, r0
 80003d6:	b2a4      	uxth	r4, r4
 80003d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003dc:	fb07 2210 	mls	r2, r7, r0, r2
 80003e0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003e4:	fb0e fe00 	mul.w	lr, lr, r0
 80003e8:	45a6      	cmp	lr, r4
 80003ea:	d908      	bls.n	80003fe <__udivmoddi4+0x14e>
 80003ec:	eb1c 0404 	adds.w	r4, ip, r4
 80003f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f4:	d202      	bcs.n	80003fc <__udivmoddi4+0x14c>
 80003f6:	45a6      	cmp	lr, r4
 80003f8:	f200 80bb 	bhi.w	8000572 <__udivmoddi4+0x2c2>
 80003fc:	4610      	mov	r0, r2
 80003fe:	eba4 040e 	sub.w	r4, r4, lr
 8000402:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000406:	e79f      	b.n	8000348 <__udivmoddi4+0x98>
 8000408:	f1c1 0720 	rsb	r7, r1, #32
 800040c:	408b      	lsls	r3, r1
 800040e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000412:	ea4c 0c03 	orr.w	ip, ip, r3
 8000416:	fa05 f401 	lsl.w	r4, r5, r1
 800041a:	fa20 f307 	lsr.w	r3, r0, r7
 800041e:	40fd      	lsrs	r5, r7
 8000420:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000424:	4323      	orrs	r3, r4
 8000426:	fbb5 f8f9 	udiv	r8, r5, r9
 800042a:	fa1f fe8c 	uxth.w	lr, ip
 800042e:	fb09 5518 	mls	r5, r9, r8, r5
 8000432:	0c1c      	lsrs	r4, r3, #16
 8000434:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000438:	fb08 f50e 	mul.w	r5, r8, lr
 800043c:	42a5      	cmp	r5, r4
 800043e:	fa02 f201 	lsl.w	r2, r2, r1
 8000442:	fa00 f001 	lsl.w	r0, r0, r1
 8000446:	d90b      	bls.n	8000460 <__udivmoddi4+0x1b0>
 8000448:	eb1c 0404 	adds.w	r4, ip, r4
 800044c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000450:	f080 8088 	bcs.w	8000564 <__udivmoddi4+0x2b4>
 8000454:	42a5      	cmp	r5, r4
 8000456:	f240 8085 	bls.w	8000564 <__udivmoddi4+0x2b4>
 800045a:	f1a8 0802 	sub.w	r8, r8, #2
 800045e:	4464      	add	r4, ip
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	b29d      	uxth	r5, r3
 8000464:	fbb4 f3f9 	udiv	r3, r4, r9
 8000468:	fb09 4413 	mls	r4, r9, r3, r4
 800046c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000470:	fb03 fe0e 	mul.w	lr, r3, lr
 8000474:	45a6      	cmp	lr, r4
 8000476:	d908      	bls.n	800048a <__udivmoddi4+0x1da>
 8000478:	eb1c 0404 	adds.w	r4, ip, r4
 800047c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000480:	d26c      	bcs.n	800055c <__udivmoddi4+0x2ac>
 8000482:	45a6      	cmp	lr, r4
 8000484:	d96a      	bls.n	800055c <__udivmoddi4+0x2ac>
 8000486:	3b02      	subs	r3, #2
 8000488:	4464      	add	r4, ip
 800048a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800048e:	fba3 9502 	umull	r9, r5, r3, r2
 8000492:	eba4 040e 	sub.w	r4, r4, lr
 8000496:	42ac      	cmp	r4, r5
 8000498:	46c8      	mov	r8, r9
 800049a:	46ae      	mov	lr, r5
 800049c:	d356      	bcc.n	800054c <__udivmoddi4+0x29c>
 800049e:	d053      	beq.n	8000548 <__udivmoddi4+0x298>
 80004a0:	b156      	cbz	r6, 80004b8 <__udivmoddi4+0x208>
 80004a2:	ebb0 0208 	subs.w	r2, r0, r8
 80004a6:	eb64 040e 	sbc.w	r4, r4, lr
 80004aa:	fa04 f707 	lsl.w	r7, r4, r7
 80004ae:	40ca      	lsrs	r2, r1
 80004b0:	40cc      	lsrs	r4, r1
 80004b2:	4317      	orrs	r7, r2
 80004b4:	e9c6 7400 	strd	r7, r4, [r6]
 80004b8:	4618      	mov	r0, r3
 80004ba:	2100      	movs	r1, #0
 80004bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004c0:	f1c3 0120 	rsb	r1, r3, #32
 80004c4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004c8:	fa20 f201 	lsr.w	r2, r0, r1
 80004cc:	fa25 f101 	lsr.w	r1, r5, r1
 80004d0:	409d      	lsls	r5, r3
 80004d2:	432a      	orrs	r2, r5
 80004d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004d8:	fa1f fe8c 	uxth.w	lr, ip
 80004dc:	fbb1 f0f7 	udiv	r0, r1, r7
 80004e0:	fb07 1510 	mls	r5, r7, r0, r1
 80004e4:	0c11      	lsrs	r1, r2, #16
 80004e6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004ea:	fb00 f50e 	mul.w	r5, r0, lr
 80004ee:	428d      	cmp	r5, r1
 80004f0:	fa04 f403 	lsl.w	r4, r4, r3
 80004f4:	d908      	bls.n	8000508 <__udivmoddi4+0x258>
 80004f6:	eb1c 0101 	adds.w	r1, ip, r1
 80004fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80004fe:	d22f      	bcs.n	8000560 <__udivmoddi4+0x2b0>
 8000500:	428d      	cmp	r5, r1
 8000502:	d92d      	bls.n	8000560 <__udivmoddi4+0x2b0>
 8000504:	3802      	subs	r0, #2
 8000506:	4461      	add	r1, ip
 8000508:	1b49      	subs	r1, r1, r5
 800050a:	b292      	uxth	r2, r2
 800050c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000510:	fb07 1115 	mls	r1, r7, r5, r1
 8000514:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000518:	fb05 f10e 	mul.w	r1, r5, lr
 800051c:	4291      	cmp	r1, r2
 800051e:	d908      	bls.n	8000532 <__udivmoddi4+0x282>
 8000520:	eb1c 0202 	adds.w	r2, ip, r2
 8000524:	f105 38ff 	add.w	r8, r5, #4294967295
 8000528:	d216      	bcs.n	8000558 <__udivmoddi4+0x2a8>
 800052a:	4291      	cmp	r1, r2
 800052c:	d914      	bls.n	8000558 <__udivmoddi4+0x2a8>
 800052e:	3d02      	subs	r5, #2
 8000530:	4462      	add	r2, ip
 8000532:	1a52      	subs	r2, r2, r1
 8000534:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000538:	e738      	b.n	80003ac <__udivmoddi4+0xfc>
 800053a:	4631      	mov	r1, r6
 800053c:	4630      	mov	r0, r6
 800053e:	e708      	b.n	8000352 <__udivmoddi4+0xa2>
 8000540:	4639      	mov	r1, r7
 8000542:	e6e6      	b.n	8000312 <__udivmoddi4+0x62>
 8000544:	4610      	mov	r0, r2
 8000546:	e6fb      	b.n	8000340 <__udivmoddi4+0x90>
 8000548:	4548      	cmp	r0, r9
 800054a:	d2a9      	bcs.n	80004a0 <__udivmoddi4+0x1f0>
 800054c:	ebb9 0802 	subs.w	r8, r9, r2
 8000550:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000554:	3b01      	subs	r3, #1
 8000556:	e7a3      	b.n	80004a0 <__udivmoddi4+0x1f0>
 8000558:	4645      	mov	r5, r8
 800055a:	e7ea      	b.n	8000532 <__udivmoddi4+0x282>
 800055c:	462b      	mov	r3, r5
 800055e:	e794      	b.n	800048a <__udivmoddi4+0x1da>
 8000560:	4640      	mov	r0, r8
 8000562:	e7d1      	b.n	8000508 <__udivmoddi4+0x258>
 8000564:	46d0      	mov	r8, sl
 8000566:	e77b      	b.n	8000460 <__udivmoddi4+0x1b0>
 8000568:	3d02      	subs	r5, #2
 800056a:	4462      	add	r2, ip
 800056c:	e732      	b.n	80003d4 <__udivmoddi4+0x124>
 800056e:	4608      	mov	r0, r1
 8000570:	e70a      	b.n	8000388 <__udivmoddi4+0xd8>
 8000572:	4464      	add	r4, ip
 8000574:	3802      	subs	r0, #2
 8000576:	e742      	b.n	80003fe <__udivmoddi4+0x14e>

08000578 <__aeabi_idiv0>:
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop

0800057c <lcd_init>:
#include "cmsis_os.h"

extern I2C_HandleTypeDef hi2c1;

//Inicializa el display.
void lcd_init(void) {
 800057c:	b580      	push	{r7, lr}
 800057e:	af00      	add	r7, sp, #0
	// 4 bit initialization
	vTaskDelay(50);  // wait for >40ms
 8000580:	2032      	movs	r0, #50	; 0x32
 8000582:	f006 faff 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x30);
 8000586:	2030      	movs	r0, #48	; 0x30
 8000588:	f000 f836 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(5);  // wait for >4.1ms
 800058c:	2005      	movs	r0, #5
 800058e:	f006 faf9 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x30);
 8000592:	2030      	movs	r0, #48	; 0x30
 8000594:	f000 f830 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(1);  // wait for >100us
 8000598:	2001      	movs	r0, #1
 800059a:	f006 faf3 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x30);
 800059e:	2030      	movs	r0, #48	; 0x30
 80005a0:	f000 f82a 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(10);
 80005a4:	200a      	movs	r0, #10
 80005a6:	f006 faed 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x20);  // 4bit mode
 80005aa:	2020      	movs	r0, #32
 80005ac:	f000 f824 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(10);
 80005b0:	200a      	movs	r0, #10
 80005b2:	f006 fae7 	bl	8006b84 <vTaskDelay>

	// display initialization
	lcd_send_cmd(0x28); // Function set --> DL=0 (4 bit mode), N = 1 (2 line display) F = 0 (5x8 characters)
 80005b6:	2028      	movs	r0, #40	; 0x28
 80005b8:	f000 f81e 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(1);
 80005bc:	2001      	movs	r0, #1
 80005be:	f006 fae1 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x08); //Display on/off control --> D=0,C=0, B=0  ---> display off
 80005c2:	2008      	movs	r0, #8
 80005c4:	f000 f818 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(1);
 80005c8:	2001      	movs	r0, #1
 80005ca:	f006 fadb 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x01);  // clear display
 80005ce:	2001      	movs	r0, #1
 80005d0:	f000 f812 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(1);
 80005d4:	2001      	movs	r0, #1
 80005d6:	f006 fad5 	bl	8006b84 <vTaskDelay>
	vTaskDelay(1);
 80005da:	2001      	movs	r0, #1
 80005dc:	f006 fad2 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x06); //Entry mode set --> I/D = 1 (increment cursor) & S = 0 (no shift)
 80005e0:	2006      	movs	r0, #6
 80005e2:	f000 f809 	bl	80005f8 <lcd_send_cmd>
	vTaskDelay(1);
 80005e6:	2001      	movs	r0, #1
 80005e8:	f006 facc 	bl	8006b84 <vTaskDelay>
	lcd_send_cmd(0x0C); //Display on/off control --> D = 1, C and B = 0. (Cursor and blink, last two bits)
 80005ec:	200c      	movs	r0, #12
 80005ee:	f000 f803 	bl	80005f8 <lcd_send_cmd>
}
 80005f2:	bf00      	nop
 80005f4:	bd80      	pop	{r7, pc}
	...

080005f8 <lcd_send_cmd>:

void lcd_send_cmd (char cmd)
{
 80005f8:	b580      	push	{r7, lr}
 80005fa:	b086      	sub	sp, #24
 80005fc:	af02      	add	r7, sp, #8
 80005fe:	4603      	mov	r3, r0
 8000600:	71fb      	strb	r3, [r7, #7]
  char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 8000602:	79fb      	ldrb	r3, [r7, #7]
 8000604:	f023 030f 	bic.w	r3, r3, #15
 8000608:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 800060a:	79fb      	ldrb	r3, [r7, #7]
 800060c:	011b      	lsls	r3, r3, #4
 800060e:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 8000610:	7bfb      	ldrb	r3, [r7, #15]
 8000612:	f043 030c 	orr.w	r3, r3, #12
 8000616:	b2db      	uxtb	r3, r3
 8000618:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 800061a:	7bfb      	ldrb	r3, [r7, #15]
 800061c:	f043 0308 	orr.w	r3, r3, #8
 8000620:	b2db      	uxtb	r3, r3
 8000622:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 8000624:	7bbb      	ldrb	r3, [r7, #14]
 8000626:	f043 030c 	orr.w	r3, r3, #12
 800062a:	b2db      	uxtb	r3, r3
 800062c:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 800062e:	7bbb      	ldrb	r3, [r7, #14]
 8000630:	f043 0308 	orr.w	r3, r3, #8
 8000634:	b2db      	uxtb	r3, r3
 8000636:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000638:	f107 0208 	add.w	r2, r7, #8
 800063c:	2364      	movs	r3, #100	; 0x64
 800063e:	9300      	str	r3, [sp, #0]
 8000640:	2304      	movs	r3, #4
 8000642:	214e      	movs	r1, #78	; 0x4e
 8000644:	4803      	ldr	r0, [pc, #12]	; (8000654 <lcd_send_cmd+0x5c>)
 8000646:	f003 fadd 	bl	8003c04 <HAL_I2C_Master_Transmit>
}
 800064a:	bf00      	nop
 800064c:	3710      	adds	r7, #16
 800064e:	46bd      	mov	sp, r7
 8000650:	bd80      	pop	{r7, pc}
 8000652:	bf00      	nop
 8000654:	200003bc 	.word	0x200003bc

08000658 <lcd_send_data>:

void lcd_send_data (char data)
{
 8000658:	b580      	push	{r7, lr}
 800065a:	b086      	sub	sp, #24
 800065c:	af02      	add	r7, sp, #8
 800065e:	4603      	mov	r3, r0
 8000660:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000662:	79fb      	ldrb	r3, [r7, #7]
 8000664:	f023 030f 	bic.w	r3, r3, #15
 8000668:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 800066a:	79fb      	ldrb	r3, [r7, #7]
 800066c:	011b      	lsls	r3, r3, #4
 800066e:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=1
 8000670:	7bfb      	ldrb	r3, [r7, #15]
 8000672:	f043 030d 	orr.w	r3, r3, #13
 8000676:	b2db      	uxtb	r3, r3
 8000678:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=1
 800067a:	7bfb      	ldrb	r3, [r7, #15]
 800067c:	f043 0309 	orr.w	r3, r3, #9
 8000680:	b2db      	uxtb	r3, r3
 8000682:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=1
 8000684:	7bbb      	ldrb	r3, [r7, #14]
 8000686:	f043 030d 	orr.w	r3, r3, #13
 800068a:	b2db      	uxtb	r3, r3
 800068c:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=1
 800068e:	7bbb      	ldrb	r3, [r7, #14]
 8000690:	f043 0309 	orr.w	r3, r3, #9
 8000694:	b2db      	uxtb	r3, r3
 8000696:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000698:	f107 0208 	add.w	r2, r7, #8
 800069c:	2364      	movs	r3, #100	; 0x64
 800069e:	9300      	str	r3, [sp, #0]
 80006a0:	2304      	movs	r3, #4
 80006a2:	214e      	movs	r1, #78	; 0x4e
 80006a4:	4803      	ldr	r0, [pc, #12]	; (80006b4 <lcd_send_data+0x5c>)
 80006a6:	f003 faad 	bl	8003c04 <HAL_I2C_Master_Transmit>
}
 80006aa:	bf00      	nop
 80006ac:	3710      	adds	r7, #16
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
 80006b2:	bf00      	nop
 80006b4:	200003bc 	.word	0x200003bc

080006b8 <lcd_send_string>:

void lcd_send_string(char * str)
{
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0
 80006be:	6078      	str	r0, [r7, #4]
	while(*str)
 80006c0:	e006      	b.n	80006d0 <lcd_send_string+0x18>
		lcd_send_data(*(str++));
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	1c5a      	adds	r2, r3, #1
 80006c6:	607a      	str	r2, [r7, #4]
 80006c8:	781b      	ldrb	r3, [r3, #0]
 80006ca:	4618      	mov	r0, r3
 80006cc:	f7ff ffc4 	bl	8000658 <lcd_send_data>
	while(*str)
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	781b      	ldrb	r3, [r3, #0]
 80006d4:	2b00      	cmp	r3, #0
 80006d6:	d1f4      	bne.n	80006c2 <lcd_send_string+0xa>
}
 80006d8:	bf00      	nop
 80006da:	bf00      	nop
 80006dc:	3708      	adds	r7, #8
 80006de:	46bd      	mov	sp, r7
 80006e0:	bd80      	pop	{r7, pc}

080006e2 <debounce_init>:
#include "debounce.h"

void debounce_init(Debounce_t *s, uint8_t activo_en_cero, uint16_t debounce) {
 80006e2:	b480      	push	{r7}
 80006e4:	b083      	sub	sp, #12
 80006e6:	af00      	add	r7, sp, #0
 80006e8:	6078      	str	r0, [r7, #4]
 80006ea:	460b      	mov	r3, r1
 80006ec:	70fb      	strb	r3, [r7, #3]
 80006ee:	4613      	mov	r3, r2
 80006f0:	803b      	strh	r3, [r7, #0]
	s->debounce = debounce;
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	883a      	ldrh	r2, [r7, #0]
 80006f6:	805a      	strh	r2, [r3, #2]
	s->debounce_ticks = 0;
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	2200      	movs	r2, #0
 80006fc:	801a      	strh	r2, [r3, #0]
	s->activo_en_cero = (activo_en_cero) ? 1 : 0;
 80006fe:	78fb      	ldrb	r3, [r7, #3]
 8000700:	2b00      	cmp	r3, #0
 8000702:	bf14      	ite	ne
 8000704:	2301      	movne	r3, #1
 8000706:	2300      	moveq	r3, #0
 8000708:	b2db      	uxtb	r3, r3
 800070a:	461a      	mov	r2, r3
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	71da      	strb	r2, [r3, #7]
	s->estado = 0;
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	2200      	movs	r2, #0
 8000714:	711a      	strb	r2, [r3, #4]
	s->estado_pin = (uint8_t) BTN_LIBRE;
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	2200      	movs	r2, #0
 800071a:	715a      	strb	r2, [r3, #5]
	s->estado_anterior_pin = (uint8_t) BTN_PRESIONADO;
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	2201      	movs	r2, #1
 8000720:	719a      	strb	r2, [r3, #6]
}
 8000722:	bf00      	nop
 8000724:	370c      	adds	r7, #12
 8000726:	46bd      	mov	sp, r7
 8000728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800072c:	4770      	bx	lr
	...

08000730 <debounce_run>:

void debounce_run(Debounce_t *s, uint32_t estado) {
 8000730:	b480      	push	{r7}
 8000732:	b085      	sub	sp, #20
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
 8000738:	6039      	str	r1, [r7, #0]
	int boton;
	boton = (estado) ? 1 : 0;
 800073a:	683b      	ldr	r3, [r7, #0]
 800073c:	2b00      	cmp	r3, #0
 800073e:	bf14      	ite	ne
 8000740:	2301      	movne	r3, #1
 8000742:	2300      	moveq	r3, #0
 8000744:	b2db      	uxtb	r3, r3
 8000746:	60fb      	str	r3, [r7, #12]
	boton = boton ^ s->activo_en_cero;
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	79db      	ldrb	r3, [r3, #7]
 800074c:	461a      	mov	r2, r3
 800074e:	68fb      	ldr	r3, [r7, #12]
 8000750:	4053      	eors	r3, r2
 8000752:	60fb      	str	r3, [r7, #12]

	switch (s->estado) {
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	791b      	ldrb	r3, [r3, #4]
 8000758:	2b03      	cmp	r3, #3
 800075a:	d866      	bhi.n	800082a <debounce_run+0xfa>
 800075c:	a201      	add	r2, pc, #4	; (adr r2, 8000764 <debounce_run+0x34>)
 800075e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000762:	bf00      	nop
 8000764:	08000775 	.word	0x08000775
 8000768:	08000797 	.word	0x08000797
 800076c:	080007cd 	.word	0x080007cd
 8000770:	080007ef 	.word	0x080007ef
	case 0:
		if (boton) {
 8000774:	68fb      	ldr	r3, [r7, #12]
 8000776:	2b00      	cmp	r3, #0
 8000778:	d006      	beq.n	8000788 <debounce_run+0x58>
			s->debounce_ticks = s->debounce;
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	885a      	ldrh	r2, [r3, #2]
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	801a      	strh	r2, [r3, #0]
			s->estado = 1;
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	2201      	movs	r2, #1
 8000786:	711a      	strb	r2, [r3, #4]
		}
		s->estado_pin = BTN_LIBRE;
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	2200      	movs	r2, #0
 800078c:	715a      	strb	r2, [r3, #5]
		s->estado_anterior_pin = BTN_LIBRE;
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	2200      	movs	r2, #0
 8000792:	719a      	strb	r2, [r3, #6]
		break;
 8000794:	e049      	b.n	800082a <debounce_run+0xfa>
	case 1:
		if (!(--(s->debounce_ticks))) {
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	881b      	ldrh	r3, [r3, #0]
 800079a:	3b01      	subs	r3, #1
 800079c:	b29a      	uxth	r2, r3
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	801a      	strh	r2, [r3, #0]
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	881b      	ldrh	r3, [r3, #0]
 80007a6:	2b00      	cmp	r3, #0
 80007a8:	d13c      	bne.n	8000824 <debounce_run+0xf4>
			if (boton) {
 80007aa:	68fb      	ldr	r3, [r7, #12]
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d009      	beq.n	80007c4 <debounce_run+0x94>
				s->estado_pin = BTN_PRESIONADO;
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	2201      	movs	r2, #1
 80007b4:	715a      	strb	r2, [r3, #5]
				s->estado_anterior_pin = BTN_LIBRE;
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	2200      	movs	r2, #0
 80007ba:	719a      	strb	r2, [r3, #6]
				s->estado = 2;
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	2202      	movs	r2, #2
 80007c0:	711a      	strb	r2, [r3, #4]
			} else {
				s->estado = 0;
			}
		}
		break;
 80007c2:	e02f      	b.n	8000824 <debounce_run+0xf4>
				s->estado = 0;
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	2200      	movs	r2, #0
 80007c8:	711a      	strb	r2, [r3, #4]
		break;
 80007ca:	e02b      	b.n	8000824 <debounce_run+0xf4>
	case 2:
		if (!boton) {
 80007cc:	68fb      	ldr	r3, [r7, #12]
 80007ce:	2b00      	cmp	r3, #0
 80007d0:	d106      	bne.n	80007e0 <debounce_run+0xb0>
			s->debounce_ticks = s->debounce;
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	885a      	ldrh	r2, [r3, #2]
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	801a      	strh	r2, [r3, #0]
			s->estado = 3;
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	2203      	movs	r2, #3
 80007de:	711a      	strb	r2, [r3, #4]
		}
		s->estado_pin = BTN_PRESIONADO;
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	2201      	movs	r2, #1
 80007e4:	715a      	strb	r2, [r3, #5]
		s->estado_anterior_pin = BTN_PRESIONADO;
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	2201      	movs	r2, #1
 80007ea:	719a      	strb	r2, [r3, #6]
		break;
 80007ec:	e01d      	b.n	800082a <debounce_run+0xfa>
	case 3:
		if (!(--(s->debounce_ticks))) {
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	881b      	ldrh	r3, [r3, #0]
 80007f2:	3b01      	subs	r3, #1
 80007f4:	b29a      	uxth	r2, r3
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	801a      	strh	r2, [r3, #0]
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	881b      	ldrh	r3, [r3, #0]
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d112      	bne.n	8000828 <debounce_run+0xf8>
			if (!boton) {
 8000802:	68fb      	ldr	r3, [r7, #12]
 8000804:	2b00      	cmp	r3, #0
 8000806:	d109      	bne.n	800081c <debounce_run+0xec>
				s->estado_pin = BTN_LIBRE;
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	2200      	movs	r2, #0
 800080c:	715a      	strb	r2, [r3, #5]
				s->estado_anterior_pin = BTN_PRESIONADO;
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	2201      	movs	r2, #1
 8000812:	719a      	strb	r2, [r3, #6]
				s->estado = 0;
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	2200      	movs	r2, #0
 8000818:	711a      	strb	r2, [r3, #4]
			} else {
				s->estado = 2;
			}
		}
		break;
 800081a:	e005      	b.n	8000828 <debounce_run+0xf8>
				s->estado = 2;
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	2202      	movs	r2, #2
 8000820:	711a      	strb	r2, [r3, #4]
		break;
 8000822:	e001      	b.n	8000828 <debounce_run+0xf8>
		break;
 8000824:	bf00      	nop
 8000826:	e000      	b.n	800082a <debounce_run+0xfa>
		break;
 8000828:	bf00      	nop
	}
}
 800082a:	bf00      	nop
 800082c:	3714      	adds	r7, #20
 800082e:	46bd      	mov	sp, r7
 8000830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000834:	4770      	bx	lr
 8000836:	bf00      	nop

08000838 <debounce_flank>:

int debounce_flank(Debounce_t *s) {
 8000838:	b480      	push	{r7}
 800083a:	b083      	sub	sp, #12
 800083c:	af00      	add	r7, sp, #0
 800083e:	6078      	str	r0, [r7, #4]
	return (s->estado_pin == BTN_PRESIONADO)
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	795b      	ldrb	r3, [r3, #5]
			&& (s->estado_anterior_pin == BTN_LIBRE);
 8000844:	2b01      	cmp	r3, #1
 8000846:	d105      	bne.n	8000854 <debounce_flank+0x1c>
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	799b      	ldrb	r3, [r3, #6]
 800084c:	2b00      	cmp	r3, #0
 800084e:	d101      	bne.n	8000854 <debounce_flank+0x1c>
 8000850:	2301      	movs	r3, #1
 8000852:	e000      	b.n	8000856 <debounce_flank+0x1e>
 8000854:	2300      	movs	r3, #0
}
 8000856:	4618      	mov	r0, r3
 8000858:	370c      	adds	r7, #12
 800085a:	46bd      	mov	sp, r7
 800085c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000860:	4770      	bx	lr
	...

08000864 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8000864:	b480      	push	{r7}
 8000866:	b085      	sub	sp, #20
 8000868:	af00      	add	r7, sp, #0
 800086a:	60f8      	str	r0, [r7, #12]
 800086c:	60b9      	str	r1, [r7, #8]
 800086e:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 8000870:	68fb      	ldr	r3, [r7, #12]
 8000872:	4a07      	ldr	r2, [pc, #28]	; (8000890 <vApplicationGetIdleTaskMemory+0x2c>)
 8000874:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 8000876:	68bb      	ldr	r3, [r7, #8]
 8000878:	4a06      	ldr	r2, [pc, #24]	; (8000894 <vApplicationGetIdleTaskMemory+0x30>)
 800087a:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	2280      	movs	r2, #128	; 0x80
 8000880:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 8000882:	bf00      	nop
 8000884:	3714      	adds	r7, #20
 8000886:	46bd      	mov	sp, r7
 8000888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800088c:	4770      	bx	lr
 800088e:	bf00      	nop
 8000890:	20000118 	.word	0x20000118
 8000894:	200001b8 	.word	0x200001b8

08000898 <game_set_sensor_reader>:
#include "movement.h"
#include "lighting/lighting.h"

sensor_reader_t sensor_reader = (sensor_reader_t)0;

void game_set_sensor_reader(sensor_reader_t reader){
 8000898:	b480      	push	{r7}
 800089a:	b083      	sub	sp, #12
 800089c:	af00      	add	r7, sp, #0
 800089e:	6078      	str	r0, [r7, #4]
    sensor_reader = reader;
 80008a0:	4a05      	ldr	r2, [pc, #20]	; (80008b8 <game_set_sensor_reader+0x20>)
 80008a2:	687b      	ldr	r3, [r7, #4]
 80008a4:	6013      	str	r3, [r2, #0]
    get_sensors = reader;
 80008a6:	4a05      	ldr	r2, [pc, #20]	; (80008bc <game_set_sensor_reader+0x24>)
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	6013      	str	r3, [r2, #0]
}
 80008ac:	bf00      	nop
 80008ae:	370c      	adds	r7, #12
 80008b0:	46bd      	mov	sp, r7
 80008b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008b6:	4770      	bx	lr
 80008b8:	200003b8 	.word	0x200003b8
 80008bc:	200004cc 	.word	0x200004cc

080008c0 <game_set_led_output_array>:

void game_set_led_output_array(led_color output_array[8][8]){
 80008c0:	b580      	push	{r7, lr}
 80008c2:	b082      	sub	sp, #8
 80008c4:	af00      	add	r7, sp, #0
 80008c6:	6078      	str	r0, [r7, #4]
    lighting_set_output(output_array);
 80008c8:	6878      	ldr	r0, [r7, #4]
 80008ca:	f001 fef1 	bl	80026b0 <lighting_set_output>
}
 80008ce:	bf00      	nop
 80008d0:	3708      	adds	r7, #8
 80008d2:	46bd      	mov	sp, r7
 80008d4:	bd80      	pop	{r7, pc}

080008d6 <game_fsm>:


void game_fsm(){
 80008d6:	b580      	push	{r7, lr}
 80008d8:	af00      	add	r7, sp, #0

    movement_fsm();
 80008da:	f000 fb7f 	bl	8000fdc <movement_fsm>

    lighting_refresh();
 80008de:	f002 f82b 	bl	8002938 <lighting_refresh>

}
 80008e2:	bf00      	nop
 80008e4:	bd80      	pop	{r7, pc}

080008e6 <game_reset>:

void game_reset(){
 80008e6:	b580      	push	{r7, lr}
 80008e8:	af00      	add	r7, sp, #0

    engine_reset();
 80008ea:	f001 f881 	bl	80019f0 <engine_reset>

 80008ee:	bf00      	nop
 80008f0:	bd80      	pop	{r7, pc}
	...

080008f4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008f4:	b5b0      	push	{r4, r5, r7, lr}
 80008f6:	b08a      	sub	sp, #40	; 0x28
 80008f8:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008fa:	f002 f9d3 	bl	8002ca4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008fe:	f000 f859 	bl	80009b4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000902:	f000 f991 	bl	8000c28 <MX_GPIO_Init>
  MX_DMA_Init();
 8000906:	f000 f96f 	bl	8000be8 <MX_DMA_Init>
  MX_TIM1_Init();
 800090a:	f000 f8ed 	bl	8000ae8 <MX_TIM1_Init>
  MX_I2C1_Init();
 800090e:	f000 f8bd 	bl	8000a8c <MX_I2C1_Init>

  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 8000912:	4b1e      	ldr	r3, [pc, #120]	; (800098c <main+0x98>)
 8000914:	1d3c      	adds	r4, r7, #4
 8000916:	461d      	mov	r5, r3
 8000918:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800091a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800091c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000920:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000924:	1d3b      	adds	r3, r7, #4
 8000926:	2100      	movs	r1, #0
 8000928:	4618      	mov	r0, r3
 800092a:	f005 fa9e 	bl	8005e6a <osThreadCreate>
 800092e:	4603      	mov	r3, r0
 8000930:	4a17      	ldr	r2, [pc, #92]	; (8000990 <main+0x9c>)
 8000932:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_THREADS */

	xTaskCreate(t_LCD, "t_LCD",
 8000934:	2300      	movs	r3, #0
 8000936:	9301      	str	r3, [sp, #4]
 8000938:	230a      	movs	r3, #10
 800093a:	9300      	str	r3, [sp, #0]
 800093c:	2300      	movs	r3, #0
 800093e:	2280      	movs	r2, #128	; 0x80
 8000940:	4914      	ldr	r1, [pc, #80]	; (8000994 <main+0xa0>)
 8000942:	4815      	ldr	r0, [pc, #84]	; (8000998 <main+0xa4>)
 8000944:	f005 ffd1 	bl	80068ea <xTaskCreate>
	configMINIMAL_STACK_SIZE,
	NULL,
	tskIDLE_PRIORITY + 10,
	NULL);

	xTaskCreate(t_Botones, "t_Botones",
 8000948:	2300      	movs	r3, #0
 800094a:	9301      	str	r3, [sp, #4]
 800094c:	2309      	movs	r3, #9
 800094e:	9300      	str	r3, [sp, #0]
 8000950:	2300      	movs	r3, #0
 8000952:	2280      	movs	r2, #128	; 0x80
 8000954:	4911      	ldr	r1, [pc, #68]	; (800099c <main+0xa8>)
 8000956:	4812      	ldr	r0, [pc, #72]	; (80009a0 <main+0xac>)
 8000958:	f005 ffc7 	bl	80068ea <xTaskCreate>
	configMINIMAL_STACK_SIZE,
	NULL,
	tskIDLE_PRIORITY + 9,
	NULL);

	xTaskCreate(t_userLoop, "t_userLoop",
 800095c:	2300      	movs	r3, #0
 800095e:	9301      	str	r3, [sp, #4]
 8000960:	2308      	movs	r3, #8
 8000962:	9300      	str	r3, [sp, #0]
 8000964:	2300      	movs	r3, #0
 8000966:	2280      	movs	r2, #128	; 0x80
 8000968:	490e      	ldr	r1, [pc, #56]	; (80009a4 <main+0xb0>)
 800096a:	480f      	ldr	r0, [pc, #60]	; (80009a8 <main+0xb4>)
 800096c:	f005 ffbd 	bl	80068ea <xTaskCreate>
	configMINIMAL_STACK_SIZE,
	NULL,
	tskIDLE_PRIORITY + 8,
	NULL);

	xTaskCreate(t_WS2812, "t_WS2812",
 8000970:	2300      	movs	r3, #0
 8000972:	9301      	str	r3, [sp, #4]
 8000974:	230a      	movs	r3, #10
 8000976:	9300      	str	r3, [sp, #0]
 8000978:	2300      	movs	r3, #0
 800097a:	2280      	movs	r2, #128	; 0x80
 800097c:	490b      	ldr	r1, [pc, #44]	; (80009ac <main+0xb8>)
 800097e:	480c      	ldr	r0, [pc, #48]	; (80009b0 <main+0xbc>)
 8000980:	f005 ffb3 	bl	80068ea <xTaskCreate>

	/* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8000984:	f005 fa6a 	bl	8005e5c <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

	while (1) {
 8000988:	e7fe      	b.n	8000988 <main+0x94>
 800098a:	bf00      	nop
 800098c:	080099e0 	.word	0x080099e0
 8000990:	200004b8 	.word	0x200004b8
 8000994:	080099a8 	.word	0x080099a8
 8000998:	080016a1 	.word	0x080016a1
 800099c:	080099b0 	.word	0x080099b0
 80009a0:	08001715 	.word	0x08001715
 80009a4:	080099bc 	.word	0x080099bc
 80009a8:	08001865 	.word	0x08001865
 80009ac:	080099c8 	.word	0x080099c8
 80009b0:	0800188d 	.word	0x0800188d

080009b4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80009b4:	b580      	push	{r7, lr}
 80009b6:	b094      	sub	sp, #80	; 0x50
 80009b8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80009ba:	f107 0320 	add.w	r3, r7, #32
 80009be:	2230      	movs	r2, #48	; 0x30
 80009c0:	2100      	movs	r1, #0
 80009c2:	4618      	mov	r0, r3
 80009c4:	f007 fc44 	bl	8008250 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80009c8:	f107 030c 	add.w	r3, r7, #12
 80009cc:	2200      	movs	r2, #0
 80009ce:	601a      	str	r2, [r3, #0]
 80009d0:	605a      	str	r2, [r3, #4]
 80009d2:	609a      	str	r2, [r3, #8]
 80009d4:	60da      	str	r2, [r3, #12]
 80009d6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80009d8:	2300      	movs	r3, #0
 80009da:	60bb      	str	r3, [r7, #8]
 80009dc:	4b29      	ldr	r3, [pc, #164]	; (8000a84 <SystemClock_Config+0xd0>)
 80009de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009e0:	4a28      	ldr	r2, [pc, #160]	; (8000a84 <SystemClock_Config+0xd0>)
 80009e2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80009e6:	6413      	str	r3, [r2, #64]	; 0x40
 80009e8:	4b26      	ldr	r3, [pc, #152]	; (8000a84 <SystemClock_Config+0xd0>)
 80009ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80009f0:	60bb      	str	r3, [r7, #8]
 80009f2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 80009f4:	2300      	movs	r3, #0
 80009f6:	607b      	str	r3, [r7, #4]
 80009f8:	4b23      	ldr	r3, [pc, #140]	; (8000a88 <SystemClock_Config+0xd4>)
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000a00:	4a21      	ldr	r2, [pc, #132]	; (8000a88 <SystemClock_Config+0xd4>)
 8000a02:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a06:	6013      	str	r3, [r2, #0]
 8000a08:	4b1f      	ldr	r3, [pc, #124]	; (8000a88 <SystemClock_Config+0xd4>)
 8000a0a:	681b      	ldr	r3, [r3, #0]
 8000a0c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000a10:	607b      	str	r3, [r7, #4]
 8000a12:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000a14:	2302      	movs	r3, #2
 8000a16:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000a18:	2301      	movs	r3, #1
 8000a1a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000a1c:	2310      	movs	r3, #16
 8000a1e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000a20:	2302      	movs	r3, #2
 8000a22:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000a24:	2300      	movs	r3, #0
 8000a26:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 8000a28:	2310      	movs	r3, #16
 8000a2a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000a2c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8000a30:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8000a32:	2304      	movs	r3, #4
 8000a34:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000a36:	2307      	movs	r3, #7
 8000a38:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a3a:	f107 0320 	add.w	r3, r7, #32
 8000a3e:	4618      	mov	r0, r3
 8000a40:	f003 fbe8 	bl	8004214 <HAL_RCC_OscConfig>
 8000a44:	4603      	mov	r3, r0
 8000a46:	2b00      	cmp	r3, #0
 8000a48:	d001      	beq.n	8000a4e <SystemClock_Config+0x9a>
  {
    Error_Handler();
 8000a4a:	f000 f9c4 	bl	8000dd6 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a4e:	230f      	movs	r3, #15
 8000a50:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a52:	2302      	movs	r3, #2
 8000a54:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a56:	2300      	movs	r3, #0
 8000a58:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000a5a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000a5e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000a60:	2300      	movs	r3, #0
 8000a62:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000a64:	f107 030c 	add.w	r3, r7, #12
 8000a68:	2102      	movs	r1, #2
 8000a6a:	4618      	mov	r0, r3
 8000a6c:	f003 fe4a 	bl	8004704 <HAL_RCC_ClockConfig>
 8000a70:	4603      	mov	r3, r0
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	d001      	beq.n	8000a7a <SystemClock_Config+0xc6>
  {
    Error_Handler();
 8000a76:	f000 f9ae 	bl	8000dd6 <Error_Handler>
  }
}
 8000a7a:	bf00      	nop
 8000a7c:	3750      	adds	r7, #80	; 0x50
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bd80      	pop	{r7, pc}
 8000a82:	bf00      	nop
 8000a84:	40023800 	.word	0x40023800
 8000a88:	40007000 	.word	0x40007000

08000a8c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000a90:	4b12      	ldr	r3, [pc, #72]	; (8000adc <MX_I2C1_Init+0x50>)
 8000a92:	4a13      	ldr	r2, [pc, #76]	; (8000ae0 <MX_I2C1_Init+0x54>)
 8000a94:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000a96:	4b11      	ldr	r3, [pc, #68]	; (8000adc <MX_I2C1_Init+0x50>)
 8000a98:	4a12      	ldr	r2, [pc, #72]	; (8000ae4 <MX_I2C1_Init+0x58>)
 8000a9a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000a9c:	4b0f      	ldr	r3, [pc, #60]	; (8000adc <MX_I2C1_Init+0x50>)
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000aa2:	4b0e      	ldr	r3, [pc, #56]	; (8000adc <MX_I2C1_Init+0x50>)
 8000aa4:	2200      	movs	r2, #0
 8000aa6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000aa8:	4b0c      	ldr	r3, [pc, #48]	; (8000adc <MX_I2C1_Init+0x50>)
 8000aaa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000aae:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000ab0:	4b0a      	ldr	r3, [pc, #40]	; (8000adc <MX_I2C1_Init+0x50>)
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000ab6:	4b09      	ldr	r3, [pc, #36]	; (8000adc <MX_I2C1_Init+0x50>)
 8000ab8:	2200      	movs	r2, #0
 8000aba:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000abc:	4b07      	ldr	r3, [pc, #28]	; (8000adc <MX_I2C1_Init+0x50>)
 8000abe:	2200      	movs	r2, #0
 8000ac0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000ac2:	4b06      	ldr	r3, [pc, #24]	; (8000adc <MX_I2C1_Init+0x50>)
 8000ac4:	2200      	movs	r2, #0
 8000ac6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000ac8:	4804      	ldr	r0, [pc, #16]	; (8000adc <MX_I2C1_Init+0x50>)
 8000aca:	f002 ff57 	bl	800397c <HAL_I2C_Init>
 8000ace:	4603      	mov	r3, r0
 8000ad0:	2b00      	cmp	r3, #0
 8000ad2:	d001      	beq.n	8000ad8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000ad4:	f000 f97f 	bl	8000dd6 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000ad8:	bf00      	nop
 8000ada:	bd80      	pop	{r7, pc}
 8000adc:	200003bc 	.word	0x200003bc
 8000ae0:	40005400 	.word	0x40005400
 8000ae4:	000186a0 	.word	0x000186a0

08000ae8 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	b092      	sub	sp, #72	; 0x48
 8000aec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000aee:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000af2:	2200      	movs	r2, #0
 8000af4:	601a      	str	r2, [r3, #0]
 8000af6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000af8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000afc:	2200      	movs	r2, #0
 8000afe:	601a      	str	r2, [r3, #0]
 8000b00:	605a      	str	r2, [r3, #4]
 8000b02:	609a      	str	r2, [r3, #8]
 8000b04:	60da      	str	r2, [r3, #12]
 8000b06:	611a      	str	r2, [r3, #16]
 8000b08:	615a      	str	r2, [r3, #20]
 8000b0a:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000b0c:	1d3b      	adds	r3, r7, #4
 8000b0e:	2220      	movs	r2, #32
 8000b10:	2100      	movs	r1, #0
 8000b12:	4618      	mov	r0, r3
 8000b14:	f007 fb9c 	bl	8008250 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000b18:	4b31      	ldr	r3, [pc, #196]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b1a:	4a32      	ldr	r2, [pc, #200]	; (8000be4 <MX_TIM1_Init+0xfc>)
 8000b1c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8000b1e:	4b30      	ldr	r3, [pc, #192]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b20:	2200      	movs	r2, #0
 8000b22:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000b24:	4b2e      	ldr	r3, [pc, #184]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b26:	2200      	movs	r2, #0
 8000b28:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 104;
 8000b2a:	4b2d      	ldr	r3, [pc, #180]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b2c:	2268      	movs	r2, #104	; 0x68
 8000b2e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000b30:	4b2b      	ldr	r3, [pc, #172]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b32:	2200      	movs	r2, #0
 8000b34:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000b36:	4b2a      	ldr	r3, [pc, #168]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b38:	2200      	movs	r2, #0
 8000b3a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000b3c:	4b28      	ldr	r3, [pc, #160]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8000b42:	4827      	ldr	r0, [pc, #156]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b44:	f004 f8d8 	bl	8004cf8 <HAL_TIM_PWM_Init>
 8000b48:	4603      	mov	r3, r0
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d001      	beq.n	8000b52 <MX_TIM1_Init+0x6a>
  {
    Error_Handler();
 8000b4e:	f000 f942 	bl	8000dd6 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b52:	2300      	movs	r3, #0
 8000b54:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b56:	2300      	movs	r3, #0
 8000b58:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000b5a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000b5e:	4619      	mov	r1, r3
 8000b60:	481f      	ldr	r0, [pc, #124]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b62:	f005 f88f 	bl	8005c84 <HAL_TIMEx_MasterConfigSynchronization>
 8000b66:	4603      	mov	r3, r0
 8000b68:	2b00      	cmp	r3, #0
 8000b6a:	d001      	beq.n	8000b70 <MX_TIM1_Init+0x88>
  {
    Error_Handler();
 8000b6c:	f000 f933 	bl	8000dd6 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000b70:	2360      	movs	r3, #96	; 0x60
 8000b72:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 8000b74:	2300      	movs	r3, #0
 8000b76:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000b78:	2300      	movs	r3, #0
 8000b7a:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000b80:	2300      	movs	r3, #0
 8000b82:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000b84:	2300      	movs	r3, #0
 8000b86:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000b88:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000b8c:	220c      	movs	r2, #12
 8000b8e:	4619      	mov	r1, r3
 8000b90:	4813      	ldr	r0, [pc, #76]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000b92:	f004 fc7f 	bl	8005494 <HAL_TIM_PWM_ConfigChannel>
 8000b96:	4603      	mov	r3, r0
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d001      	beq.n	8000ba0 <MX_TIM1_Init+0xb8>
  {
    Error_Handler();
 8000b9c:	f000 f91b 	bl	8000dd6 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8000ba8:	2300      	movs	r3, #0
 8000baa:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8000bac:	2300      	movs	r3, #0
 8000bae:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000bb0:	2300      	movs	r3, #0
 8000bb2:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000bb4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000bb8:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000bba:	2300      	movs	r3, #0
 8000bbc:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000bbe:	1d3b      	adds	r3, r7, #4
 8000bc0:	4619      	mov	r1, r3
 8000bc2:	4807      	ldr	r0, [pc, #28]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000bc4:	f005 f8cc 	bl	8005d60 <HAL_TIMEx_ConfigBreakDeadTime>
 8000bc8:	4603      	mov	r3, r0
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d001      	beq.n	8000bd2 <MX_TIM1_Init+0xea>
  {
    Error_Handler();
 8000bce:	f000 f902 	bl	8000dd6 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8000bd2:	4803      	ldr	r0, [pc, #12]	; (8000be0 <MX_TIM1_Init+0xf8>)
 8000bd4:	f000 fbc4 	bl	8001360 <HAL_TIM_MspPostInit>

}
 8000bd8:	bf00      	nop
 8000bda:	3748      	adds	r7, #72	; 0x48
 8000bdc:	46bd      	mov	sp, r7
 8000bde:	bd80      	pop	{r7, pc}
 8000be0:	20000410 	.word	0x20000410
 8000be4:	40010000 	.word	0x40010000

08000be8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000be8:	b580      	push	{r7, lr}
 8000bea:	b082      	sub	sp, #8
 8000bec:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000bee:	2300      	movs	r3, #0
 8000bf0:	607b      	str	r3, [r7, #4]
 8000bf2:	4b0c      	ldr	r3, [pc, #48]	; (8000c24 <MX_DMA_Init+0x3c>)
 8000bf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bf6:	4a0b      	ldr	r2, [pc, #44]	; (8000c24 <MX_DMA_Init+0x3c>)
 8000bf8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000bfc:	6313      	str	r3, [r2, #48]	; 0x30
 8000bfe:	4b09      	ldr	r3, [pc, #36]	; (8000c24 <MX_DMA_Init+0x3c>)
 8000c00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c02:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000c06:	607b      	str	r3, [r7, #4]
 8000c08:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream4_IRQn, 5, 0);
 8000c0a:	2200      	movs	r2, #0
 8000c0c:	2105      	movs	r1, #5
 8000c0e:	203c      	movs	r0, #60	; 0x3c
 8000c10:	f002 f942 	bl	8002e98 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 8000c14:	203c      	movs	r0, #60	; 0x3c
 8000c16:	f002 f95b 	bl	8002ed0 <HAL_NVIC_EnableIRQ>

}
 8000c1a:	bf00      	nop
 8000c1c:	3708      	adds	r7, #8
 8000c1e:	46bd      	mov	sp, r7
 8000c20:	bd80      	pop	{r7, pc}
 8000c22:	bf00      	nop
 8000c24:	40023800 	.word	0x40023800

08000c28 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c28:	b580      	push	{r7, lr}
 8000c2a:	b08a      	sub	sp, #40	; 0x28
 8000c2c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c2e:	f107 0314 	add.w	r3, r7, #20
 8000c32:	2200      	movs	r2, #0
 8000c34:	601a      	str	r2, [r3, #0]
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	60da      	str	r2, [r3, #12]
 8000c3c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c3e:	2300      	movs	r3, #0
 8000c40:	613b      	str	r3, [r7, #16]
 8000c42:	4b55      	ldr	r3, [pc, #340]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c46:	4a54      	ldr	r2, [pc, #336]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c48:	f043 0304 	orr.w	r3, r3, #4
 8000c4c:	6313      	str	r3, [r2, #48]	; 0x30
 8000c4e:	4b52      	ldr	r3, [pc, #328]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c52:	f003 0304 	and.w	r3, r3, #4
 8000c56:	613b      	str	r3, [r7, #16]
 8000c58:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	60fb      	str	r3, [r7, #12]
 8000c5e:	4b4e      	ldr	r3, [pc, #312]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c62:	4a4d      	ldr	r2, [pc, #308]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c68:	6313      	str	r3, [r2, #48]	; 0x30
 8000c6a:	4b4b      	ldr	r3, [pc, #300]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c72:	60fb      	str	r3, [r7, #12]
 8000c74:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c76:	2300      	movs	r3, #0
 8000c78:	60bb      	str	r3, [r7, #8]
 8000c7a:	4b47      	ldr	r3, [pc, #284]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c7e:	4a46      	ldr	r2, [pc, #280]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c80:	f043 0301 	orr.w	r3, r3, #1
 8000c84:	6313      	str	r3, [r2, #48]	; 0x30
 8000c86:	4b44      	ldr	r3, [pc, #272]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c8a:	f003 0301 	and.w	r3, r3, #1
 8000c8e:	60bb      	str	r3, [r7, #8]
 8000c90:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c92:	2300      	movs	r3, #0
 8000c94:	607b      	str	r3, [r7, #4]
 8000c96:	4b40      	ldr	r3, [pc, #256]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c9a:	4a3f      	ldr	r2, [pc, #252]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000c9c:	f043 0302 	orr.w	r3, r3, #2
 8000ca0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ca2:	4b3d      	ldr	r3, [pc, #244]	; (8000d98 <MX_GPIO_Init+0x170>)
 8000ca4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ca6:	f003 0302 	and.w	r3, r3, #2
 8000caa:	607b      	str	r3, [r7, #4]
 8000cac:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, REED_1_Pin|REED_2_Pin|REED_7_Pin, GPIO_PIN_RESET);
 8000cae:	2200      	movs	r2, #0
 8000cb0:	2183      	movs	r1, #131	; 0x83
 8000cb2:	483a      	ldr	r0, [pc, #232]	; (8000d9c <MX_GPIO_Init+0x174>)
 8000cb4:	f002 fe48 	bl	8003948 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|REED_4_Pin|REED_5_Pin|REED_8_Pin, GPIO_PIN_RESET);
 8000cb8:	2200      	movs	r2, #0
 8000cba:	f44f 7138 	mov.w	r1, #736	; 0x2e0
 8000cbe:	4838      	ldr	r0, [pc, #224]	; (8000da0 <MX_GPIO_Init+0x178>)
 8000cc0:	f002 fe42 	bl	8003948 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, REED_3_Pin|REED_6_Pin, GPIO_PIN_RESET);
 8000cc4:	2200      	movs	r2, #0
 8000cc6:	2141      	movs	r1, #65	; 0x41
 8000cc8:	4836      	ldr	r0, [pc, #216]	; (8000da4 <MX_GPIO_Init+0x17c>)
 8000cca:	f002 fe3d 	bl	8003948 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000cce:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000cd2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000cd4:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000cd8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cda:	2300      	movs	r3, #0
 8000cdc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000cde:	f107 0314 	add.w	r3, r7, #20
 8000ce2:	4619      	mov	r1, r3
 8000ce4:	482d      	ldr	r0, [pc, #180]	; (8000d9c <MX_GPIO_Init+0x174>)
 8000ce6:	f002 fc93 	bl	8003610 <HAL_GPIO_Init>

  /*Configure GPIO pins : REED_1_Pin REED_2_Pin REED_7_Pin */
  GPIO_InitStruct.Pin = REED_1_Pin|REED_2_Pin|REED_7_Pin;
 8000cea:	2383      	movs	r3, #131	; 0x83
 8000cec:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cee:	2301      	movs	r3, #1
 8000cf0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cfa:	f107 0314 	add.w	r3, r7, #20
 8000cfe:	4619      	mov	r1, r3
 8000d00:	4826      	ldr	r0, [pc, #152]	; (8000d9c <MX_GPIO_Init+0x174>)
 8000d02:	f002 fc85 	bl	8003610 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin REED_4_Pin REED_5_Pin REED_8_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|REED_4_Pin|REED_5_Pin|REED_8_Pin;
 8000d06:	f44f 7338 	mov.w	r3, #736	; 0x2e0
 8000d0a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d10:	2300      	movs	r3, #0
 8000d12:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d14:	2300      	movs	r3, #0
 8000d16:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d18:	f107 0314 	add.w	r3, r7, #20
 8000d1c:	4619      	mov	r1, r3
 8000d1e:	4820      	ldr	r0, [pc, #128]	; (8000da0 <MX_GPIO_Init+0x178>)
 8000d20:	f002 fc76 	bl	8003610 <HAL_GPIO_Init>

  /*Configure GPIO pins : REED_3_Pin REED_6_Pin */
  GPIO_InitStruct.Pin = REED_3_Pin|REED_6_Pin;
 8000d24:	2341      	movs	r3, #65	; 0x41
 8000d26:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d28:	2301      	movs	r3, #1
 8000d2a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d30:	2300      	movs	r3, #0
 8000d32:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d34:	f107 0314 	add.w	r3, r7, #20
 8000d38:	4619      	mov	r1, r3
 8000d3a:	481a      	ldr	r0, [pc, #104]	; (8000da4 <MX_GPIO_Init+0x17c>)
 8000d3c:	f002 fc68 	bl	8003610 <HAL_GPIO_Init>

  /*Configure GPIO pins : REED_B_Pin REED_H_Pin REED_G_Pin REED_D_Pin
                           REED_C_Pin REED_E_Pin */
  GPIO_InitStruct.Pin = REED_B_Pin|REED_H_Pin|REED_G_Pin|REED_D_Pin
 8000d40:	f246 4338 	movw	r3, #25656	; 0x6438
 8000d44:	617b      	str	r3, [r7, #20]
                          |REED_C_Pin|REED_E_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d46:	2300      	movs	r3, #0
 8000d48:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000d4a:	2302      	movs	r3, #2
 8000d4c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d4e:	f107 0314 	add.w	r3, r7, #20
 8000d52:	4619      	mov	r1, r3
 8000d54:	4813      	ldr	r0, [pc, #76]	; (8000da4 <MX_GPIO_Init+0x17c>)
 8000d56:	f002 fc5b 	bl	8003610 <HAL_GPIO_Init>

  /*Configure GPIO pins : BOTON_1_Pin BOTON_2_Pin BOTON_3_Pin */
  GPIO_InitStruct.Pin = BOTON_1_Pin|BOTON_2_Pin|BOTON_3_Pin;
 8000d5a:	f44f 7350 	mov.w	r3, #832	; 0x340
 8000d5e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d60:	2300      	movs	r3, #0
 8000d62:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d64:	2301      	movs	r3, #1
 8000d66:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d68:	f107 0314 	add.w	r3, r7, #20
 8000d6c:	4619      	mov	r1, r3
 8000d6e:	480b      	ldr	r0, [pc, #44]	; (8000d9c <MX_GPIO_Init+0x174>)
 8000d70:	f002 fc4e 	bl	8003610 <HAL_GPIO_Init>

  /*Configure GPIO pins : REED_A_Pin REED_F_Pin */
  GPIO_InitStruct.Pin = REED_A_Pin|REED_F_Pin;
 8000d74:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8000d78:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000d7e:	2302      	movs	r3, #2
 8000d80:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d82:	f107 0314 	add.w	r3, r7, #20
 8000d86:	4619      	mov	r1, r3
 8000d88:	4805      	ldr	r0, [pc, #20]	; (8000da0 <MX_GPIO_Init+0x178>)
 8000d8a:	f002 fc41 	bl	8003610 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000d8e:	bf00      	nop
 8000d90:	3728      	adds	r7, #40	; 0x28
 8000d92:	46bd      	mov	sp, r7
 8000d94:	bd80      	pop	{r7, pc}
 8000d96:	bf00      	nop
 8000d98:	40023800 	.word	0x40023800
 8000d9c:	40020800 	.word	0x40020800
 8000da0:	40020000 	.word	0x40020000
 8000da4:	40020400 	.word	0x40020400

08000da8 <StartDefaultTask>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000da8:	b580      	push	{r7, lr}
 8000daa:	b082      	sub	sp, #8
 8000dac:	af00      	add	r7, sp, #0
 8000dae:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
	/* Infinite loop */
	for (;;) {
		osDelay(1);
 8000db0:	2001      	movs	r0, #1
 8000db2:	f005 f8a6 	bl	8005f02 <osDelay>
 8000db6:	e7fb      	b.n	8000db0 <StartDefaultTask+0x8>

08000db8 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000db8:	b580      	push	{r7, lr}
 8000dba:	b082      	sub	sp, #8
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM2) {
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000dc8:	d101      	bne.n	8000dce <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000dca:	f001 ff8d 	bl	8002ce8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000dce:	bf00      	nop
 8000dd0:	3708      	adds	r7, #8
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	bd80      	pop	{r7, pc}

08000dd6 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000dd6:	b480      	push	{r7}
 8000dd8:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000dda:	b672      	cpsid	i
}
 8000ddc:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8000dde:	e7fe      	b.n	8000dde <Error_Handler+0x8>

08000de0 <get_last_sensor_change>:
char previous_sensor_state[8];
char new_sensor_state[8];

void (*get_sensors)(char[8]);

piece_change_t get_last_sensor_change(){
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b086      	sub	sp, #24
 8000de4:	af00      	add	r7, sp, #0

    get_sensors(new_sensor_state);
 8000de6:	4b38      	ldr	r3, [pc, #224]	; (8000ec8 <get_last_sensor_change+0xe8>)
 8000de8:	681b      	ldr	r3, [r3, #0]
 8000dea:	4838      	ldr	r0, [pc, #224]	; (8000ecc <get_last_sensor_change+0xec>)
 8000dec:	4798      	blx	r3

    piece_change_t ret = {0, NONE};
 8000dee:	2300      	movs	r3, #0
 8000df0:	713b      	strb	r3, [r7, #4]
 8000df2:	2300      	movs	r3, #0
 8000df4:	717b      	strb	r3, [r7, #5]

    for (int rank = 0; rank < 8; rank++) {
 8000df6:	2300      	movs	r3, #0
 8000df8:	617b      	str	r3, [r7, #20]
 8000dfa:	e054      	b.n	8000ea6 <get_last_sensor_change+0xc6>
        for (int file = 0; file < 8; file++) {
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	613b      	str	r3, [r7, #16]
 8000e00:	e04b      	b.n	8000e9a <get_last_sensor_change+0xba>
            char new_state = (new_sensor_state[rank]&(1<<file)) != 0;
 8000e02:	4a32      	ldr	r2, [pc, #200]	; (8000ecc <get_last_sensor_change+0xec>)
 8000e04:	697b      	ldr	r3, [r7, #20]
 8000e06:	4413      	add	r3, r2
 8000e08:	781b      	ldrb	r3, [r3, #0]
 8000e0a:	461a      	mov	r2, r3
 8000e0c:	693b      	ldr	r3, [r7, #16]
 8000e0e:	fa42 f303 	asr.w	r3, r2, r3
 8000e12:	f003 0301 	and.w	r3, r3, #1
 8000e16:	2b00      	cmp	r3, #0
 8000e18:	bf14      	ite	ne
 8000e1a:	2301      	movne	r3, #1
 8000e1c:	2300      	moveq	r3, #0
 8000e1e:	b2db      	uxtb	r3, r3
 8000e20:	72fb      	strb	r3, [r7, #11]
            char old_state = (previous_sensor_state[rank]&(1<<file)) != 0;
 8000e22:	4a2b      	ldr	r2, [pc, #172]	; (8000ed0 <get_last_sensor_change+0xf0>)
 8000e24:	697b      	ldr	r3, [r7, #20]
 8000e26:	4413      	add	r3, r2
 8000e28:	781b      	ldrb	r3, [r3, #0]
 8000e2a:	461a      	mov	r2, r3
 8000e2c:	693b      	ldr	r3, [r7, #16]
 8000e2e:	fa42 f303 	asr.w	r3, r2, r3
 8000e32:	f003 0301 	and.w	r3, r3, #1
 8000e36:	2b00      	cmp	r3, #0
 8000e38:	bf14      	ite	ne
 8000e3a:	2301      	movne	r3, #1
 8000e3c:	2300      	moveq	r3, #0
 8000e3e:	b2db      	uxtb	r3, r3
 8000e40:	72bb      	strb	r3, [r7, #10]
            if(new_state != old_state){
 8000e42:	7afa      	ldrb	r2, [r7, #11]
 8000e44:	7abb      	ldrb	r3, [r7, #10]
 8000e46:	429a      	cmp	r2, r3
 8000e48:	d024      	beq.n	8000e94 <get_last_sensor_change+0xb4>
                ret.square_affected = COORD2SQ(rank, file);
 8000e4a:	697b      	ldr	r3, [r7, #20]
 8000e4c:	b2db      	uxtb	r3, r3
 8000e4e:	011b      	lsls	r3, r3, #4
 8000e50:	b2da      	uxtb	r2, r3
 8000e52:	693b      	ldr	r3, [r7, #16]
 8000e54:	b2db      	uxtb	r3, r3
 8000e56:	4413      	add	r3, r2
 8000e58:	b2db      	uxtb	r3, r3
 8000e5a:	713b      	strb	r3, [r7, #4]
                ret.piece_action = new_state ? PLACED : REMOVED;
 8000e5c:	7afb      	ldrb	r3, [r7, #11]
 8000e5e:	2b00      	cmp	r3, #0
 8000e60:	d001      	beq.n	8000e66 <get_last_sensor_change+0x86>
 8000e62:	2302      	movs	r3, #2
 8000e64:	e000      	b.n	8000e68 <get_last_sensor_change+0x88>
 8000e66:	2301      	movs	r3, #1
 8000e68:	717b      	strb	r3, [r7, #5]
                for(int i = 0; i < 8; i++){
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	60fb      	str	r3, [r7, #12]
 8000e6e:	e00b      	b.n	8000e88 <get_last_sensor_change+0xa8>
                    previous_sensor_state[i] = new_sensor_state[i];
 8000e70:	4a16      	ldr	r2, [pc, #88]	; (8000ecc <get_last_sensor_change+0xec>)
 8000e72:	68fb      	ldr	r3, [r7, #12]
 8000e74:	4413      	add	r3, r2
 8000e76:	7819      	ldrb	r1, [r3, #0]
 8000e78:	4a15      	ldr	r2, [pc, #84]	; (8000ed0 <get_last_sensor_change+0xf0>)
 8000e7a:	68fb      	ldr	r3, [r7, #12]
 8000e7c:	4413      	add	r3, r2
 8000e7e:	460a      	mov	r2, r1
 8000e80:	701a      	strb	r2, [r3, #0]
                for(int i = 0; i < 8; i++){
 8000e82:	68fb      	ldr	r3, [r7, #12]
 8000e84:	3301      	adds	r3, #1
 8000e86:	60fb      	str	r3, [r7, #12]
 8000e88:	68fb      	ldr	r3, [r7, #12]
 8000e8a:	2b07      	cmp	r3, #7
 8000e8c:	ddf0      	ble.n	8000e70 <get_last_sensor_change+0x90>
                }
                return ret;
 8000e8e:	88bb      	ldrh	r3, [r7, #4]
 8000e90:	813b      	strh	r3, [r7, #8]
 8000e92:	e00d      	b.n	8000eb0 <get_last_sensor_change+0xd0>
        for (int file = 0; file < 8; file++) {
 8000e94:	693b      	ldr	r3, [r7, #16]
 8000e96:	3301      	adds	r3, #1
 8000e98:	613b      	str	r3, [r7, #16]
 8000e9a:	693b      	ldr	r3, [r7, #16]
 8000e9c:	2b07      	cmp	r3, #7
 8000e9e:	ddb0      	ble.n	8000e02 <get_last_sensor_change+0x22>
    for (int rank = 0; rank < 8; rank++) {
 8000ea0:	697b      	ldr	r3, [r7, #20]
 8000ea2:	3301      	adds	r3, #1
 8000ea4:	617b      	str	r3, [r7, #20]
 8000ea6:	697b      	ldr	r3, [r7, #20]
 8000ea8:	2b07      	cmp	r3, #7
 8000eaa:	dda7      	ble.n	8000dfc <get_last_sensor_change+0x1c>
            }
        }
    }
    return ret;
 8000eac:	88bb      	ldrh	r3, [r7, #4]
 8000eae:	813b      	strh	r3, [r7, #8]
}
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	7a3a      	ldrb	r2, [r7, #8]
 8000eb4:	f362 0307 	bfi	r3, r2, #0, #8
 8000eb8:	7a7a      	ldrb	r2, [r7, #9]
 8000eba:	f362 230f 	bfi	r3, r2, #8, #8
 8000ebe:	4618      	mov	r0, r3
 8000ec0:	3718      	adds	r7, #24
 8000ec2:	46bd      	mov	sp, r7
 8000ec4:	bd80      	pop	{r7, pc}
 8000ec6:	bf00      	nop
 8000ec8:	200004cc 	.word	0x200004cc
 8000ecc:	200004c4 	.word	0x200004c4
 8000ed0:	200004bc 	.word	0x200004bc

08000ed4 <is_board_ok>:

char movement_state = WAIT_STATE;

uint8_t square_lifted;

char is_board_ok(){
 8000ed4:	b580      	push	{r7, lr}
 8000ed6:	b086      	sub	sp, #24
 8000ed8:	af00      	add	r7, sp, #0
    char sensor_state[8];
    get_sensors(sensor_state);
 8000eda:	4b2b      	ldr	r3, [pc, #172]	; (8000f88 <is_board_ok+0xb4>)
 8000edc:	681b      	ldr	r3, [r3, #0]
 8000ede:	1d3a      	adds	r2, r7, #4
 8000ee0:	4610      	mov	r0, r2
 8000ee2:	4798      	blx	r3
    char board_ok = 1;
 8000ee4:	2301      	movs	r3, #1
 8000ee6:	75fb      	strb	r3, [r7, #23]

    for (int rank = 0; rank < 8; rank++) {
 8000ee8:	2300      	movs	r3, #0
 8000eea:	613b      	str	r3, [r7, #16]
 8000eec:	e044      	b.n	8000f78 <is_board_ok+0xa4>
        for (int file = 0; file < 8; file++) {
 8000eee:	2300      	movs	r3, #0
 8000ef0:	60fb      	str	r3, [r7, #12]
 8000ef2:	e03b      	b.n	8000f6c <is_board_ok+0x98>
            if((sensor_state[rank] & (1 << file)) && engine_get_piece(COORD2SQ(rank, file)) == PIECE_EMPTY){
 8000ef4:	1d3a      	adds	r2, r7, #4
 8000ef6:	693b      	ldr	r3, [r7, #16]
 8000ef8:	4413      	add	r3, r2
 8000efa:	781b      	ldrb	r3, [r3, #0]
 8000efc:	461a      	mov	r2, r3
 8000efe:	68fb      	ldr	r3, [r7, #12]
 8000f00:	fa42 f303 	asr.w	r3, r2, r3
 8000f04:	f003 0301 	and.w	r3, r3, #1
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d010      	beq.n	8000f2e <is_board_ok+0x5a>
 8000f0c:	693b      	ldr	r3, [r7, #16]
 8000f0e:	b2db      	uxtb	r3, r3
 8000f10:	011b      	lsls	r3, r3, #4
 8000f12:	b2da      	uxtb	r2, r3
 8000f14:	68fb      	ldr	r3, [r7, #12]
 8000f16:	b2db      	uxtb	r3, r3
 8000f18:	4413      	add	r3, r2
 8000f1a:	b2db      	uxtb	r3, r3
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	f000 fd95 	bl	8001a4c <engine_get_piece>
 8000f22:	4603      	mov	r3, r0
 8000f24:	2b06      	cmp	r3, #6
 8000f26:	d102      	bne.n	8000f2e <is_board_ok+0x5a>
                board_ok = 0;
 8000f28:	2300      	movs	r3, #0
 8000f2a:	75fb      	strb	r3, [r7, #23]
 8000f2c:	e01b      	b.n	8000f66 <is_board_ok+0x92>
            }
            else if(!(sensor_state[rank] & (1 << file)) && engine_get_piece(COORD2SQ(rank, file)) != PIECE_EMPTY){
 8000f2e:	1d3a      	adds	r2, r7, #4
 8000f30:	693b      	ldr	r3, [r7, #16]
 8000f32:	4413      	add	r3, r2
 8000f34:	781b      	ldrb	r3, [r3, #0]
 8000f36:	461a      	mov	r2, r3
 8000f38:	68fb      	ldr	r3, [r7, #12]
 8000f3a:	fa42 f303 	asr.w	r3, r2, r3
 8000f3e:	f003 0301 	and.w	r3, r3, #1
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d10f      	bne.n	8000f66 <is_board_ok+0x92>
 8000f46:	693b      	ldr	r3, [r7, #16]
 8000f48:	b2db      	uxtb	r3, r3
 8000f4a:	011b      	lsls	r3, r3, #4
 8000f4c:	b2da      	uxtb	r2, r3
 8000f4e:	68fb      	ldr	r3, [r7, #12]
 8000f50:	b2db      	uxtb	r3, r3
 8000f52:	4413      	add	r3, r2
 8000f54:	b2db      	uxtb	r3, r3
 8000f56:	4618      	mov	r0, r3
 8000f58:	f000 fd78 	bl	8001a4c <engine_get_piece>
 8000f5c:	4603      	mov	r3, r0
 8000f5e:	2b06      	cmp	r3, #6
 8000f60:	d001      	beq.n	8000f66 <is_board_ok+0x92>
                board_ok = 0;
 8000f62:	2300      	movs	r3, #0
 8000f64:	75fb      	strb	r3, [r7, #23]
        for (int file = 0; file < 8; file++) {
 8000f66:	68fb      	ldr	r3, [r7, #12]
 8000f68:	3301      	adds	r3, #1
 8000f6a:	60fb      	str	r3, [r7, #12]
 8000f6c:	68fb      	ldr	r3, [r7, #12]
 8000f6e:	2b07      	cmp	r3, #7
 8000f70:	ddc0      	ble.n	8000ef4 <is_board_ok+0x20>
    for (int rank = 0; rank < 8; rank++) {
 8000f72:	693b      	ldr	r3, [r7, #16]
 8000f74:	3301      	adds	r3, #1
 8000f76:	613b      	str	r3, [r7, #16]
 8000f78:	693b      	ldr	r3, [r7, #16]
 8000f7a:	2b07      	cmp	r3, #7
 8000f7c:	ddb7      	ble.n	8000eee <is_board_ok+0x1a>
            }
        }
    }
    return board_ok;
 8000f7e:	7dfb      	ldrb	r3, [r7, #23]
}
 8000f80:	4618      	mov	r0, r3
 8000f82:	3718      	adds	r7, #24
 8000f84:	46bd      	mov	sp, r7
 8000f86:	bd80      	pop	{r7, pc}
 8000f88:	200004cc 	.word	0x200004cc

08000f8c <get_lifted_moves>:

int get_lifted_moves(uint8_t square_lifted, move_t * valid_moves, int total_valid_moves){
 8000f8c:	b480      	push	{r7}
 8000f8e:	b087      	sub	sp, #28
 8000f90:	af00      	add	r7, sp, #0
 8000f92:	4603      	mov	r3, r0
 8000f94:	60b9      	str	r1, [r7, #8]
 8000f96:	607a      	str	r2, [r7, #4]
 8000f98:	73fb      	strb	r3, [r7, #15]

    int lifted_piece_valid_moves = 0;
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	617b      	str	r3, [r7, #20]

    for(int i = 0; i < total_valid_moves; i++){
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	613b      	str	r3, [r7, #16]
 8000fa2:	e00f      	b.n	8000fc4 <get_lifted_moves+0x38>
        if(valid_moves[i].from == square_lifted){
 8000fa4:	693a      	ldr	r2, [r7, #16]
 8000fa6:	4613      	mov	r3, r2
 8000fa8:	005b      	lsls	r3, r3, #1
 8000faa:	4413      	add	r3, r2
 8000fac:	68ba      	ldr	r2, [r7, #8]
 8000fae:	4413      	add	r3, r2
 8000fb0:	781b      	ldrb	r3, [r3, #0]
 8000fb2:	7bfa      	ldrb	r2, [r7, #15]
 8000fb4:	429a      	cmp	r2, r3
 8000fb6:	d102      	bne.n	8000fbe <get_lifted_moves+0x32>
            lifted_piece_valid_moves ++;
 8000fb8:	697b      	ldr	r3, [r7, #20]
 8000fba:	3301      	adds	r3, #1
 8000fbc:	617b      	str	r3, [r7, #20]
    for(int i = 0; i < total_valid_moves; i++){
 8000fbe:	693b      	ldr	r3, [r7, #16]
 8000fc0:	3301      	adds	r3, #1
 8000fc2:	613b      	str	r3, [r7, #16]
 8000fc4:	693a      	ldr	r2, [r7, #16]
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	429a      	cmp	r2, r3
 8000fca:	dbeb      	blt.n	8000fa4 <get_lifted_moves+0x18>
        }
    }
    return lifted_piece_valid_moves;
 8000fcc:	697b      	ldr	r3, [r7, #20]
}
 8000fce:	4618      	mov	r0, r3
 8000fd0:	371c      	adds	r7, #28
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd8:	4770      	bx	lr
	...

08000fdc <movement_fsm>:

int total_valid_moves;
move_t valid_moves[255];

void movement_fsm(){
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b086      	sub	sp, #24
 8000fe0:	af00      	add	r7, sp, #0

    piece_change_t piece_change = get_last_sensor_change();
 8000fe2:	f7ff fefd 	bl	8000de0 <get_last_sensor_change>
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	80bb      	strh	r3, [r7, #4]


    int lifted_piece_valid_moves;
    char board_ok;

    switch (movement_state)
 8000fea:	4b6b      	ldr	r3, [pc, #428]	; (8001198 <movement_fsm+0x1bc>)
 8000fec:	781b      	ldrb	r3, [r3, #0]
 8000fee:	2b03      	cmp	r3, #3
 8000ff0:	f000 80b8 	beq.w	8001164 <movement_fsm+0x188>
 8000ff4:	2b03      	cmp	r3, #3
 8000ff6:	f300 80c3 	bgt.w	8001180 <movement_fsm+0x1a4>
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d002      	beq.n	8001004 <movement_fsm+0x28>
 8000ffe:	2b01      	cmp	r3, #1
 8001000:	d03f      	beq.n	8001082 <movement_fsm+0xa6>
        break;



    default:
        break;
 8001002:	e0bd      	b.n	8001180 <movement_fsm+0x1a4>
        if(piece_change.piece_action == REMOVED){
 8001004:	797b      	ldrb	r3, [r7, #5]
 8001006:	2b01      	cmp	r3, #1
 8001008:	d130      	bne.n	800106c <movement_fsm+0x90>
            movement_state = PIECE_LIFTED_STATE;
 800100a:	4b63      	ldr	r3, [pc, #396]	; (8001198 <movement_fsm+0x1bc>)
 800100c:	2201      	movs	r2, #1
 800100e:	701a      	strb	r2, [r3, #0]
            square_lifted = piece_change.square_affected;
 8001010:	793a      	ldrb	r2, [r7, #4]
 8001012:	4b62      	ldr	r3, [pc, #392]	; (800119c <movement_fsm+0x1c0>)
 8001014:	701a      	strb	r2, [r3, #0]
            total_valid_moves = engine_list_moves(valid_moves);
 8001016:	4862      	ldr	r0, [pc, #392]	; (80011a0 <movement_fsm+0x1c4>)
 8001018:	f000 fd08 	bl	8001a2c <engine_list_moves>
 800101c:	4603      	mov	r3, r0
 800101e:	4a61      	ldr	r2, [pc, #388]	; (80011a4 <movement_fsm+0x1c8>)
 8001020:	6013      	str	r3, [r2, #0]
            lifted_piece_valid_moves = get_lifted_moves(square_lifted, valid_moves, total_valid_moves);
 8001022:	4b5e      	ldr	r3, [pc, #376]	; (800119c <movement_fsm+0x1c0>)
 8001024:	781b      	ldrb	r3, [r3, #0]
 8001026:	4a5f      	ldr	r2, [pc, #380]	; (80011a4 <movement_fsm+0x1c8>)
 8001028:	6812      	ldr	r2, [r2, #0]
 800102a:	495d      	ldr	r1, [pc, #372]	; (80011a0 <movement_fsm+0x1c4>)
 800102c:	4618      	mov	r0, r3
 800102e:	f7ff ffad 	bl	8000f8c <get_lifted_moves>
 8001032:	60b8      	str	r0, [r7, #8]
            if(lifted_piece_valid_moves == 0){
 8001034:	68bb      	ldr	r3, [r7, #8]
 8001036:	2b00      	cmp	r3, #0
 8001038:	d106      	bne.n	8001048 <movement_fsm+0x6c>
                movement_state = ERROR_STATE;
 800103a:	4b57      	ldr	r3, [pc, #348]	; (8001198 <movement_fsm+0x1bc>)
 800103c:	2203      	movs	r2, #3
 800103e:	701a      	strb	r2, [r3, #0]
                lighting_set_state(LIGHTING_ERROR_STATE);
 8001040:	2002      	movs	r0, #2
 8001042:	f001 fc43 	bl	80028cc <lighting_set_state>
        break;
 8001046:	e09d      	b.n	8001184 <movement_fsm+0x1a8>
                movement_state = PIECE_LIFTED_STATE;
 8001048:	4b53      	ldr	r3, [pc, #332]	; (8001198 <movement_fsm+0x1bc>)
 800104a:	2201      	movs	r2, #1
 800104c:	701a      	strb	r2, [r3, #0]
                lighting_piece_lifted_square(square_lifted);
 800104e:	4b53      	ldr	r3, [pc, #332]	; (800119c <movement_fsm+0x1c0>)
 8001050:	781b      	ldrb	r3, [r3, #0]
 8001052:	4618      	mov	r0, r3
 8001054:	f001 fc4a 	bl	80028ec <lighting_piece_lifted_square>
                set_valid_moves(valid_moves, total_valid_moves);
 8001058:	4b52      	ldr	r3, [pc, #328]	; (80011a4 <movement_fsm+0x1c8>)
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	4619      	mov	r1, r3
 800105e:	4850      	ldr	r0, [pc, #320]	; (80011a0 <movement_fsm+0x1c4>)
 8001060:	f001 fc54 	bl	800290c <set_valid_moves>
                lighting_set_state(LIGHTING_LIFTED_STATE);                
 8001064:	2001      	movs	r0, #1
 8001066:	f001 fc31 	bl	80028cc <lighting_set_state>
        break;
 800106a:	e08b      	b.n	8001184 <movement_fsm+0x1a8>
        else if(piece_change.piece_action == PLACED){
 800106c:	797b      	ldrb	r3, [r7, #5]
 800106e:	2b02      	cmp	r3, #2
 8001070:	f040 8088 	bne.w	8001184 <movement_fsm+0x1a8>
            movement_state = ERROR_STATE;
 8001074:	4b48      	ldr	r3, [pc, #288]	; (8001198 <movement_fsm+0x1bc>)
 8001076:	2203      	movs	r2, #3
 8001078:	701a      	strb	r2, [r3, #0]
            lighting_set_state(LIGHTING_ERROR_STATE);
 800107a:	2002      	movs	r0, #2
 800107c:	f001 fc26 	bl	80028cc <lighting_set_state>
        break;
 8001080:	e080      	b.n	8001184 <movement_fsm+0x1a8>
        if(piece_change.piece_action == PLACED){
 8001082:	797b      	ldrb	r3, [r7, #5]
 8001084:	2b02      	cmp	r3, #2
 8001086:	d11a      	bne.n	80010be <movement_fsm+0xe2>
            move_played.from = square_lifted;
 8001088:	4b44      	ldr	r3, [pc, #272]	; (800119c <movement_fsm+0x1c0>)
 800108a:	781b      	ldrb	r3, [r3, #0]
 800108c:	703b      	strb	r3, [r7, #0]
            move_played.to = piece_change.square_affected;
 800108e:	793b      	ldrb	r3, [r7, #4]
 8001090:	707b      	strb	r3, [r7, #1]
            char move_ok = engine_move_piece(move_played);
 8001092:	6838      	ldr	r0, [r7, #0]
 8001094:	f000 fcb8 	bl	8001a08 <engine_move_piece>
 8001098:	4603      	mov	r3, r0
 800109a:	73bb      	strb	r3, [r7, #14]
            if(move_ok){
 800109c:	7bbb      	ldrb	r3, [r7, #14]
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d006      	beq.n	80010b0 <movement_fsm+0xd4>
                movement_state = WAIT_STATE;
 80010a2:	4b3d      	ldr	r3, [pc, #244]	; (8001198 <movement_fsm+0x1bc>)
 80010a4:	2200      	movs	r2, #0
 80010a6:	701a      	strb	r2, [r3, #0]
                lighting_set_state(LIGHTING_IDLE_STATE);
 80010a8:	2000      	movs	r0, #0
 80010aa:	f001 fc0f 	bl	80028cc <lighting_set_state>
        break;
 80010ae:	e06b      	b.n	8001188 <movement_fsm+0x1ac>
                movement_state = ERROR_STATE;
 80010b0:	4b39      	ldr	r3, [pc, #228]	; (8001198 <movement_fsm+0x1bc>)
 80010b2:	2203      	movs	r2, #3
 80010b4:	701a      	strb	r2, [r3, #0]
                lighting_set_state(LIGHTING_ERROR_STATE);
 80010b6:	2002      	movs	r0, #2
 80010b8:	f001 fc08 	bl	80028cc <lighting_set_state>
        break;
 80010bc:	e064      	b.n	8001188 <movement_fsm+0x1ac>
        else if(piece_change.piece_action == REMOVED){
 80010be:	797b      	ldrb	r3, [r7, #5]
 80010c0:	2b01      	cmp	r3, #1
 80010c2:	d161      	bne.n	8001188 <movement_fsm+0x1ac>
            total_valid_moves = engine_list_moves(valid_moves);
 80010c4:	4836      	ldr	r0, [pc, #216]	; (80011a0 <movement_fsm+0x1c4>)
 80010c6:	f000 fcb1 	bl	8001a2c <engine_list_moves>
 80010ca:	4603      	mov	r3, r0
 80010cc:	4a35      	ldr	r2, [pc, #212]	; (80011a4 <movement_fsm+0x1c8>)
 80010ce:	6013      	str	r3, [r2, #0]
            char captured_piece_is_valid = 0;
 80010d0:	2300      	movs	r3, #0
 80010d2:	75fb      	strb	r3, [r7, #23]
            for(int i = 0; i < total_valid_moves; i++){
 80010d4:	2300      	movs	r3, #0
 80010d6:	613b      	str	r3, [r7, #16]
 80010d8:	e035      	b.n	8001146 <movement_fsm+0x16a>
                if(valid_moves[i].from == square_lifted && valid_moves[i].to == piece_change.square_affected){
 80010da:	4931      	ldr	r1, [pc, #196]	; (80011a0 <movement_fsm+0x1c4>)
 80010dc:	693a      	ldr	r2, [r7, #16]
 80010de:	4613      	mov	r3, r2
 80010e0:	005b      	lsls	r3, r3, #1
 80010e2:	4413      	add	r3, r2
 80010e4:	440b      	add	r3, r1
 80010e6:	781a      	ldrb	r2, [r3, #0]
 80010e8:	4b2c      	ldr	r3, [pc, #176]	; (800119c <movement_fsm+0x1c0>)
 80010ea:	781b      	ldrb	r3, [r3, #0]
 80010ec:	429a      	cmp	r2, r3
 80010ee:	d127      	bne.n	8001140 <movement_fsm+0x164>
 80010f0:	492b      	ldr	r1, [pc, #172]	; (80011a0 <movement_fsm+0x1c4>)
 80010f2:	693a      	ldr	r2, [r7, #16]
 80010f4:	4613      	mov	r3, r2
 80010f6:	005b      	lsls	r3, r3, #1
 80010f8:	4413      	add	r3, r2
 80010fa:	440b      	add	r3, r1
 80010fc:	3301      	adds	r3, #1
 80010fe:	781a      	ldrb	r2, [r3, #0]
 8001100:	793b      	ldrb	r3, [r7, #4]
 8001102:	429a      	cmp	r2, r3
 8001104:	d11c      	bne.n	8001140 <movement_fsm+0x164>
                    captured_piece_is_valid = 1;
 8001106:	2301      	movs	r3, #1
 8001108:	75fb      	strb	r3, [r7, #23]
                    lighting_piece_lifted_square(piece_change.square_affected);
 800110a:	793b      	ldrb	r3, [r7, #4]
 800110c:	4618      	mov	r0, r3
 800110e:	f001 fbed 	bl	80028ec <lighting_piece_lifted_square>
                    lighting_set_state(LIGHTING_CAPTURE_STATE); 
 8001112:	2003      	movs	r0, #3
 8001114:	f001 fbda 	bl	80028cc <lighting_set_state>
                    engine_move_piece(valid_moves[i]);
 8001118:	4921      	ldr	r1, [pc, #132]	; (80011a0 <movement_fsm+0x1c4>)
 800111a:	693a      	ldr	r2, [r7, #16]
 800111c:	4613      	mov	r3, r2
 800111e:	005b      	lsls	r3, r3, #1
 8001120:	4413      	add	r3, r2
 8001122:	440b      	add	r3, r1
 8001124:	781a      	ldrb	r2, [r3, #0]
 8001126:	7859      	ldrb	r1, [r3, #1]
 8001128:	0209      	lsls	r1, r1, #8
 800112a:	430a      	orrs	r2, r1
 800112c:	789b      	ldrb	r3, [r3, #2]
 800112e:	041b      	lsls	r3, r3, #16
 8001130:	431a      	orrs	r2, r3
 8001132:	2300      	movs	r3, #0
 8001134:	f362 0317 	bfi	r3, r2, #0, #24
 8001138:	4618      	mov	r0, r3
 800113a:	f000 fc65 	bl	8001a08 <engine_move_piece>
                    break;
 800113e:	e007      	b.n	8001150 <movement_fsm+0x174>
            for(int i = 0; i < total_valid_moves; i++){
 8001140:	693b      	ldr	r3, [r7, #16]
 8001142:	3301      	adds	r3, #1
 8001144:	613b      	str	r3, [r7, #16]
 8001146:	4b17      	ldr	r3, [pc, #92]	; (80011a4 <movement_fsm+0x1c8>)
 8001148:	681b      	ldr	r3, [r3, #0]
 800114a:	693a      	ldr	r2, [r7, #16]
 800114c:	429a      	cmp	r2, r3
 800114e:	dbc4      	blt.n	80010da <movement_fsm+0xfe>
            if(!captured_piece_is_valid){
 8001150:	7dfb      	ldrb	r3, [r7, #23]
 8001152:	2b00      	cmp	r3, #0
 8001154:	d118      	bne.n	8001188 <movement_fsm+0x1ac>
                movement_state = ERROR_STATE;
 8001156:	4b10      	ldr	r3, [pc, #64]	; (8001198 <movement_fsm+0x1bc>)
 8001158:	2203      	movs	r2, #3
 800115a:	701a      	strb	r2, [r3, #0]
                lighting_set_state(LIGHTING_ERROR_STATE);
 800115c:	2002      	movs	r0, #2
 800115e:	f001 fbb5 	bl	80028cc <lighting_set_state>
        break;
 8001162:	e011      	b.n	8001188 <movement_fsm+0x1ac>
        board_ok = is_board_ok();
 8001164:	f7ff feb6 	bl	8000ed4 <is_board_ok>
 8001168:	4603      	mov	r3, r0
 800116a:	73fb      	strb	r3, [r7, #15]
        if(board_ok){
 800116c:	7bfb      	ldrb	r3, [r7, #15]
 800116e:	2b00      	cmp	r3, #0
 8001170:	d00c      	beq.n	800118c <movement_fsm+0x1b0>
            movement_state = WAIT_STATE;
 8001172:	4b09      	ldr	r3, [pc, #36]	; (8001198 <movement_fsm+0x1bc>)
 8001174:	2200      	movs	r2, #0
 8001176:	701a      	strb	r2, [r3, #0]
            lighting_set_state(LIGHTING_IDLE_STATE);
 8001178:	2000      	movs	r0, #0
 800117a:	f001 fba7 	bl	80028cc <lighting_set_state>
        break;
 800117e:	e005      	b.n	800118c <movement_fsm+0x1b0>
        break;
 8001180:	bf00      	nop
 8001182:	e004      	b.n	800118e <movement_fsm+0x1b2>
        break;
 8001184:	bf00      	nop
 8001186:	e002      	b.n	800118e <movement_fsm+0x1b2>
        break;
 8001188:	bf00      	nop
 800118a:	e000      	b.n	800118e <movement_fsm+0x1b2>
        break;
 800118c:	bf00      	nop
    }
}
 800118e:	bf00      	nop
 8001190:	3718      	adds	r7, #24
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}
 8001196:	bf00      	nop
 8001198:	200004d0 	.word	0x200004d0
 800119c:	200004d1 	.word	0x200004d1
 80011a0:	200004d8 	.word	0x200004d8
 80011a4:	200004d4 	.word	0x200004d4

080011a8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	b082      	sub	sp, #8
 80011ac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80011ae:	2300      	movs	r3, #0
 80011b0:	607b      	str	r3, [r7, #4]
 80011b2:	4b12      	ldr	r3, [pc, #72]	; (80011fc <HAL_MspInit+0x54>)
 80011b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011b6:	4a11      	ldr	r2, [pc, #68]	; (80011fc <HAL_MspInit+0x54>)
 80011b8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011bc:	6453      	str	r3, [r2, #68]	; 0x44
 80011be:	4b0f      	ldr	r3, [pc, #60]	; (80011fc <HAL_MspInit+0x54>)
 80011c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011c2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011c6:	607b      	str	r3, [r7, #4]
 80011c8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80011ca:	2300      	movs	r3, #0
 80011cc:	603b      	str	r3, [r7, #0]
 80011ce:	4b0b      	ldr	r3, [pc, #44]	; (80011fc <HAL_MspInit+0x54>)
 80011d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011d2:	4a0a      	ldr	r2, [pc, #40]	; (80011fc <HAL_MspInit+0x54>)
 80011d4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80011d8:	6413      	str	r3, [r2, #64]	; 0x40
 80011da:	4b08      	ldr	r3, [pc, #32]	; (80011fc <HAL_MspInit+0x54>)
 80011dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011e2:	603b      	str	r3, [r7, #0]
 80011e4:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80011e6:	2200      	movs	r2, #0
 80011e8:	210f      	movs	r1, #15
 80011ea:	f06f 0001 	mvn.w	r0, #1
 80011ee:	f001 fe53 	bl	8002e98 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011f2:	bf00      	nop
 80011f4:	3708      	adds	r7, #8
 80011f6:	46bd      	mov	sp, r7
 80011f8:	bd80      	pop	{r7, pc}
 80011fa:	bf00      	nop
 80011fc:	40023800 	.word	0x40023800

08001200 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001200:	b580      	push	{r7, lr}
 8001202:	b08a      	sub	sp, #40	; 0x28
 8001204:	af00      	add	r7, sp, #0
 8001206:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001208:	f107 0314 	add.w	r3, r7, #20
 800120c:	2200      	movs	r2, #0
 800120e:	601a      	str	r2, [r3, #0]
 8001210:	605a      	str	r2, [r3, #4]
 8001212:	609a      	str	r2, [r3, #8]
 8001214:	60da      	str	r2, [r3, #12]
 8001216:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	4a19      	ldr	r2, [pc, #100]	; (8001284 <HAL_I2C_MspInit+0x84>)
 800121e:	4293      	cmp	r3, r2
 8001220:	d12c      	bne.n	800127c <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001222:	2300      	movs	r3, #0
 8001224:	613b      	str	r3, [r7, #16]
 8001226:	4b18      	ldr	r3, [pc, #96]	; (8001288 <HAL_I2C_MspInit+0x88>)
 8001228:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800122a:	4a17      	ldr	r2, [pc, #92]	; (8001288 <HAL_I2C_MspInit+0x88>)
 800122c:	f043 0302 	orr.w	r3, r3, #2
 8001230:	6313      	str	r3, [r2, #48]	; 0x30
 8001232:	4b15      	ldr	r3, [pc, #84]	; (8001288 <HAL_I2C_MspInit+0x88>)
 8001234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001236:	f003 0302 	and.w	r3, r3, #2
 800123a:	613b      	str	r3, [r7, #16]
 800123c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800123e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001242:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001244:	2312      	movs	r3, #18
 8001246:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001248:	2301      	movs	r3, #1
 800124a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800124c:	2303      	movs	r3, #3
 800124e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001250:	2304      	movs	r3, #4
 8001252:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001254:	f107 0314 	add.w	r3, r7, #20
 8001258:	4619      	mov	r1, r3
 800125a:	480c      	ldr	r0, [pc, #48]	; (800128c <HAL_I2C_MspInit+0x8c>)
 800125c:	f002 f9d8 	bl	8003610 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001260:	2300      	movs	r3, #0
 8001262:	60fb      	str	r3, [r7, #12]
 8001264:	4b08      	ldr	r3, [pc, #32]	; (8001288 <HAL_I2C_MspInit+0x88>)
 8001266:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001268:	4a07      	ldr	r2, [pc, #28]	; (8001288 <HAL_I2C_MspInit+0x88>)
 800126a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800126e:	6413      	str	r3, [r2, #64]	; 0x40
 8001270:	4b05      	ldr	r3, [pc, #20]	; (8001288 <HAL_I2C_MspInit+0x88>)
 8001272:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001274:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001278:	60fb      	str	r3, [r7, #12]
 800127a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800127c:	bf00      	nop
 800127e:	3728      	adds	r7, #40	; 0x28
 8001280:	46bd      	mov	sp, r7
 8001282:	bd80      	pop	{r7, pc}
 8001284:	40005400 	.word	0x40005400
 8001288:	40023800 	.word	0x40023800
 800128c:	40020400 	.word	0x40020400

08001290 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001290:	b580      	push	{r7, lr}
 8001292:	b084      	sub	sp, #16
 8001294:	af00      	add	r7, sp, #0
 8001296:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	4a2c      	ldr	r2, [pc, #176]	; (8001350 <HAL_TIM_PWM_MspInit+0xc0>)
 800129e:	4293      	cmp	r3, r2
 80012a0:	d151      	bne.n	8001346 <HAL_TIM_PWM_MspInit+0xb6>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80012a2:	2300      	movs	r3, #0
 80012a4:	60fb      	str	r3, [r7, #12]
 80012a6:	4b2b      	ldr	r3, [pc, #172]	; (8001354 <HAL_TIM_PWM_MspInit+0xc4>)
 80012a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012aa:	4a2a      	ldr	r2, [pc, #168]	; (8001354 <HAL_TIM_PWM_MspInit+0xc4>)
 80012ac:	f043 0301 	orr.w	r3, r3, #1
 80012b0:	6453      	str	r3, [r2, #68]	; 0x44
 80012b2:	4b28      	ldr	r3, [pc, #160]	; (8001354 <HAL_TIM_PWM_MspInit+0xc4>)
 80012b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012b6:	f003 0301 	and.w	r3, r3, #1
 80012ba:	60fb      	str	r3, [r7, #12]
 80012bc:	68fb      	ldr	r3, [r7, #12]

    /* TIM1 DMA Init */
    /* TIM1_CH4_TRIG_COM Init */
    hdma_tim1_ch4_trig_com.Instance = DMA2_Stream4;
 80012be:	4b26      	ldr	r3, [pc, #152]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012c0:	4a26      	ldr	r2, [pc, #152]	; (800135c <HAL_TIM_PWM_MspInit+0xcc>)
 80012c2:	601a      	str	r2, [r3, #0]
    hdma_tim1_ch4_trig_com.Init.Channel = DMA_CHANNEL_6;
 80012c4:	4b24      	ldr	r3, [pc, #144]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012c6:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80012ca:	605a      	str	r2, [r3, #4]
    hdma_tim1_ch4_trig_com.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80012cc:	4b22      	ldr	r3, [pc, #136]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012ce:	2240      	movs	r2, #64	; 0x40
 80012d0:	609a      	str	r2, [r3, #8]
    hdma_tim1_ch4_trig_com.Init.PeriphInc = DMA_PINC_DISABLE;
 80012d2:	4b21      	ldr	r3, [pc, #132]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	60da      	str	r2, [r3, #12]
    hdma_tim1_ch4_trig_com.Init.MemInc = DMA_MINC_ENABLE;
 80012d8:	4b1f      	ldr	r3, [pc, #124]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80012de:	611a      	str	r2, [r3, #16]
    hdma_tim1_ch4_trig_com.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80012e0:	4b1d      	ldr	r3, [pc, #116]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012e2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80012e6:	615a      	str	r2, [r3, #20]
    hdma_tim1_ch4_trig_com.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80012e8:	4b1b      	ldr	r3, [pc, #108]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012ea:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80012ee:	619a      	str	r2, [r3, #24]
    hdma_tim1_ch4_trig_com.Init.Mode = DMA_NORMAL;
 80012f0:	4b19      	ldr	r3, [pc, #100]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	61da      	str	r2, [r3, #28]
    hdma_tim1_ch4_trig_com.Init.Priority = DMA_PRIORITY_LOW;
 80012f6:	4b18      	ldr	r3, [pc, #96]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012f8:	2200      	movs	r2, #0
 80012fa:	621a      	str	r2, [r3, #32]
    hdma_tim1_ch4_trig_com.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80012fc:	4b16      	ldr	r3, [pc, #88]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 80012fe:	2200      	movs	r2, #0
 8001300:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim1_ch4_trig_com) != HAL_OK)
 8001302:	4815      	ldr	r0, [pc, #84]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 8001304:	f001 fdf2 	bl	8002eec <HAL_DMA_Init>
 8001308:	4603      	mov	r3, r0
 800130a:	2b00      	cmp	r3, #0
 800130c:	d001      	beq.n	8001312 <HAL_TIM_PWM_MspInit+0x82>
    {
      Error_Handler();
 800130e:	f7ff fd62 	bl	8000dd6 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_CC4],hdma_tim1_ch4_trig_com);
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	4a10      	ldr	r2, [pc, #64]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 8001316:	631a      	str	r2, [r3, #48]	; 0x30
 8001318:	4a0f      	ldr	r2, [pc, #60]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	6393      	str	r3, [r2, #56]	; 0x38
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_TRIGGER],hdma_tim1_ch4_trig_com);
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	4a0d      	ldr	r2, [pc, #52]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 8001322:	639a      	str	r2, [r3, #56]	; 0x38
 8001324:	4a0c      	ldr	r2, [pc, #48]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	6393      	str	r3, [r2, #56]	; 0x38
    __HAL_LINKDMA(htim_pwm,hdma[TIM_DMA_ID_COMMUTATION],hdma_tim1_ch4_trig_com);
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	4a0a      	ldr	r2, [pc, #40]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 800132e:	635a      	str	r2, [r3, #52]	; 0x34
 8001330:	4a09      	ldr	r2, [pc, #36]	; (8001358 <HAL_TIM_PWM_MspInit+0xc8>)
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	6393      	str	r3, [r2, #56]	; 0x38

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM11_IRQn, 5, 0);
 8001336:	2200      	movs	r2, #0
 8001338:	2105      	movs	r1, #5
 800133a:	201a      	movs	r0, #26
 800133c:	f001 fdac 	bl	8002e98 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM11_IRQn);
 8001340:	201a      	movs	r0, #26
 8001342:	f001 fdc5 	bl	8002ed0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8001346:	bf00      	nop
 8001348:	3710      	adds	r7, #16
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}
 800134e:	bf00      	nop
 8001350:	40010000 	.word	0x40010000
 8001354:	40023800 	.word	0x40023800
 8001358:	20000458 	.word	0x20000458
 800135c:	40026470 	.word	0x40026470

08001360 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001360:	b580      	push	{r7, lr}
 8001362:	b088      	sub	sp, #32
 8001364:	af00      	add	r7, sp, #0
 8001366:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001368:	f107 030c 	add.w	r3, r7, #12
 800136c:	2200      	movs	r2, #0
 800136e:	601a      	str	r2, [r3, #0]
 8001370:	605a      	str	r2, [r3, #4]
 8001372:	609a      	str	r2, [r3, #8]
 8001374:	60da      	str	r2, [r3, #12]
 8001376:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	4a12      	ldr	r2, [pc, #72]	; (80013c8 <HAL_TIM_MspPostInit+0x68>)
 800137e:	4293      	cmp	r3, r2
 8001380:	d11e      	bne.n	80013c0 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001382:	2300      	movs	r3, #0
 8001384:	60bb      	str	r3, [r7, #8]
 8001386:	4b11      	ldr	r3, [pc, #68]	; (80013cc <HAL_TIM_MspPostInit+0x6c>)
 8001388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800138a:	4a10      	ldr	r2, [pc, #64]	; (80013cc <HAL_TIM_MspPostInit+0x6c>)
 800138c:	f043 0301 	orr.w	r3, r3, #1
 8001390:	6313      	str	r3, [r2, #48]	; 0x30
 8001392:	4b0e      	ldr	r3, [pc, #56]	; (80013cc <HAL_TIM_MspPostInit+0x6c>)
 8001394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001396:	f003 0301 	and.w	r3, r3, #1
 800139a:	60bb      	str	r3, [r7, #8]
 800139c:	68bb      	ldr	r3, [r7, #8]
    /**TIM1 GPIO Configuration
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = LED_DOUT_Pin;
 800139e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80013a2:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013a4:	2302      	movs	r3, #2
 80013a6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013a8:	2300      	movs	r3, #0
 80013aa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013ac:	2300      	movs	r3, #0
 80013ae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 80013b0:	2301      	movs	r3, #1
 80013b2:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(LED_DOUT_GPIO_Port, &GPIO_InitStruct);
 80013b4:	f107 030c 	add.w	r3, r7, #12
 80013b8:	4619      	mov	r1, r3
 80013ba:	4805      	ldr	r0, [pc, #20]	; (80013d0 <HAL_TIM_MspPostInit+0x70>)
 80013bc:	f002 f928 	bl	8003610 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 80013c0:	bf00      	nop
 80013c2:	3720      	adds	r7, #32
 80013c4:	46bd      	mov	sp, r7
 80013c6:	bd80      	pop	{r7, pc}
 80013c8:	40010000 	.word	0x40010000
 80013cc:	40023800 	.word	0x40023800
 80013d0:	40020000 	.word	0x40020000

080013d4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b08e      	sub	sp, #56	; 0x38
 80013d8:	af00      	add	r7, sp, #0
 80013da:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 80013dc:	2300      	movs	r3, #0
 80013de:	62fb      	str	r3, [r7, #44]	; 0x2c

  uint32_t              uwPrescalerValue = 0U;
 80013e0:	2300      	movs	r3, #0
 80013e2:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM2 clock */
  __HAL_RCC_TIM2_CLK_ENABLE();
 80013e4:	2300      	movs	r3, #0
 80013e6:	60fb      	str	r3, [r7, #12]
 80013e8:	4b34      	ldr	r3, [pc, #208]	; (80014bc <HAL_InitTick+0xe8>)
 80013ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ec:	4a33      	ldr	r2, [pc, #204]	; (80014bc <HAL_InitTick+0xe8>)
 80013ee:	f043 0301 	orr.w	r3, r3, #1
 80013f2:	6413      	str	r3, [r2, #64]	; 0x40
 80013f4:	4b31      	ldr	r3, [pc, #196]	; (80014bc <HAL_InitTick+0xe8>)
 80013f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013f8:	f003 0301 	and.w	r3, r3, #1
 80013fc:	60fb      	str	r3, [r7, #12]
 80013fe:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001400:	f107 0210 	add.w	r2, r7, #16
 8001404:	f107 0314 	add.w	r3, r7, #20
 8001408:	4611      	mov	r1, r2
 800140a:	4618      	mov	r0, r3
 800140c:	f003 fb86 	bl	8004b1c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8001410:	6a3b      	ldr	r3, [r7, #32]
 8001412:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute TIM2 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001414:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001416:	2b00      	cmp	r3, #0
 8001418:	d103      	bne.n	8001422 <HAL_InitTick+0x4e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800141a:	f003 fb6b 	bl	8004af4 <HAL_RCC_GetPCLK1Freq>
 800141e:	6378      	str	r0, [r7, #52]	; 0x34
 8001420:	e004      	b.n	800142c <HAL_InitTick+0x58>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001422:	f003 fb67 	bl	8004af4 <HAL_RCC_GetPCLK1Freq>
 8001426:	4603      	mov	r3, r0
 8001428:	005b      	lsls	r3, r3, #1
 800142a:	637b      	str	r3, [r7, #52]	; 0x34
  }

  /* Compute the prescaler value to have TIM2 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800142c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800142e:	4a24      	ldr	r2, [pc, #144]	; (80014c0 <HAL_InitTick+0xec>)
 8001430:	fba2 2303 	umull	r2, r3, r2, r3
 8001434:	0c9b      	lsrs	r3, r3, #18
 8001436:	3b01      	subs	r3, #1
 8001438:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM2 */
  htim2.Instance = TIM2;
 800143a:	4b22      	ldr	r3, [pc, #136]	; (80014c4 <HAL_InitTick+0xf0>)
 800143c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001440:	601a      	str	r2, [r3, #0]
  + Period = [(TIM2CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim2.Init.Period = (1000000U / 1000U) - 1U;
 8001442:	4b20      	ldr	r3, [pc, #128]	; (80014c4 <HAL_InitTick+0xf0>)
 8001444:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001448:	60da      	str	r2, [r3, #12]
  htim2.Init.Prescaler = uwPrescalerValue;
 800144a:	4a1e      	ldr	r2, [pc, #120]	; (80014c4 <HAL_InitTick+0xf0>)
 800144c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800144e:	6053      	str	r3, [r2, #4]
  htim2.Init.ClockDivision = 0;
 8001450:	4b1c      	ldr	r3, [pc, #112]	; (80014c4 <HAL_InitTick+0xf0>)
 8001452:	2200      	movs	r2, #0
 8001454:	611a      	str	r2, [r3, #16]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001456:	4b1b      	ldr	r3, [pc, #108]	; (80014c4 <HAL_InitTick+0xf0>)
 8001458:	2200      	movs	r2, #0
 800145a:	609a      	str	r2, [r3, #8]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800145c:	4b19      	ldr	r3, [pc, #100]	; (80014c4 <HAL_InitTick+0xf0>)
 800145e:	2200      	movs	r2, #0
 8001460:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim2);
 8001462:	4818      	ldr	r0, [pc, #96]	; (80014c4 <HAL_InitTick+0xf0>)
 8001464:	f003 fb8c 	bl	8004b80 <HAL_TIM_Base_Init>
 8001468:	4603      	mov	r3, r0
 800146a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
  if (status == HAL_OK)
 800146e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8001472:	2b00      	cmp	r3, #0
 8001474:	d11b      	bne.n	80014ae <HAL_InitTick+0xda>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim2);
 8001476:	4813      	ldr	r0, [pc, #76]	; (80014c4 <HAL_InitTick+0xf0>)
 8001478:	f003 fbdc 	bl	8004c34 <HAL_TIM_Base_Start_IT>
 800147c:	4603      	mov	r3, r0
 800147e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    if (status == HAL_OK)
 8001482:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8001486:	2b00      	cmp	r3, #0
 8001488:	d111      	bne.n	80014ae <HAL_InitTick+0xda>
    {
    /* Enable the TIM2 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800148a:	201c      	movs	r0, #28
 800148c:	f001 fd20 	bl	8002ed0 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	2b0f      	cmp	r3, #15
 8001494:	d808      	bhi.n	80014a8 <HAL_InitTick+0xd4>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM2_IRQn, TickPriority, 0U);
 8001496:	2200      	movs	r2, #0
 8001498:	6879      	ldr	r1, [r7, #4]
 800149a:	201c      	movs	r0, #28
 800149c:	f001 fcfc 	bl	8002e98 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80014a0:	4a09      	ldr	r2, [pc, #36]	; (80014c8 <HAL_InitTick+0xf4>)
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	6013      	str	r3, [r2, #0]
 80014a6:	e002      	b.n	80014ae <HAL_InitTick+0xda>
      }
      else
      {
        status = HAL_ERROR;
 80014a8:	2301      	movs	r3, #1
 80014aa:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
      }
    }
  }

 /* Return function status */
  return status;
 80014ae:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
}
 80014b2:	4618      	mov	r0, r3
 80014b4:	3738      	adds	r7, #56	; 0x38
 80014b6:	46bd      	mov	sp, r7
 80014b8:	bd80      	pop	{r7, pc}
 80014ba:	bf00      	nop
 80014bc:	40023800 	.word	0x40023800
 80014c0:	431bde83 	.word	0x431bde83
 80014c4:	200007d8 	.word	0x200007d8
 80014c8:	20000094 	.word	0x20000094

080014cc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80014cc:	b480      	push	{r7}
 80014ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80014d0:	e7fe      	b.n	80014d0 <NMI_Handler+0x4>

080014d2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80014d2:	b480      	push	{r7}
 80014d4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80014d6:	e7fe      	b.n	80014d6 <HardFault_Handler+0x4>

080014d8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80014d8:	b480      	push	{r7}
 80014da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80014dc:	e7fe      	b.n	80014dc <MemManage_Handler+0x4>

080014de <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80014de:	b480      	push	{r7}
 80014e0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80014e2:	e7fe      	b.n	80014e2 <BusFault_Handler+0x4>

080014e4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80014e4:	b480      	push	{r7}
 80014e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80014e8:	e7fe      	b.n	80014e8 <UsageFault_Handler+0x4>

080014ea <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80014ea:	b480      	push	{r7}
 80014ec:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80014ee:	bf00      	nop
 80014f0:	46bd      	mov	sp, r7
 80014f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f6:	4770      	bx	lr

080014f8 <TIM1_TRG_COM_TIM11_IRQHandler>:

/**
  * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt.
  */
void TIM1_TRG_COM_TIM11_IRQHandler(void)
{
 80014f8:	b580      	push	{r7, lr}
 80014fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80014fc:	4802      	ldr	r0, [pc, #8]	; (8001508 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 80014fe:	f003 fec1 	bl	8005284 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
}
 8001502:	bf00      	nop
 8001504:	bd80      	pop	{r7, pc}
 8001506:	bf00      	nop
 8001508:	20000410 	.word	0x20000410

0800150c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001510:	4802      	ldr	r0, [pc, #8]	; (800151c <TIM2_IRQHandler+0x10>)
 8001512:	f003 feb7 	bl	8005284 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001516:	bf00      	nop
 8001518:	bd80      	pop	{r7, pc}
 800151a:	bf00      	nop
 800151c:	200007d8 	.word	0x200007d8

08001520 <DMA2_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA2 stream4 global interrupt.
  */
void DMA2_Stream4_IRQHandler(void)
{
 8001520:	b580      	push	{r7, lr}
 8001522:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream4_IRQn 0 */

  /* USER CODE END DMA2_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim1_ch4_trig_com);
 8001524:	4802      	ldr	r0, [pc, #8]	; (8001530 <DMA2_Stream4_IRQHandler+0x10>)
 8001526:	f001 fe09 	bl	800313c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream4_IRQn 1 */

  /* USER CODE END DMA2_Stream4_IRQn 1 */
}
 800152a:	bf00      	nop
 800152c:	bd80      	pop	{r7, pc}
 800152e:	bf00      	nop
 8001530:	20000458 	.word	0x20000458

08001534 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001534:	b580      	push	{r7, lr}
 8001536:	b086      	sub	sp, #24
 8001538:	af00      	add	r7, sp, #0
 800153a:	60f8      	str	r0, [r7, #12]
 800153c:	60b9      	str	r1, [r7, #8]
 800153e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001540:	2300      	movs	r3, #0
 8001542:	617b      	str	r3, [r7, #20]
 8001544:	e00a      	b.n	800155c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001546:	f3af 8000 	nop.w
 800154a:	4601      	mov	r1, r0
 800154c:	68bb      	ldr	r3, [r7, #8]
 800154e:	1c5a      	adds	r2, r3, #1
 8001550:	60ba      	str	r2, [r7, #8]
 8001552:	b2ca      	uxtb	r2, r1
 8001554:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001556:	697b      	ldr	r3, [r7, #20]
 8001558:	3301      	adds	r3, #1
 800155a:	617b      	str	r3, [r7, #20]
 800155c:	697a      	ldr	r2, [r7, #20]
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	429a      	cmp	r2, r3
 8001562:	dbf0      	blt.n	8001546 <_read+0x12>
  }

  return len;
 8001564:	687b      	ldr	r3, [r7, #4]
}
 8001566:	4618      	mov	r0, r3
 8001568:	3718      	adds	r7, #24
 800156a:	46bd      	mov	sp, r7
 800156c:	bd80      	pop	{r7, pc}

0800156e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800156e:	b580      	push	{r7, lr}
 8001570:	b086      	sub	sp, #24
 8001572:	af00      	add	r7, sp, #0
 8001574:	60f8      	str	r0, [r7, #12]
 8001576:	60b9      	str	r1, [r7, #8]
 8001578:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800157a:	2300      	movs	r3, #0
 800157c:	617b      	str	r3, [r7, #20]
 800157e:	e009      	b.n	8001594 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001580:	68bb      	ldr	r3, [r7, #8]
 8001582:	1c5a      	adds	r2, r3, #1
 8001584:	60ba      	str	r2, [r7, #8]
 8001586:	781b      	ldrb	r3, [r3, #0]
 8001588:	4618      	mov	r0, r3
 800158a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800158e:	697b      	ldr	r3, [r7, #20]
 8001590:	3301      	adds	r3, #1
 8001592:	617b      	str	r3, [r7, #20]
 8001594:	697a      	ldr	r2, [r7, #20]
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	429a      	cmp	r2, r3
 800159a:	dbf1      	blt.n	8001580 <_write+0x12>
  }
  return len;
 800159c:	687b      	ldr	r3, [r7, #4]
}
 800159e:	4618      	mov	r0, r3
 80015a0:	3718      	adds	r7, #24
 80015a2:	46bd      	mov	sp, r7
 80015a4:	bd80      	pop	{r7, pc}

080015a6 <_close>:

int _close(int file)
{
 80015a6:	b480      	push	{r7}
 80015a8:	b083      	sub	sp, #12
 80015aa:	af00      	add	r7, sp, #0
 80015ac:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80015ae:	f04f 33ff 	mov.w	r3, #4294967295
}
 80015b2:	4618      	mov	r0, r3
 80015b4:	370c      	adds	r7, #12
 80015b6:	46bd      	mov	sp, r7
 80015b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015bc:	4770      	bx	lr

080015be <_fstat>:


int _fstat(int file, struct stat *st)
{
 80015be:	b480      	push	{r7}
 80015c0:	b083      	sub	sp, #12
 80015c2:	af00      	add	r7, sp, #0
 80015c4:	6078      	str	r0, [r7, #4]
 80015c6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80015c8:	683b      	ldr	r3, [r7, #0]
 80015ca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80015ce:	605a      	str	r2, [r3, #4]
  return 0;
 80015d0:	2300      	movs	r3, #0
}
 80015d2:	4618      	mov	r0, r3
 80015d4:	370c      	adds	r7, #12
 80015d6:	46bd      	mov	sp, r7
 80015d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015dc:	4770      	bx	lr

080015de <_isatty>:

int _isatty(int file)
{
 80015de:	b480      	push	{r7}
 80015e0:	b083      	sub	sp, #12
 80015e2:	af00      	add	r7, sp, #0
 80015e4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80015e6:	2301      	movs	r3, #1
}
 80015e8:	4618      	mov	r0, r3
 80015ea:	370c      	adds	r7, #12
 80015ec:	46bd      	mov	sp, r7
 80015ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f2:	4770      	bx	lr

080015f4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80015f4:	b480      	push	{r7}
 80015f6:	b085      	sub	sp, #20
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	60f8      	str	r0, [r7, #12]
 80015fc:	60b9      	str	r1, [r7, #8]
 80015fe:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001600:	2300      	movs	r3, #0
}
 8001602:	4618      	mov	r0, r3
 8001604:	3714      	adds	r7, #20
 8001606:	46bd      	mov	sp, r7
 8001608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800160c:	4770      	bx	lr
	...

08001610 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001610:	b580      	push	{r7, lr}
 8001612:	b086      	sub	sp, #24
 8001614:	af00      	add	r7, sp, #0
 8001616:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001618:	4a14      	ldr	r2, [pc, #80]	; (800166c <_sbrk+0x5c>)
 800161a:	4b15      	ldr	r3, [pc, #84]	; (8001670 <_sbrk+0x60>)
 800161c:	1ad3      	subs	r3, r2, r3
 800161e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001620:	697b      	ldr	r3, [r7, #20]
 8001622:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001624:	4b13      	ldr	r3, [pc, #76]	; (8001674 <_sbrk+0x64>)
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	2b00      	cmp	r3, #0
 800162a:	d102      	bne.n	8001632 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800162c:	4b11      	ldr	r3, [pc, #68]	; (8001674 <_sbrk+0x64>)
 800162e:	4a12      	ldr	r2, [pc, #72]	; (8001678 <_sbrk+0x68>)
 8001630:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001632:	4b10      	ldr	r3, [pc, #64]	; (8001674 <_sbrk+0x64>)
 8001634:	681a      	ldr	r2, [r3, #0]
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	4413      	add	r3, r2
 800163a:	693a      	ldr	r2, [r7, #16]
 800163c:	429a      	cmp	r2, r3
 800163e:	d207      	bcs.n	8001650 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001640:	f006 feaa 	bl	8008398 <__errno>
 8001644:	4603      	mov	r3, r0
 8001646:	220c      	movs	r2, #12
 8001648:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800164a:	f04f 33ff 	mov.w	r3, #4294967295
 800164e:	e009      	b.n	8001664 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001650:	4b08      	ldr	r3, [pc, #32]	; (8001674 <_sbrk+0x64>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001656:	4b07      	ldr	r3, [pc, #28]	; (8001674 <_sbrk+0x64>)
 8001658:	681a      	ldr	r2, [r3, #0]
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	4413      	add	r3, r2
 800165e:	4a05      	ldr	r2, [pc, #20]	; (8001674 <_sbrk+0x64>)
 8001660:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001662:	68fb      	ldr	r3, [r7, #12]
}
 8001664:	4618      	mov	r0, r3
 8001666:	3718      	adds	r7, #24
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}
 800166c:	20018000 	.word	0x20018000
 8001670:	00000400 	.word	0x00000400
 8001674:	20000820 	.word	0x20000820
 8001678:	20005568 	.word	0x20005568

0800167c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800167c:	b480      	push	{r7}
 800167e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001680:	4b06      	ldr	r3, [pc, #24]	; (800169c <SystemInit+0x20>)
 8001682:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001686:	4a05      	ldr	r2, [pc, #20]	; (800169c <SystemInit+0x20>)
 8001688:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800168c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001690:	bf00      	nop
 8001692:	46bd      	mov	sp, r7
 8001694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001698:	4770      	bx	lr
 800169a:	bf00      	nop
 800169c:	e000ed00 	.word	0xe000ed00

080016a0 <t_LCD>:
xQueueHandle lcd_queue;
xQueueHandle ws2812_queue;

extern TIM_HandleTypeDef htim1;

void t_LCD(void*) {
 80016a0:	b580      	push	{r7, lr}
 80016a2:	b088      	sub	sp, #32
 80016a4:	af00      	add	r7, sp, #0
 80016a6:	6078      	str	r0, [r7, #4]
	lcd_init();
 80016a8:	f7fe ff68 	bl	800057c <lcd_init>

	LCDQueueItem_t msg;
	lcd_queue = xQueueCreate(20, sizeof(LCDQueueItem_t));
 80016ac:	2200      	movs	r2, #0
 80016ae:	2118      	movs	r1, #24
 80016b0:	2014      	movs	r0, #20
 80016b2:	f004 fd57 	bl	8006164 <xQueueGenericCreate>
 80016b6:	4603      	mov	r3, r0
 80016b8:	4a15      	ldr	r2, [pc, #84]	; (8001710 <t_LCD+0x70>)
 80016ba:	6013      	str	r3, [r2, #0]

	while (1) {
		xQueueReceive(lcd_queue, &msg, portMAX_DELAY);
 80016bc:	4b14      	ldr	r3, [pc, #80]	; (8001710 <t_LCD+0x70>)
 80016be:	681b      	ldr	r3, [r3, #0]
 80016c0:	f107 0108 	add.w	r1, r7, #8
 80016c4:	f04f 32ff 	mov.w	r2, #4294967295
 80016c8:	4618      	mov	r0, r3
 80016ca:	f004 fea3 	bl	8006414 <xQueueReceive>
		switch (msg.type) {
 80016ce:	7a3b      	ldrb	r3, [r7, #8]
 80016d0:	2b02      	cmp	r3, #2
 80016d2:	d014      	beq.n	80016fe <t_LCD+0x5e>
 80016d4:	2b02      	cmp	r3, #2
 80016d6:	dcf1      	bgt.n	80016bc <t_LCD+0x1c>
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d002      	beq.n	80016e2 <t_LCD+0x42>
 80016dc:	2b01      	cmp	r3, #1
 80016de:	d009      	beq.n	80016f4 <t_LCD+0x54>
 80016e0:	e014      	b.n	800170c <t_LCD+0x6c>
		case 0:
			lcd_send_cmd(msg.data[0]);
 80016e2:	7a7b      	ldrb	r3, [r7, #9]
 80016e4:	4618      	mov	r0, r3
 80016e6:	f7fe ff87 	bl	80005f8 <lcd_send_cmd>
			vTaskDelay((TickType_t) msg.delay);
 80016ea:	69fb      	ldr	r3, [r7, #28]
 80016ec:	4618      	mov	r0, r3
 80016ee:	f005 fa49 	bl	8006b84 <vTaskDelay>
			break;
 80016f2:	e00b      	b.n	800170c <t_LCD+0x6c>
		case 1:
			lcd_send_data(msg.data[0]);
 80016f4:	7a7b      	ldrb	r3, [r7, #9]
 80016f6:	4618      	mov	r0, r3
 80016f8:	f7fe ffae 	bl	8000658 <lcd_send_data>
			break;
 80016fc:	e006      	b.n	800170c <t_LCD+0x6c>
		case 2:
			lcd_send_string(msg.data);
 80016fe:	f107 0308 	add.w	r3, r7, #8
 8001702:	3301      	adds	r3, #1
 8001704:	4618      	mov	r0, r3
 8001706:	f7fe ffd7 	bl	80006b8 <lcd_send_string>
			break;
 800170a:	bf00      	nop
		xQueueReceive(lcd_queue, &msg, portMAX_DELAY);
 800170c:	e7d6      	b.n	80016bc <t_LCD+0x1c>
 800170e:	bf00      	nop
 8001710:	20000824 	.word	0x20000824

08001714 <t_Botones>:
		default:
		}
	}
}

void t_Botones(void*) {
 8001714:	b580      	push	{r7, lr}
 8001716:	b08e      	sub	sp, #56	; 0x38
 8001718:	af00      	add	r7, sp, #0
 800171a:	6078      	str	r0, [r7, #4]

	Debounce_t b1, b2, b3;

	debounce_init(&b1, 1, 2);
 800171c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001720:	2202      	movs	r2, #2
 8001722:	2101      	movs	r1, #1
 8001724:	4618      	mov	r0, r3
 8001726:	f7fe ffdc 	bl	80006e2 <debounce_init>
	debounce_init(&b2, 1, 2);
 800172a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800172e:	2202      	movs	r2, #2
 8001730:	2101      	movs	r1, #1
 8001732:	4618      	mov	r0, r3
 8001734:	f7fe ffd5 	bl	80006e2 <debounce_init>
	debounce_init(&b3, 1, 2);
 8001738:	f107 0320 	add.w	r3, r7, #32
 800173c:	2202      	movs	r2, #2
 800173e:	2101      	movs	r1, #1
 8001740:	4618      	mov	r0, r3
 8001742:	f7fe ffce 	bl	80006e2 <debounce_init>

	LCDQueueItem_t msg = { 0 };
 8001746:	f107 0308 	add.w	r3, r7, #8
 800174a:	2200      	movs	r2, #0
 800174c:	601a      	str	r2, [r3, #0]
 800174e:	605a      	str	r2, [r3, #4]
 8001750:	609a      	str	r2, [r3, #8]
 8001752:	60da      	str	r2, [r3, #12]
 8001754:	611a      	str	r2, [r3, #16]
 8001756:	615a      	str	r2, [r3, #20]

	while (1) {
		debounce_run(&b1, HAL_GPIO_ReadPin(BOTON_1_GPIO_Port, BOTON_1_Pin));
 8001758:	2140      	movs	r1, #64	; 0x40
 800175a:	4840      	ldr	r0, [pc, #256]	; (800185c <t_Botones+0x148>)
 800175c:	f002 f8dc 	bl	8003918 <HAL_GPIO_ReadPin>
 8001760:	4603      	mov	r3, r0
 8001762:	461a      	mov	r2, r3
 8001764:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001768:	4611      	mov	r1, r2
 800176a:	4618      	mov	r0, r3
 800176c:	f7fe ffe0 	bl	8000730 <debounce_run>
		debounce_run(&b2, HAL_GPIO_ReadPin(BOTON_2_GPIO_Port, BOTON_2_Pin));
 8001770:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001774:	4839      	ldr	r0, [pc, #228]	; (800185c <t_Botones+0x148>)
 8001776:	f002 f8cf 	bl	8003918 <HAL_GPIO_ReadPin>
 800177a:	4603      	mov	r3, r0
 800177c:	461a      	mov	r2, r3
 800177e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001782:	4611      	mov	r1, r2
 8001784:	4618      	mov	r0, r3
 8001786:	f7fe ffd3 	bl	8000730 <debounce_run>
		debounce_run(&b3, HAL_GPIO_ReadPin(BOTON_3_GPIO_Port, BOTON_3_Pin));
 800178a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800178e:	4833      	ldr	r0, [pc, #204]	; (800185c <t_Botones+0x148>)
 8001790:	f002 f8c2 	bl	8003918 <HAL_GPIO_ReadPin>
 8001794:	4603      	mov	r3, r0
 8001796:	461a      	mov	r2, r3
 8001798:	f107 0320 	add.w	r3, r7, #32
 800179c:	4611      	mov	r1, r2
 800179e:	4618      	mov	r0, r3
 80017a0:	f7fe ffc6 	bl	8000730 <debounce_run>

		if (debounce_flank(&b1)) {
 80017a4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80017a8:	4618      	mov	r0, r3
 80017aa:	f7ff f845 	bl	8000838 <debounce_flank>
 80017ae:	4603      	mov	r3, r0
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d014      	beq.n	80017de <t_Botones+0xca>
			msg.type = DATA_TYPE;
 80017b4:	2301      	movs	r3, #1
 80017b6:	723b      	strb	r3, [r7, #8]
			msg.data[0] = 'A';
 80017b8:	2341      	movs	r3, #65	; 0x41
 80017ba:	727b      	strb	r3, [r7, #9]
			if (uxQueueMessagesWaiting(lcd_queue) < 20) {
 80017bc:	4b28      	ldr	r3, [pc, #160]	; (8001860 <t_Botones+0x14c>)
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	4618      	mov	r0, r3
 80017c2:	f004 ff07 	bl	80065d4 <uxQueueMessagesWaiting>
 80017c6:	4603      	mov	r3, r0
 80017c8:	2b13      	cmp	r3, #19
 80017ca:	d808      	bhi.n	80017de <t_Botones+0xca>
				xQueueSend(lcd_queue, (void* )&msg, portMAX_DELAY);
 80017cc:	4b24      	ldr	r3, [pc, #144]	; (8001860 <t_Botones+0x14c>)
 80017ce:	6818      	ldr	r0, [r3, #0]
 80017d0:	f107 0108 	add.w	r1, r7, #8
 80017d4:	2300      	movs	r3, #0
 80017d6:	f04f 32ff 	mov.w	r2, #4294967295
 80017da:	f004 fd1d 	bl	8006218 <xQueueGenericSend>
			}
		}

		if (debounce_flank(&b2)) {
 80017de:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80017e2:	4618      	mov	r0, r3
 80017e4:	f7ff f828 	bl	8000838 <debounce_flank>
 80017e8:	4603      	mov	r3, r0
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	d014      	beq.n	8001818 <t_Botones+0x104>
			msg.type = DATA_TYPE;
 80017ee:	2301      	movs	r3, #1
 80017f0:	723b      	strb	r3, [r7, #8]
			msg.data[0] = 'B';
 80017f2:	2342      	movs	r3, #66	; 0x42
 80017f4:	727b      	strb	r3, [r7, #9]
			if (uxQueueMessagesWaiting(lcd_queue) < 20) {
 80017f6:	4b1a      	ldr	r3, [pc, #104]	; (8001860 <t_Botones+0x14c>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	4618      	mov	r0, r3
 80017fc:	f004 feea 	bl	80065d4 <uxQueueMessagesWaiting>
 8001800:	4603      	mov	r3, r0
 8001802:	2b13      	cmp	r3, #19
 8001804:	d808      	bhi.n	8001818 <t_Botones+0x104>
				xQueueSend(lcd_queue, (void* )&msg, portMAX_DELAY);
 8001806:	4b16      	ldr	r3, [pc, #88]	; (8001860 <t_Botones+0x14c>)
 8001808:	6818      	ldr	r0, [r3, #0]
 800180a:	f107 0108 	add.w	r1, r7, #8
 800180e:	2300      	movs	r3, #0
 8001810:	f04f 32ff 	mov.w	r2, #4294967295
 8001814:	f004 fd00 	bl	8006218 <xQueueGenericSend>
			}
		}

		if (debounce_flank(&b3)) {
 8001818:	f107 0320 	add.w	r3, r7, #32
 800181c:	4618      	mov	r0, r3
 800181e:	f7ff f80b 	bl	8000838 <debounce_flank>
 8001822:	4603      	mov	r3, r0
 8001824:	2b00      	cmp	r3, #0
 8001826:	d014      	beq.n	8001852 <t_Botones+0x13e>
			msg.type = DATA_TYPE;
 8001828:	2301      	movs	r3, #1
 800182a:	723b      	strb	r3, [r7, #8]
			msg.data[0] = 'C';
 800182c:	2343      	movs	r3, #67	; 0x43
 800182e:	727b      	strb	r3, [r7, #9]
			if (uxQueueMessagesWaiting(lcd_queue) < 20) {
 8001830:	4b0b      	ldr	r3, [pc, #44]	; (8001860 <t_Botones+0x14c>)
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	4618      	mov	r0, r3
 8001836:	f004 fecd 	bl	80065d4 <uxQueueMessagesWaiting>
 800183a:	4603      	mov	r3, r0
 800183c:	2b13      	cmp	r3, #19
 800183e:	d808      	bhi.n	8001852 <t_Botones+0x13e>
				xQueueSend(lcd_queue, (void* )&msg, portMAX_DELAY);
 8001840:	4b07      	ldr	r3, [pc, #28]	; (8001860 <t_Botones+0x14c>)
 8001842:	6818      	ldr	r0, [r3, #0]
 8001844:	f107 0108 	add.w	r1, r7, #8
 8001848:	2300      	movs	r3, #0
 800184a:	f04f 32ff 	mov.w	r2, #4294967295
 800184e:	f004 fce3 	bl	8006218 <xQueueGenericSend>
			}
		}

		vTaskDelay(10);
 8001852:	200a      	movs	r0, #10
 8001854:	f005 f996 	bl	8006b84 <vTaskDelay>
		debounce_run(&b1, HAL_GPIO_ReadPin(BOTON_1_GPIO_Port, BOTON_1_Pin));
 8001858:	e77e      	b.n	8001758 <t_Botones+0x44>
 800185a:	bf00      	nop
 800185c:	40020800 	.word	0x40020800
 8001860:	20000824 	.word	0x20000824

08001864 <t_userLoop>:
	}
}

void t_userLoop(void*) {
 8001864:	b580      	push	{r7, lr}
 8001866:	b082      	sub	sp, #8
 8001868:	af00      	add	r7, sp, #0
 800186a:	6078      	str	r0, [r7, #4]
	user_htim1 = &htim1;
 800186c:	4b05      	ldr	r3, [pc, #20]	; (8001884 <t_userLoop+0x20>)
 800186e:	4a06      	ldr	r2, [pc, #24]	; (8001888 <t_userLoop+0x24>)
 8001870:	601a      	str	r2, [r3, #0]
	user_init();
 8001872:	f000 f827 	bl	80018c4 <user_init>
	while (1) {
		user_loop();
 8001876:	f000 f861 	bl	800193c <user_loop>
		vTaskDelay(1);
 800187a:	2001      	movs	r0, #1
 800187c:	f005 f982 	bl	8006b84 <vTaskDelay>
		user_loop();
 8001880:	e7f9      	b.n	8001876 <t_userLoop+0x12>
 8001882:	bf00      	nop
 8001884:	2000082c 	.word	0x2000082c
 8001888:	20000410 	.word	0x20000410

0800188c <t_WS2812>:
	}
}

void t_WS2812(void*) {
 800188c:	b580      	push	{r7, lr}
 800188e:	b082      	sub	sp, #8
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]
	ws2812_queue = xQueueCreate(2, sizeof(uint8_t));
 8001894:	2200      	movs	r2, #0
 8001896:	2101      	movs	r1, #1
 8001898:	2002      	movs	r0, #2
 800189a:	f004 fc63 	bl	8006164 <xQueueGenericCreate>
 800189e:	4603      	mov	r3, r0
 80018a0:	4a06      	ldr	r2, [pc, #24]	; (80018bc <t_WS2812+0x30>)
 80018a2:	6013      	str	r3, [r2, #0]
	ws2812_init();
 80018a4:	f000 fe4a 	bl	800253c <ws2812_init>
	while (1) {
		ws2812_update_leds_from_data(user_htim1);
 80018a8:	4b05      	ldr	r3, [pc, #20]	; (80018c0 <t_WS2812+0x34>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	4618      	mov	r0, r3
 80018ae:	f000 fee7 	bl	8002680 <ws2812_update_leds_from_data>
		vTaskDelay(33); //30 fps aprox
 80018b2:	2021      	movs	r0, #33	; 0x21
 80018b4:	f005 f966 	bl	8006b84 <vTaskDelay>
		ws2812_update_leds_from_data(user_htim1);
 80018b8:	e7f6      	b.n	80018a8 <t_WS2812+0x1c>
 80018ba:	bf00      	nop
 80018bc:	20000828 	.word	0x20000828
 80018c0:	2000082c 	.word	0x2000082c

080018c4 <user_init>:

TIM_HandleTypeDef * user_htim1;



void user_init(){
 80018c4:	b580      	push	{r7, lr}
 80018c6:	af00      	add	r7, sp, #0
	game_set_sensor_reader((sensor_reader_t)reed_scan_sensors);
 80018c8:	4804      	ldr	r0, [pc, #16]	; (80018dc <user_init+0x18>)
 80018ca:	f7fe ffe5 	bl	8000898 <game_set_sensor_reader>

	game_set_led_output_array(ws2812_color_data);
 80018ce:	4804      	ldr	r0, [pc, #16]	; (80018e0 <user_init+0x1c>)
 80018d0:	f7fe fff6 	bl	80008c0 <game_set_led_output_array>

	game_reset();
 80018d4:	f7ff f807 	bl	80008e6 <game_reset>
}
 80018d8:	bf00      	nop
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	080029d5 	.word	0x080029d5
 80018e0:	200015ac 	.word	0x200015ac

080018e4 <get_promotion>:


piece_t get_promotion()
{
 80018e4:	b580      	push	{r7, lr}
 80018e6:	b082      	sub	sp, #8
 80018e8:	af00      	add	r7, sp, #0
    printf("Ingrese numero de pieza para seleccionar la promocion:\n");
 80018ea:	480e      	ldr	r0, [pc, #56]	; (8001924 <get_promotion+0x40>)
 80018ec:	f006 fbbe 	bl	800806c <puts>
    printf("Caballo: %d\n", KNIGHT);
 80018f0:	2104      	movs	r1, #4
 80018f2:	480d      	ldr	r0, [pc, #52]	; (8001928 <get_promotion+0x44>)
 80018f4:	f006 fb54 	bl	8007fa0 <iprintf>
    printf("Alfil: %d\n", BISHOP);
 80018f8:	2103      	movs	r1, #3
 80018fa:	480c      	ldr	r0, [pc, #48]	; (800192c <get_promotion+0x48>)
 80018fc:	f006 fb50 	bl	8007fa0 <iprintf>
    printf("Reina: %d\n", QUEEN);
 8001900:	2101      	movs	r1, #1
 8001902:	480b      	ldr	r0, [pc, #44]	; (8001930 <get_promotion+0x4c>)
 8001904:	f006 fb4c 	bl	8007fa0 <iprintf>

    unsigned int prom;

    printf("Seleccion: ");
 8001908:	480a      	ldr	r0, [pc, #40]	; (8001934 <get_promotion+0x50>)
 800190a:	f006 fb49 	bl	8007fa0 <iprintf>
    scanf("%u", &prom);
 800190e:	1d3b      	adds	r3, r7, #4
 8001910:	4619      	mov	r1, r3
 8001912:	4809      	ldr	r0, [pc, #36]	; (8001938 <get_promotion+0x54>)
 8001914:	f006 fbb2 	bl	800807c <iscanf>

    return (piece_t) prom;
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	b2db      	uxtb	r3, r3
}
 800191c:	4618      	mov	r0, r3
 800191e:	3708      	adds	r7, #8
 8001920:	46bd      	mov	sp, r7
 8001922:	bd80      	pop	{r7, pc}
 8001924:	080099fc 	.word	0x080099fc
 8001928:	08009a34 	.word	0x08009a34
 800192c:	08009a44 	.word	0x08009a44
 8001930:	08009a50 	.word	0x08009a50
 8001934:	08009a5c 	.word	0x08009a5c
 8001938:	08009a68 	.word	0x08009a68

0800193c <user_loop>:


uint8_t sensor_data[64];

void user_loop(){
 800193c:	b580      	push	{r7, lr}
 800193e:	af00      	add	r7, sp, #0
	game_fsm();
 8001940:	f7fe ffc9 	bl	80008d6 <game_fsm>
}
 8001944:	bf00      	nop
 8001946:	bd80      	pop	{r7, pc}

08001948 <clear_game_state>:
 8001948:	b480      	push	{r7}
 800194a:	b085      	sub	sp, #20
 800194c:	af00      	add	r7, sp, #0
 800194e:	6078      	str	r0, [r7, #4]
 8001950:	2300      	movs	r3, #0
 8001952:	60fb      	str	r3, [r7, #12]
 8001954:	e00d      	b.n	8001972 <clear_game_state+0x2a>
 8001956:	687a      	ldr	r2, [r7, #4]
 8001958:	68fb      	ldr	r3, [r7, #12]
 800195a:	4413      	add	r3, r2
 800195c:	3380      	adds	r3, #128	; 0x80
 800195e:	2202      	movs	r2, #2
 8001960:	701a      	strb	r2, [r3, #0]
 8001962:	687a      	ldr	r2, [r7, #4]
 8001964:	68fb      	ldr	r3, [r7, #12]
 8001966:	4413      	add	r3, r2
 8001968:	2206      	movs	r2, #6
 800196a:	701a      	strb	r2, [r3, #0]
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	3301      	adds	r3, #1
 8001970:	60fb      	str	r3, [r7, #12]
 8001972:	68fb      	ldr	r3, [r7, #12]
 8001974:	2b7f      	cmp	r3, #127	; 0x7f
 8001976:	ddee      	ble.n	8001956 <clear_game_state+0xe>
 8001978:	2301      	movs	r3, #1
 800197a:	4618      	mov	r0, r3
 800197c:	3714      	adds	r7, #20
 800197e:	46bd      	mov	sp, r7
 8001980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001984:	4770      	bx	lr

08001986 <place_piece>:
 8001986:	b480      	push	{r7}
 8001988:	b083      	sub	sp, #12
 800198a:	af00      	add	r7, sp, #0
 800198c:	6078      	str	r0, [r7, #4]
 800198e:	4608      	mov	r0, r1
 8001990:	4611      	mov	r1, r2
 8001992:	461a      	mov	r2, r3
 8001994:	4603      	mov	r3, r0
 8001996:	70fb      	strb	r3, [r7, #3]
 8001998:	460b      	mov	r3, r1
 800199a:	70bb      	strb	r3, [r7, #2]
 800199c:	4613      	mov	r3, r2
 800199e:	707b      	strb	r3, [r7, #1]
 80019a0:	787b      	ldrb	r3, [r7, #1]
 80019a2:	687a      	ldr	r2, [r7, #4]
 80019a4:	78f9      	ldrb	r1, [r7, #3]
 80019a6:	54d1      	strb	r1, [r2, r3]
 80019a8:	787b      	ldrb	r3, [r7, #1]
 80019aa:	687a      	ldr	r2, [r7, #4]
 80019ac:	4413      	add	r3, r2
 80019ae:	78ba      	ldrb	r2, [r7, #2]
 80019b0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80019b4:	2301      	movs	r3, #1
 80019b6:	4618      	mov	r0, r3
 80019b8:	370c      	adds	r7, #12
 80019ba:	46bd      	mov	sp, r7
 80019bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c0:	4770      	bx	lr

080019c2 <remove_piece>:
 80019c2:	b480      	push	{r7}
 80019c4:	b083      	sub	sp, #12
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	6078      	str	r0, [r7, #4]
 80019ca:	460b      	mov	r3, r1
 80019cc:	70fb      	strb	r3, [r7, #3]
 80019ce:	78fb      	ldrb	r3, [r7, #3]
 80019d0:	687a      	ldr	r2, [r7, #4]
 80019d2:	2106      	movs	r1, #6
 80019d4:	54d1      	strb	r1, [r2, r3]
 80019d6:	78fb      	ldrb	r3, [r7, #3]
 80019d8:	687a      	ldr	r2, [r7, #4]
 80019da:	4413      	add	r3, r2
 80019dc:	2202      	movs	r2, #2
 80019de:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80019e2:	2301      	movs	r3, #1
 80019e4:	4618      	mov	r0, r3
 80019e6:	370c      	adds	r7, #12
 80019e8:	46bd      	mov	sp, r7
 80019ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ee:	4770      	bx	lr

080019f0 <engine_reset>:
 80019f0:	b580      	push	{r7, lr}
 80019f2:	af00      	add	r7, sp, #0
 80019f4:	4902      	ldr	r1, [pc, #8]	; (8001a00 <engine_reset+0x10>)
 80019f6:	4803      	ldr	r0, [pc, #12]	; (8001a04 <engine_reset+0x14>)
 80019f8:	f000 f838 	bl	8001a6c <load_fen>
 80019fc:	bf00      	nop
 80019fe:	bd80      	pop	{r7, pc}
 8001a00:	08009a6c 	.word	0x08009a6c
 8001a04:	20000830 	.word	0x20000830

08001a08 <engine_move_piece>:
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	b082      	sub	sp, #8
 8001a0c:	af00      	add	r7, sp, #0
 8001a0e:	6078      	str	r0, [r7, #4]
 8001a10:	2201      	movs	r2, #1
 8001a12:	6879      	ldr	r1, [r7, #4]
 8001a14:	4804      	ldr	r0, [pc, #16]	; (8001a28 <engine_move_piece+0x20>)
 8001a16:	f000 f9d7 	bl	8001dc8 <make_move>
 8001a1a:	4603      	mov	r3, r0
 8001a1c:	b2db      	uxtb	r3, r3
 8001a1e:	4618      	mov	r0, r3
 8001a20:	3708      	adds	r7, #8
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bd80      	pop	{r7, pc}
 8001a26:	bf00      	nop
 8001a28:	20000830 	.word	0x20000830

08001a2c <engine_list_moves>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b082      	sub	sp, #8
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	6078      	str	r0, [r7, #4]
 8001a34:	6879      	ldr	r1, [r7, #4]
 8001a36:	4804      	ldr	r0, [pc, #16]	; (8001a48 <engine_list_moves+0x1c>)
 8001a38:	f000 fad0 	bl	8001fdc <generate_moves>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	4618      	mov	r0, r3
 8001a40:	3708      	adds	r7, #8
 8001a42:	46bd      	mov	sp, r7
 8001a44:	bd80      	pop	{r7, pc}
 8001a46:	bf00      	nop
 8001a48:	20000830 	.word	0x20000830

08001a4c <engine_get_piece>:
 8001a4c:	b480      	push	{r7}
 8001a4e:	b083      	sub	sp, #12
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	4603      	mov	r3, r0
 8001a54:	71fb      	strb	r3, [r7, #7]
 8001a56:	79fb      	ldrb	r3, [r7, #7]
 8001a58:	4a03      	ldr	r2, [pc, #12]	; (8001a68 <engine_get_piece+0x1c>)
 8001a5a:	5cd3      	ldrb	r3, [r2, r3]
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	370c      	adds	r7, #12
 8001a60:	46bd      	mov	sp, r7
 8001a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a66:	4770      	bx	lr
 8001a68:	20000830 	.word	0x20000830

08001a6c <load_fen>:
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	b084      	sub	sp, #16
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	6078      	str	r0, [r7, #4]
 8001a74:	6039      	str	r1, [r7, #0]
 8001a76:	6878      	ldr	r0, [r7, #4]
 8001a78:	f7ff ff66 	bl	8001948 <clear_game_state>
 8001a7c:	683b      	ldr	r3, [r7, #0]
 8001a7e:	60fb      	str	r3, [r7, #12]
 8001a80:	2300      	movs	r3, #0
 8001a82:	72fb      	strb	r3, [r7, #11]
 8001a84:	2307      	movs	r3, #7
 8001a86:	72bb      	strb	r3, [r7, #10]
 8001a88:	68fb      	ldr	r3, [r7, #12]
 8001a8a:	781b      	ldrb	r3, [r3, #0]
 8001a8c:	3b2f      	subs	r3, #47	; 0x2f
 8001a8e:	2b43      	cmp	r3, #67	; 0x43
 8001a90:	f200 8166 	bhi.w	8001d60 <load_fen+0x2f4>
 8001a94:	a201      	add	r2, pc, #4	; (adr r2, 8001a9c <load_fen+0x30>)
 8001a96:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a9a:	bf00      	nop
 8001a9c:	08001d15 	.word	0x08001d15
 8001aa0:	08001d61 	.word	0x08001d61
 8001aa4:	08001d21 	.word	0x08001d21
 8001aa8:	08001d29 	.word	0x08001d29
 8001aac:	08001d31 	.word	0x08001d31
 8001ab0:	08001d39 	.word	0x08001d39
 8001ab4:	08001d41 	.word	0x08001d41
 8001ab8:	08001d49 	.word	0x08001d49
 8001abc:	08001d51 	.word	0x08001d51
 8001ac0:	08001d59 	.word	0x08001d59
 8001ac4:	08001d61 	.word	0x08001d61
 8001ac8:	08001d61 	.word	0x08001d61
 8001acc:	08001d61 	.word	0x08001d61
 8001ad0:	08001d61 	.word	0x08001d61
 8001ad4:	08001d61 	.word	0x08001d61
 8001ad8:	08001d61 	.word	0x08001d61
 8001adc:	08001d61 	.word	0x08001d61
 8001ae0:	08001d61 	.word	0x08001d61
 8001ae4:	08001d61 	.word	0x08001d61
 8001ae8:	08001c07 	.word	0x08001c07
 8001aec:	08001d61 	.word	0x08001d61
 8001af0:	08001d61 	.word	0x08001d61
 8001af4:	08001d61 	.word	0x08001d61
 8001af8:	08001d61 	.word	0x08001d61
 8001afc:	08001d61 	.word	0x08001d61
 8001b00:	08001d61 	.word	0x08001d61
 8001b04:	08001d61 	.word	0x08001d61
 8001b08:	08001d61 	.word	0x08001d61
 8001b0c:	08001bad 	.word	0x08001bad
 8001b10:	08001d61 	.word	0x08001d61
 8001b14:	08001d61 	.word	0x08001d61
 8001b18:	08001c25 	.word	0x08001c25
 8001b1c:	08001d61 	.word	0x08001d61
 8001b20:	08001c43 	.word	0x08001c43
 8001b24:	08001bcb 	.word	0x08001bcb
 8001b28:	08001be9 	.word	0x08001be9
 8001b2c:	08001d61 	.word	0x08001d61
 8001b30:	08001d61 	.word	0x08001d61
 8001b34:	08001d61 	.word	0x08001d61
 8001b38:	08001d61 	.word	0x08001d61
 8001b3c:	08001d61 	.word	0x08001d61
 8001b40:	08001d61 	.word	0x08001d61
 8001b44:	08001d61 	.word	0x08001d61
 8001b48:	08001d61 	.word	0x08001d61
 8001b4c:	08001d61 	.word	0x08001d61
 8001b50:	08001d61 	.word	0x08001d61
 8001b54:	08001d61 	.word	0x08001d61
 8001b58:	08001d61 	.word	0x08001d61
 8001b5c:	08001d61 	.word	0x08001d61
 8001b60:	08001d61 	.word	0x08001d61
 8001b64:	08001d61 	.word	0x08001d61
 8001b68:	08001cbb 	.word	0x08001cbb
 8001b6c:	08001d61 	.word	0x08001d61
 8001b70:	08001d61 	.word	0x08001d61
 8001b74:	08001d61 	.word	0x08001d61
 8001b78:	08001d61 	.word	0x08001d61
 8001b7c:	08001d61 	.word	0x08001d61
 8001b80:	08001d61 	.word	0x08001d61
 8001b84:	08001d61 	.word	0x08001d61
 8001b88:	08001d61 	.word	0x08001d61
 8001b8c:	08001c61 	.word	0x08001c61
 8001b90:	08001d61 	.word	0x08001d61
 8001b94:	08001d61 	.word	0x08001d61
 8001b98:	08001cd9 	.word	0x08001cd9
 8001b9c:	08001d61 	.word	0x08001d61
 8001ba0:	08001cf7 	.word	0x08001cf7
 8001ba4:	08001c7f 	.word	0x08001c7f
 8001ba8:	08001c9d 	.word	0x08001c9d
 8001bac:	7abb      	ldrb	r3, [r7, #10]
 8001bae:	011b      	lsls	r3, r3, #4
 8001bb0:	b2da      	uxtb	r2, r3
 8001bb2:	7afb      	ldrb	r3, [r7, #11]
 8001bb4:	4413      	add	r3, r2
 8001bb6:	b2db      	uxtb	r3, r3
 8001bb8:	2200      	movs	r2, #0
 8001bba:	2100      	movs	r1, #0
 8001bbc:	6878      	ldr	r0, [r7, #4]
 8001bbe:	f7ff fee2 	bl	8001986 <place_piece>
 8001bc2:	7afb      	ldrb	r3, [r7, #11]
 8001bc4:	3301      	adds	r3, #1
 8001bc6:	72fb      	strb	r3, [r7, #11]
 8001bc8:	e0ca      	b.n	8001d60 <load_fen+0x2f4>
 8001bca:	7abb      	ldrb	r3, [r7, #10]
 8001bcc:	011b      	lsls	r3, r3, #4
 8001bce:	b2da      	uxtb	r2, r3
 8001bd0:	7afb      	ldrb	r3, [r7, #11]
 8001bd2:	4413      	add	r3, r2
 8001bd4:	b2db      	uxtb	r3, r3
 8001bd6:	2200      	movs	r2, #0
 8001bd8:	2101      	movs	r1, #1
 8001bda:	6878      	ldr	r0, [r7, #4]
 8001bdc:	f7ff fed3 	bl	8001986 <place_piece>
 8001be0:	7afb      	ldrb	r3, [r7, #11]
 8001be2:	3301      	adds	r3, #1
 8001be4:	72fb      	strb	r3, [r7, #11]
 8001be6:	e0bb      	b.n	8001d60 <load_fen+0x2f4>
 8001be8:	7abb      	ldrb	r3, [r7, #10]
 8001bea:	011b      	lsls	r3, r3, #4
 8001bec:	b2da      	uxtb	r2, r3
 8001bee:	7afb      	ldrb	r3, [r7, #11]
 8001bf0:	4413      	add	r3, r2
 8001bf2:	b2db      	uxtb	r3, r3
 8001bf4:	2200      	movs	r2, #0
 8001bf6:	2102      	movs	r1, #2
 8001bf8:	6878      	ldr	r0, [r7, #4]
 8001bfa:	f7ff fec4 	bl	8001986 <place_piece>
 8001bfe:	7afb      	ldrb	r3, [r7, #11]
 8001c00:	3301      	adds	r3, #1
 8001c02:	72fb      	strb	r3, [r7, #11]
 8001c04:	e0ac      	b.n	8001d60 <load_fen+0x2f4>
 8001c06:	7abb      	ldrb	r3, [r7, #10]
 8001c08:	011b      	lsls	r3, r3, #4
 8001c0a:	b2da      	uxtb	r2, r3
 8001c0c:	7afb      	ldrb	r3, [r7, #11]
 8001c0e:	4413      	add	r3, r2
 8001c10:	b2db      	uxtb	r3, r3
 8001c12:	2200      	movs	r2, #0
 8001c14:	2103      	movs	r1, #3
 8001c16:	6878      	ldr	r0, [r7, #4]
 8001c18:	f7ff feb5 	bl	8001986 <place_piece>
 8001c1c:	7afb      	ldrb	r3, [r7, #11]
 8001c1e:	3301      	adds	r3, #1
 8001c20:	72fb      	strb	r3, [r7, #11]
 8001c22:	e09d      	b.n	8001d60 <load_fen+0x2f4>
 8001c24:	7abb      	ldrb	r3, [r7, #10]
 8001c26:	011b      	lsls	r3, r3, #4
 8001c28:	b2da      	uxtb	r2, r3
 8001c2a:	7afb      	ldrb	r3, [r7, #11]
 8001c2c:	4413      	add	r3, r2
 8001c2e:	b2db      	uxtb	r3, r3
 8001c30:	2200      	movs	r2, #0
 8001c32:	2104      	movs	r1, #4
 8001c34:	6878      	ldr	r0, [r7, #4]
 8001c36:	f7ff fea6 	bl	8001986 <place_piece>
 8001c3a:	7afb      	ldrb	r3, [r7, #11]
 8001c3c:	3301      	adds	r3, #1
 8001c3e:	72fb      	strb	r3, [r7, #11]
 8001c40:	e08e      	b.n	8001d60 <load_fen+0x2f4>
 8001c42:	7abb      	ldrb	r3, [r7, #10]
 8001c44:	011b      	lsls	r3, r3, #4
 8001c46:	b2da      	uxtb	r2, r3
 8001c48:	7afb      	ldrb	r3, [r7, #11]
 8001c4a:	4413      	add	r3, r2
 8001c4c:	b2db      	uxtb	r3, r3
 8001c4e:	2200      	movs	r2, #0
 8001c50:	2105      	movs	r1, #5
 8001c52:	6878      	ldr	r0, [r7, #4]
 8001c54:	f7ff fe97 	bl	8001986 <place_piece>
 8001c58:	7afb      	ldrb	r3, [r7, #11]
 8001c5a:	3301      	adds	r3, #1
 8001c5c:	72fb      	strb	r3, [r7, #11]
 8001c5e:	e07f      	b.n	8001d60 <load_fen+0x2f4>
 8001c60:	7abb      	ldrb	r3, [r7, #10]
 8001c62:	011b      	lsls	r3, r3, #4
 8001c64:	b2da      	uxtb	r2, r3
 8001c66:	7afb      	ldrb	r3, [r7, #11]
 8001c68:	4413      	add	r3, r2
 8001c6a:	b2db      	uxtb	r3, r3
 8001c6c:	2201      	movs	r2, #1
 8001c6e:	2100      	movs	r1, #0
 8001c70:	6878      	ldr	r0, [r7, #4]
 8001c72:	f7ff fe88 	bl	8001986 <place_piece>
 8001c76:	7afb      	ldrb	r3, [r7, #11]
 8001c78:	3301      	adds	r3, #1
 8001c7a:	72fb      	strb	r3, [r7, #11]
 8001c7c:	e070      	b.n	8001d60 <load_fen+0x2f4>
 8001c7e:	7abb      	ldrb	r3, [r7, #10]
 8001c80:	011b      	lsls	r3, r3, #4
 8001c82:	b2da      	uxtb	r2, r3
 8001c84:	7afb      	ldrb	r3, [r7, #11]
 8001c86:	4413      	add	r3, r2
 8001c88:	b2db      	uxtb	r3, r3
 8001c8a:	2201      	movs	r2, #1
 8001c8c:	2101      	movs	r1, #1
 8001c8e:	6878      	ldr	r0, [r7, #4]
 8001c90:	f7ff fe79 	bl	8001986 <place_piece>
 8001c94:	7afb      	ldrb	r3, [r7, #11]
 8001c96:	3301      	adds	r3, #1
 8001c98:	72fb      	strb	r3, [r7, #11]
 8001c9a:	e061      	b.n	8001d60 <load_fen+0x2f4>
 8001c9c:	7abb      	ldrb	r3, [r7, #10]
 8001c9e:	011b      	lsls	r3, r3, #4
 8001ca0:	b2da      	uxtb	r2, r3
 8001ca2:	7afb      	ldrb	r3, [r7, #11]
 8001ca4:	4413      	add	r3, r2
 8001ca6:	b2db      	uxtb	r3, r3
 8001ca8:	2201      	movs	r2, #1
 8001caa:	2102      	movs	r1, #2
 8001cac:	6878      	ldr	r0, [r7, #4]
 8001cae:	f7ff fe6a 	bl	8001986 <place_piece>
 8001cb2:	7afb      	ldrb	r3, [r7, #11]
 8001cb4:	3301      	adds	r3, #1
 8001cb6:	72fb      	strb	r3, [r7, #11]
 8001cb8:	e052      	b.n	8001d60 <load_fen+0x2f4>
 8001cba:	7abb      	ldrb	r3, [r7, #10]
 8001cbc:	011b      	lsls	r3, r3, #4
 8001cbe:	b2da      	uxtb	r2, r3
 8001cc0:	7afb      	ldrb	r3, [r7, #11]
 8001cc2:	4413      	add	r3, r2
 8001cc4:	b2db      	uxtb	r3, r3
 8001cc6:	2201      	movs	r2, #1
 8001cc8:	2103      	movs	r1, #3
 8001cca:	6878      	ldr	r0, [r7, #4]
 8001ccc:	f7ff fe5b 	bl	8001986 <place_piece>
 8001cd0:	7afb      	ldrb	r3, [r7, #11]
 8001cd2:	3301      	adds	r3, #1
 8001cd4:	72fb      	strb	r3, [r7, #11]
 8001cd6:	e043      	b.n	8001d60 <load_fen+0x2f4>
 8001cd8:	7abb      	ldrb	r3, [r7, #10]
 8001cda:	011b      	lsls	r3, r3, #4
 8001cdc:	b2da      	uxtb	r2, r3
 8001cde:	7afb      	ldrb	r3, [r7, #11]
 8001ce0:	4413      	add	r3, r2
 8001ce2:	b2db      	uxtb	r3, r3
 8001ce4:	2201      	movs	r2, #1
 8001ce6:	2104      	movs	r1, #4
 8001ce8:	6878      	ldr	r0, [r7, #4]
 8001cea:	f7ff fe4c 	bl	8001986 <place_piece>
 8001cee:	7afb      	ldrb	r3, [r7, #11]
 8001cf0:	3301      	adds	r3, #1
 8001cf2:	72fb      	strb	r3, [r7, #11]
 8001cf4:	e034      	b.n	8001d60 <load_fen+0x2f4>
 8001cf6:	7abb      	ldrb	r3, [r7, #10]
 8001cf8:	011b      	lsls	r3, r3, #4
 8001cfa:	b2da      	uxtb	r2, r3
 8001cfc:	7afb      	ldrb	r3, [r7, #11]
 8001cfe:	4413      	add	r3, r2
 8001d00:	b2db      	uxtb	r3, r3
 8001d02:	2201      	movs	r2, #1
 8001d04:	2105      	movs	r1, #5
 8001d06:	6878      	ldr	r0, [r7, #4]
 8001d08:	f7ff fe3d 	bl	8001986 <place_piece>
 8001d0c:	7afb      	ldrb	r3, [r7, #11]
 8001d0e:	3301      	adds	r3, #1
 8001d10:	72fb      	strb	r3, [r7, #11]
 8001d12:	e025      	b.n	8001d60 <load_fen+0x2f4>
 8001d14:	7abb      	ldrb	r3, [r7, #10]
 8001d16:	3b01      	subs	r3, #1
 8001d18:	72bb      	strb	r3, [r7, #10]
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	72fb      	strb	r3, [r7, #11]
 8001d1e:	e01f      	b.n	8001d60 <load_fen+0x2f4>
 8001d20:	7afb      	ldrb	r3, [r7, #11]
 8001d22:	3301      	adds	r3, #1
 8001d24:	72fb      	strb	r3, [r7, #11]
 8001d26:	e01b      	b.n	8001d60 <load_fen+0x2f4>
 8001d28:	7afb      	ldrb	r3, [r7, #11]
 8001d2a:	3302      	adds	r3, #2
 8001d2c:	72fb      	strb	r3, [r7, #11]
 8001d2e:	e017      	b.n	8001d60 <load_fen+0x2f4>
 8001d30:	7afb      	ldrb	r3, [r7, #11]
 8001d32:	3303      	adds	r3, #3
 8001d34:	72fb      	strb	r3, [r7, #11]
 8001d36:	e013      	b.n	8001d60 <load_fen+0x2f4>
 8001d38:	7afb      	ldrb	r3, [r7, #11]
 8001d3a:	3304      	adds	r3, #4
 8001d3c:	72fb      	strb	r3, [r7, #11]
 8001d3e:	e00f      	b.n	8001d60 <load_fen+0x2f4>
 8001d40:	7afb      	ldrb	r3, [r7, #11]
 8001d42:	3305      	adds	r3, #5
 8001d44:	72fb      	strb	r3, [r7, #11]
 8001d46:	e00b      	b.n	8001d60 <load_fen+0x2f4>
 8001d48:	7afb      	ldrb	r3, [r7, #11]
 8001d4a:	3306      	adds	r3, #6
 8001d4c:	72fb      	strb	r3, [r7, #11]
 8001d4e:	e007      	b.n	8001d60 <load_fen+0x2f4>
 8001d50:	7afb      	ldrb	r3, [r7, #11]
 8001d52:	3307      	adds	r3, #7
 8001d54:	72fb      	strb	r3, [r7, #11]
 8001d56:	e003      	b.n	8001d60 <load_fen+0x2f4>
 8001d58:	7afb      	ldrb	r3, [r7, #11]
 8001d5a:	3308      	adds	r3, #8
 8001d5c:	72fb      	strb	r3, [r7, #11]
 8001d5e:	bf00      	nop
 8001d60:	68fb      	ldr	r3, [r7, #12]
 8001d62:	3301      	adds	r3, #1
 8001d64:	60fb      	str	r3, [r7, #12]
 8001d66:	68fb      	ldr	r3, [r7, #12]
 8001d68:	781b      	ldrb	r3, [r3, #0]
 8001d6a:	2b20      	cmp	r3, #32
 8001d6c:	f47f ae8c 	bne.w	8001a88 <load_fen+0x1c>
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	3301      	adds	r3, #1
 8001d74:	60fb      	str	r3, [r7, #12]
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	781b      	ldrb	r3, [r3, #0]
 8001d7a:	2b77      	cmp	r3, #119	; 0x77
 8001d7c:	d104      	bne.n	8001d88 <load_fen+0x31c>
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	2200      	movs	r2, #0
 8001d82:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001d86:	e003      	b.n	8001d90 <load_fen+0x324>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	2201      	movs	r2, #1
 8001d8c:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001d90:	68fb      	ldr	r3, [r7, #12]
 8001d92:	3302      	adds	r3, #2
 8001d94:	60fb      	str	r3, [r7, #12]
 8001d96:	68fb      	ldr	r3, [r7, #12]
 8001d98:	3301      	adds	r3, #1
 8001d9a:	60fb      	str	r3, [r7, #12]
 8001d9c:	68fb      	ldr	r3, [r7, #12]
 8001d9e:	781b      	ldrb	r3, [r3, #0]
 8001da0:	2b20      	cmp	r3, #32
 8001da2:	d1f8      	bne.n	8001d96 <load_fen+0x32a>
 8001da4:	68fb      	ldr	r3, [r7, #12]
 8001da6:	3301      	adds	r3, #1
 8001da8:	60fb      	str	r3, [r7, #12]
 8001daa:	68fb      	ldr	r3, [r7, #12]
 8001dac:	3301      	adds	r3, #1
 8001dae:	60fb      	str	r3, [r7, #12]
 8001db0:	68fb      	ldr	r3, [r7, #12]
 8001db2:	781b      	ldrb	r3, [r3, #0]
 8001db4:	2b20      	cmp	r3, #32
 8001db6:	d1f8      	bne.n	8001daa <load_fen+0x33e>
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	3301      	adds	r3, #1
 8001dbc:	60fb      	str	r3, [r7, #12]
 8001dbe:	2301      	movs	r3, #1
 8001dc0:	4618      	mov	r0, r3
 8001dc2:	3710      	adds	r7, #16
 8001dc4:	46bd      	mov	sp, r7
 8001dc6:	bd80      	pop	{r7, pc}

08001dc8 <make_move>:
 8001dc8:	b590      	push	{r4, r7, lr}
 8001dca:	f5ad 7d47 	sub.w	sp, sp, #796	; 0x31c
 8001dce:	af00      	add	r7, sp, #0
 8001dd0:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001dd4:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001dd8:	6018      	str	r0, [r3, #0]
 8001dda:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001dde:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001de2:	6019      	str	r1, [r3, #0]
 8001de4:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001de8:	f2a3 3311 	subw	r3, r3, #785	; 0x311
 8001dec:	701a      	strb	r2, [r3, #0]
 8001dee:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001df2:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001df6:	781a      	ldrb	r2, [r3, #0]
 8001df8:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001dfc:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001e00:	785b      	ldrb	r3, [r3, #1]
 8001e02:	429a      	cmp	r2, r3
 8001e04:	d101      	bne.n	8001e0a <make_move+0x42>
 8001e06:	2300      	movs	r3, #0
 8001e08:	e0da      	b.n	8001fc0 <make_move+0x1f8>
 8001e0a:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001e0e:	f2a3 3311 	subw	r3, r3, #785	; 0x311
 8001e12:	781b      	ldrb	r3, [r3, #0]
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d04c      	beq.n	8001eb2 <make_move+0xea>
 8001e18:	2300      	movs	r3, #0
 8001e1a:	f887 3317 	strb.w	r3, [r7, #791]	; 0x317
 8001e1e:	f107 0214 	add.w	r2, r7, #20
 8001e22:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001e26:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001e2a:	4611      	mov	r1, r2
 8001e2c:	6818      	ldr	r0, [r3, #0]
 8001e2e:	f000 f8d5 	bl	8001fdc <generate_moves>
 8001e32:	4603      	mov	r3, r0
 8001e34:	f887 3315 	strb.w	r3, [r7, #789]	; 0x315
 8001e38:	2300      	movs	r3, #0
 8001e3a:	f887 3316 	strb.w	r3, [r7, #790]	; 0x316
 8001e3e:	e02c      	b.n	8001e9a <make_move+0xd2>
 8001e40:	f897 2316 	ldrb.w	r2, [r7, #790]	; 0x316
 8001e44:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001e48:	f5a3 7141 	sub.w	r1, r3, #772	; 0x304
 8001e4c:	4613      	mov	r3, r2
 8001e4e:	005b      	lsls	r3, r3, #1
 8001e50:	4413      	add	r3, r2
 8001e52:	440b      	add	r3, r1
 8001e54:	781a      	ldrb	r2, [r3, #0]
 8001e56:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001e5a:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001e5e:	781b      	ldrb	r3, [r3, #0]
 8001e60:	429a      	cmp	r2, r3
 8001e62:	d115      	bne.n	8001e90 <make_move+0xc8>
 8001e64:	f897 2316 	ldrb.w	r2, [r7, #790]	; 0x316
 8001e68:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001e6c:	f5a3 7141 	sub.w	r1, r3, #772	; 0x304
 8001e70:	4613      	mov	r3, r2
 8001e72:	005b      	lsls	r3, r3, #1
 8001e74:	4413      	add	r3, r2
 8001e76:	440b      	add	r3, r1
 8001e78:	3301      	adds	r3, #1
 8001e7a:	781a      	ldrb	r2, [r3, #0]
 8001e7c:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001e80:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001e84:	785b      	ldrb	r3, [r3, #1]
 8001e86:	429a      	cmp	r2, r3
 8001e88:	d102      	bne.n	8001e90 <make_move+0xc8>
 8001e8a:	2301      	movs	r3, #1
 8001e8c:	f887 3317 	strb.w	r3, [r7, #791]	; 0x317
 8001e90:	f897 3316 	ldrb.w	r3, [r7, #790]	; 0x316
 8001e94:	3301      	adds	r3, #1
 8001e96:	f887 3316 	strb.w	r3, [r7, #790]	; 0x316
 8001e9a:	f897 2316 	ldrb.w	r2, [r7, #790]	; 0x316
 8001e9e:	f897 3315 	ldrb.w	r3, [r7, #789]	; 0x315
 8001ea2:	429a      	cmp	r2, r3
 8001ea4:	d3cc      	bcc.n	8001e40 <make_move+0x78>
 8001ea6:	f897 3317 	ldrb.w	r3, [r7, #791]	; 0x317
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d101      	bne.n	8001eb2 <make_move+0xea>
 8001eae:	2300      	movs	r3, #0
 8001eb0:	e086      	b.n	8001fc0 <make_move+0x1f8>
 8001eb2:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001eb6:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	f893 3100 	ldrb.w	r3, [r3, #256]	; 0x100
 8001ec0:	f1c3 0301 	rsb	r3, r3, #1
 8001ec4:	b2da      	uxtb	r2, r3
 8001ec6:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001eca:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001ed4:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001ed8:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001edc:	785b      	ldrb	r3, [r3, #1]
 8001ede:	461a      	mov	r2, r3
 8001ee0:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001ee4:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	5c9b      	ldrb	r3, [r3, r2]
 8001eec:	2b06      	cmp	r3, #6
 8001eee:	d00c      	beq.n	8001f0a <make_move+0x142>
 8001ef0:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001ef4:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001ef8:	785a      	ldrb	r2, [r3, #1]
 8001efa:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001efe:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001f02:	4611      	mov	r1, r2
 8001f04:	6818      	ldr	r0, [r3, #0]
 8001f06:	f7ff fd5c 	bl	80019c2 <remove_piece>
 8001f0a:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f0e:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001f12:	789b      	ldrb	r3, [r3, #2]
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	d01f      	beq.n	8001f58 <make_move+0x190>
 8001f18:	f000 f857 	bl	8001fca <check_promotion>
 8001f1c:	4603      	mov	r3, r0
 8001f1e:	461c      	mov	r4, r3
 8001f20:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f24:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001f28:	781b      	ldrb	r3, [r3, #0]
 8001f2a:	461a      	mov	r2, r3
 8001f2c:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f30:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	4413      	add	r3, r2
 8001f38:	f893 2080 	ldrb.w	r2, [r3, #128]	; 0x80
 8001f3c:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f40:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001f44:	785b      	ldrb	r3, [r3, #1]
 8001f46:	f507 7146 	add.w	r1, r7, #792	; 0x318
 8001f4a:	f5a1 7043 	sub.w	r0, r1, #780	; 0x30c
 8001f4e:	4621      	mov	r1, r4
 8001f50:	6800      	ldr	r0, [r0, #0]
 8001f52:	f7ff fd18 	bl	8001986 <place_piece>
 8001f56:	e025      	b.n	8001fa4 <make_move+0x1dc>
 8001f58:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f5c:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001f60:	781b      	ldrb	r3, [r3, #0]
 8001f62:	461a      	mov	r2, r3
 8001f64:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f68:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	5c99      	ldrb	r1, [r3, r2]
 8001f70:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f74:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001f78:	781b      	ldrb	r3, [r3, #0]
 8001f7a:	461a      	mov	r2, r3
 8001f7c:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f80:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	4413      	add	r3, r2
 8001f88:	f893 2080 	ldrb.w	r2, [r3, #128]	; 0x80
 8001f8c:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001f90:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001f94:	785b      	ldrb	r3, [r3, #1]
 8001f96:	f507 7046 	add.w	r0, r7, #792	; 0x318
 8001f9a:	f5a0 7043 	sub.w	r0, r0, #780	; 0x30c
 8001f9e:	6800      	ldr	r0, [r0, #0]
 8001fa0:	f7ff fcf1 	bl	8001986 <place_piece>
 8001fa4:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001fa8:	f5a3 7344 	sub.w	r3, r3, #784	; 0x310
 8001fac:	781a      	ldrb	r2, [r3, #0]
 8001fae:	f507 7346 	add.w	r3, r7, #792	; 0x318
 8001fb2:	f5a3 7343 	sub.w	r3, r3, #780	; 0x30c
 8001fb6:	4611      	mov	r1, r2
 8001fb8:	6818      	ldr	r0, [r3, #0]
 8001fba:	f7ff fd02 	bl	80019c2 <remove_piece>
 8001fbe:	2301      	movs	r3, #1
 8001fc0:	4618      	mov	r0, r3
 8001fc2:	f507 7747 	add.w	r7, r7, #796	; 0x31c
 8001fc6:	46bd      	mov	sp, r7
 8001fc8:	bd90      	pop	{r4, r7, pc}

08001fca <check_promotion>:
 8001fca:	b580      	push	{r7, lr}
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	f7ff fc89 	bl	80018e4 <get_promotion>
 8001fd2:	4603      	mov	r3, r0
 8001fd4:	b2db      	uxtb	r3, r3
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	bd80      	pop	{r7, pc}
	...

08001fdc <generate_moves>:
 8001fdc:	b480      	push	{r7}
 8001fde:	b087      	sub	sp, #28
 8001fe0:	af00      	add	r7, sp, #0
 8001fe2:	6078      	str	r0, [r7, #4]
 8001fe4:	6039      	str	r1, [r7, #0]
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	82fb      	strh	r3, [r7, #22]
 8001fea:	2300      	movs	r3, #0
 8001fec:	613b      	str	r3, [r7, #16]
 8001fee:	e281      	b.n	80024f4 <generate_moves+0x518>
 8001ff0:	687a      	ldr	r2, [r7, #4]
 8001ff2:	693b      	ldr	r3, [r7, #16]
 8001ff4:	4413      	add	r3, r2
 8001ff6:	781b      	ldrb	r3, [r3, #0]
 8001ff8:	737b      	strb	r3, [r7, #13]
 8001ffa:	7b7b      	ldrb	r3, [r7, #13]
 8001ffc:	2b06      	cmp	r3, #6
 8001ffe:	f000 8273 	beq.w	80024e8 <generate_moves+0x50c>
 8002002:	687a      	ldr	r2, [r7, #4]
 8002004:	693b      	ldr	r3, [r7, #16]
 8002006:	4413      	add	r3, r2
 8002008:	3380      	adds	r3, #128	; 0x80
 800200a:	781a      	ldrb	r2, [r3, #0]
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	f893 3100 	ldrb.w	r3, [r3, #256]	; 0x100
 8002012:	429a      	cmp	r2, r3
 8002014:	f040 826a 	bne.w	80024ec <generate_moves+0x510>
 8002018:	7b7b      	ldrb	r3, [r7, #13]
 800201a:	2b05      	cmp	r3, #5
 800201c:	f040 81e2 	bne.w	80023e4 <generate_moves+0x408>
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	f893 3100 	ldrb.w	r3, [r3, #256]	; 0x100
 8002026:	2b00      	cmp	r3, #0
 8002028:	f040 80ee 	bne.w	8002208 <generate_moves+0x22c>
 800202c:	693b      	ldr	r3, [r7, #16]
 800202e:	3310      	adds	r3, #16
 8002030:	f003 0388 	and.w	r3, r3, #136	; 0x88
 8002034:	2b00      	cmp	r3, #0
 8002036:	d162      	bne.n	80020fe <generate_moves+0x122>
 8002038:	693b      	ldr	r3, [r7, #16]
 800203a:	3310      	adds	r3, #16
 800203c:	687a      	ldr	r2, [r7, #4]
 800203e:	5cd3      	ldrb	r3, [r2, r3]
 8002040:	2b06      	cmp	r3, #6
 8002042:	d15c      	bne.n	80020fe <generate_moves+0x122>
 8002044:	8afa      	ldrh	r2, [r7, #22]
 8002046:	4613      	mov	r3, r2
 8002048:	005b      	lsls	r3, r3, #1
 800204a:	4413      	add	r3, r2
 800204c:	683a      	ldr	r2, [r7, #0]
 800204e:	4413      	add	r3, r2
 8002050:	693a      	ldr	r2, [r7, #16]
 8002052:	b2d2      	uxtb	r2, r2
 8002054:	701a      	strb	r2, [r3, #0]
 8002056:	693b      	ldr	r3, [r7, #16]
 8002058:	b2d9      	uxtb	r1, r3
 800205a:	8afa      	ldrh	r2, [r7, #22]
 800205c:	4613      	mov	r3, r2
 800205e:	005b      	lsls	r3, r3, #1
 8002060:	4413      	add	r3, r2
 8002062:	683a      	ldr	r2, [r7, #0]
 8002064:	4413      	add	r3, r2
 8002066:	f101 0210 	add.w	r2, r1, #16
 800206a:	b2d2      	uxtb	r2, r2
 800206c:	705a      	strb	r2, [r3, #1]
 800206e:	8afa      	ldrh	r2, [r7, #22]
 8002070:	4613      	mov	r3, r2
 8002072:	005b      	lsls	r3, r3, #1
 8002074:	4413      	add	r3, r2
 8002076:	683a      	ldr	r2, [r7, #0]
 8002078:	4413      	add	r3, r2
 800207a:	2200      	movs	r2, #0
 800207c:	709a      	strb	r2, [r3, #2]
 800207e:	8afa      	ldrh	r2, [r7, #22]
 8002080:	4613      	mov	r3, r2
 8002082:	005b      	lsls	r3, r3, #1
 8002084:	4413      	add	r3, r2
 8002086:	683a      	ldr	r2, [r7, #0]
 8002088:	4413      	add	r3, r2
 800208a:	785b      	ldrb	r3, [r3, #1]
 800208c:	091b      	lsrs	r3, r3, #4
 800208e:	b2db      	uxtb	r3, r3
 8002090:	2b07      	cmp	r3, #7
 8002092:	d107      	bne.n	80020a4 <generate_moves+0xc8>
 8002094:	8afa      	ldrh	r2, [r7, #22]
 8002096:	4613      	mov	r3, r2
 8002098:	005b      	lsls	r3, r3, #1
 800209a:	4413      	add	r3, r2
 800209c:	683a      	ldr	r2, [r7, #0]
 800209e:	4413      	add	r3, r2
 80020a0:	2201      	movs	r2, #1
 80020a2:	709a      	strb	r2, [r3, #2]
 80020a4:	8afb      	ldrh	r3, [r7, #22]
 80020a6:	3301      	adds	r3, #1
 80020a8:	82fb      	strh	r3, [r7, #22]
 80020aa:	693b      	ldr	r3, [r7, #16]
 80020ac:	111b      	asrs	r3, r3, #4
 80020ae:	2b01      	cmp	r3, #1
 80020b0:	d125      	bne.n	80020fe <generate_moves+0x122>
 80020b2:	693b      	ldr	r3, [r7, #16]
 80020b4:	3320      	adds	r3, #32
 80020b6:	687a      	ldr	r2, [r7, #4]
 80020b8:	5cd3      	ldrb	r3, [r2, r3]
 80020ba:	2b06      	cmp	r3, #6
 80020bc:	d11f      	bne.n	80020fe <generate_moves+0x122>
 80020be:	8afa      	ldrh	r2, [r7, #22]
 80020c0:	4613      	mov	r3, r2
 80020c2:	005b      	lsls	r3, r3, #1
 80020c4:	4413      	add	r3, r2
 80020c6:	683a      	ldr	r2, [r7, #0]
 80020c8:	4413      	add	r3, r2
 80020ca:	693a      	ldr	r2, [r7, #16]
 80020cc:	b2d2      	uxtb	r2, r2
 80020ce:	701a      	strb	r2, [r3, #0]
 80020d0:	693b      	ldr	r3, [r7, #16]
 80020d2:	b2d9      	uxtb	r1, r3
 80020d4:	8afa      	ldrh	r2, [r7, #22]
 80020d6:	4613      	mov	r3, r2
 80020d8:	005b      	lsls	r3, r3, #1
 80020da:	4413      	add	r3, r2
 80020dc:	683a      	ldr	r2, [r7, #0]
 80020de:	4413      	add	r3, r2
 80020e0:	f101 0220 	add.w	r2, r1, #32
 80020e4:	b2d2      	uxtb	r2, r2
 80020e6:	705a      	strb	r2, [r3, #1]
 80020e8:	8afa      	ldrh	r2, [r7, #22]
 80020ea:	4613      	mov	r3, r2
 80020ec:	005b      	lsls	r3, r3, #1
 80020ee:	4413      	add	r3, r2
 80020f0:	683a      	ldr	r2, [r7, #0]
 80020f2:	4413      	add	r3, r2
 80020f4:	2200      	movs	r2, #0
 80020f6:	709a      	strb	r2, [r3, #2]
 80020f8:	8afb      	ldrh	r3, [r7, #22]
 80020fa:	3301      	adds	r3, #1
 80020fc:	82fb      	strh	r3, [r7, #22]
 80020fe:	693b      	ldr	r3, [r7, #16]
 8002100:	3311      	adds	r3, #17
 8002102:	f003 0388 	and.w	r3, r3, #136	; 0x88
 8002106:	2b00      	cmp	r3, #0
 8002108:	d13a      	bne.n	8002180 <generate_moves+0x1a4>
 800210a:	693b      	ldr	r3, [r7, #16]
 800210c:	3311      	adds	r3, #17
 800210e:	687a      	ldr	r2, [r7, #4]
 8002110:	4413      	add	r3, r2
 8002112:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8002116:	2b01      	cmp	r3, #1
 8002118:	d132      	bne.n	8002180 <generate_moves+0x1a4>
 800211a:	8afa      	ldrh	r2, [r7, #22]
 800211c:	4613      	mov	r3, r2
 800211e:	005b      	lsls	r3, r3, #1
 8002120:	4413      	add	r3, r2
 8002122:	683a      	ldr	r2, [r7, #0]
 8002124:	4413      	add	r3, r2
 8002126:	693a      	ldr	r2, [r7, #16]
 8002128:	b2d2      	uxtb	r2, r2
 800212a:	701a      	strb	r2, [r3, #0]
 800212c:	693b      	ldr	r3, [r7, #16]
 800212e:	b2d9      	uxtb	r1, r3
 8002130:	8afa      	ldrh	r2, [r7, #22]
 8002132:	4613      	mov	r3, r2
 8002134:	005b      	lsls	r3, r3, #1
 8002136:	4413      	add	r3, r2
 8002138:	683a      	ldr	r2, [r7, #0]
 800213a:	4413      	add	r3, r2
 800213c:	f101 0211 	add.w	r2, r1, #17
 8002140:	b2d2      	uxtb	r2, r2
 8002142:	705a      	strb	r2, [r3, #1]
 8002144:	8afa      	ldrh	r2, [r7, #22]
 8002146:	4613      	mov	r3, r2
 8002148:	005b      	lsls	r3, r3, #1
 800214a:	4413      	add	r3, r2
 800214c:	683a      	ldr	r2, [r7, #0]
 800214e:	4413      	add	r3, r2
 8002150:	2200      	movs	r2, #0
 8002152:	709a      	strb	r2, [r3, #2]
 8002154:	8afa      	ldrh	r2, [r7, #22]
 8002156:	4613      	mov	r3, r2
 8002158:	005b      	lsls	r3, r3, #1
 800215a:	4413      	add	r3, r2
 800215c:	683a      	ldr	r2, [r7, #0]
 800215e:	4413      	add	r3, r2
 8002160:	785b      	ldrb	r3, [r3, #1]
 8002162:	091b      	lsrs	r3, r3, #4
 8002164:	b2db      	uxtb	r3, r3
 8002166:	2b07      	cmp	r3, #7
 8002168:	d107      	bne.n	800217a <generate_moves+0x19e>
 800216a:	8afa      	ldrh	r2, [r7, #22]
 800216c:	4613      	mov	r3, r2
 800216e:	005b      	lsls	r3, r3, #1
 8002170:	4413      	add	r3, r2
 8002172:	683a      	ldr	r2, [r7, #0]
 8002174:	4413      	add	r3, r2
 8002176:	2201      	movs	r2, #1
 8002178:	709a      	strb	r2, [r3, #2]
 800217a:	8afb      	ldrh	r3, [r7, #22]
 800217c:	3301      	adds	r3, #1
 800217e:	82fb      	strh	r3, [r7, #22]
 8002180:	693b      	ldr	r3, [r7, #16]
 8002182:	330f      	adds	r3, #15
 8002184:	f003 0388 	and.w	r3, r3, #136	; 0x88
 8002188:	2b00      	cmp	r3, #0
 800218a:	f040 81b0 	bne.w	80024ee <generate_moves+0x512>
 800218e:	693b      	ldr	r3, [r7, #16]
 8002190:	330f      	adds	r3, #15
 8002192:	687a      	ldr	r2, [r7, #4]
 8002194:	4413      	add	r3, r2
 8002196:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800219a:	2b01      	cmp	r3, #1
 800219c:	f040 81a7 	bne.w	80024ee <generate_moves+0x512>
 80021a0:	8afa      	ldrh	r2, [r7, #22]
 80021a2:	4613      	mov	r3, r2
 80021a4:	005b      	lsls	r3, r3, #1
 80021a6:	4413      	add	r3, r2
 80021a8:	683a      	ldr	r2, [r7, #0]
 80021aa:	4413      	add	r3, r2
 80021ac:	693a      	ldr	r2, [r7, #16]
 80021ae:	b2d2      	uxtb	r2, r2
 80021b0:	701a      	strb	r2, [r3, #0]
 80021b2:	693b      	ldr	r3, [r7, #16]
 80021b4:	b2d9      	uxtb	r1, r3
 80021b6:	8afa      	ldrh	r2, [r7, #22]
 80021b8:	4613      	mov	r3, r2
 80021ba:	005b      	lsls	r3, r3, #1
 80021bc:	4413      	add	r3, r2
 80021be:	683a      	ldr	r2, [r7, #0]
 80021c0:	4413      	add	r3, r2
 80021c2:	f101 020f 	add.w	r2, r1, #15
 80021c6:	b2d2      	uxtb	r2, r2
 80021c8:	705a      	strb	r2, [r3, #1]
 80021ca:	8afa      	ldrh	r2, [r7, #22]
 80021cc:	4613      	mov	r3, r2
 80021ce:	005b      	lsls	r3, r3, #1
 80021d0:	4413      	add	r3, r2
 80021d2:	683a      	ldr	r2, [r7, #0]
 80021d4:	4413      	add	r3, r2
 80021d6:	2200      	movs	r2, #0
 80021d8:	709a      	strb	r2, [r3, #2]
 80021da:	8afa      	ldrh	r2, [r7, #22]
 80021dc:	4613      	mov	r3, r2
 80021de:	005b      	lsls	r3, r3, #1
 80021e0:	4413      	add	r3, r2
 80021e2:	683a      	ldr	r2, [r7, #0]
 80021e4:	4413      	add	r3, r2
 80021e6:	785b      	ldrb	r3, [r3, #1]
 80021e8:	091b      	lsrs	r3, r3, #4
 80021ea:	b2db      	uxtb	r3, r3
 80021ec:	2b07      	cmp	r3, #7
 80021ee:	d107      	bne.n	8002200 <generate_moves+0x224>
 80021f0:	8afa      	ldrh	r2, [r7, #22]
 80021f2:	4613      	mov	r3, r2
 80021f4:	005b      	lsls	r3, r3, #1
 80021f6:	4413      	add	r3, r2
 80021f8:	683a      	ldr	r2, [r7, #0]
 80021fa:	4413      	add	r3, r2
 80021fc:	2201      	movs	r2, #1
 80021fe:	709a      	strb	r2, [r3, #2]
 8002200:	8afb      	ldrh	r3, [r7, #22]
 8002202:	3301      	adds	r3, #1
 8002204:	82fb      	strh	r3, [r7, #22]
 8002206:	e172      	b.n	80024ee <generate_moves+0x512>
 8002208:	693b      	ldr	r3, [r7, #16]
 800220a:	3b10      	subs	r3, #16
 800220c:	f003 0388 	and.w	r3, r3, #136	; 0x88
 8002210:	2b00      	cmp	r3, #0
 8002212:	d162      	bne.n	80022da <generate_moves+0x2fe>
 8002214:	693b      	ldr	r3, [r7, #16]
 8002216:	3b10      	subs	r3, #16
 8002218:	687a      	ldr	r2, [r7, #4]
 800221a:	5cd3      	ldrb	r3, [r2, r3]
 800221c:	2b06      	cmp	r3, #6
 800221e:	d15c      	bne.n	80022da <generate_moves+0x2fe>
 8002220:	8afa      	ldrh	r2, [r7, #22]
 8002222:	4613      	mov	r3, r2
 8002224:	005b      	lsls	r3, r3, #1
 8002226:	4413      	add	r3, r2
 8002228:	683a      	ldr	r2, [r7, #0]
 800222a:	4413      	add	r3, r2
 800222c:	693a      	ldr	r2, [r7, #16]
 800222e:	b2d2      	uxtb	r2, r2
 8002230:	701a      	strb	r2, [r3, #0]
 8002232:	693b      	ldr	r3, [r7, #16]
 8002234:	b2d9      	uxtb	r1, r3
 8002236:	8afa      	ldrh	r2, [r7, #22]
 8002238:	4613      	mov	r3, r2
 800223a:	005b      	lsls	r3, r3, #1
 800223c:	4413      	add	r3, r2
 800223e:	683a      	ldr	r2, [r7, #0]
 8002240:	4413      	add	r3, r2
 8002242:	f1a1 0210 	sub.w	r2, r1, #16
 8002246:	b2d2      	uxtb	r2, r2
 8002248:	705a      	strb	r2, [r3, #1]
 800224a:	8afa      	ldrh	r2, [r7, #22]
 800224c:	4613      	mov	r3, r2
 800224e:	005b      	lsls	r3, r3, #1
 8002250:	4413      	add	r3, r2
 8002252:	683a      	ldr	r2, [r7, #0]
 8002254:	4413      	add	r3, r2
 8002256:	2200      	movs	r2, #0
 8002258:	709a      	strb	r2, [r3, #2]
 800225a:	8afa      	ldrh	r2, [r7, #22]
 800225c:	4613      	mov	r3, r2
 800225e:	005b      	lsls	r3, r3, #1
 8002260:	4413      	add	r3, r2
 8002262:	683a      	ldr	r2, [r7, #0]
 8002264:	4413      	add	r3, r2
 8002266:	785b      	ldrb	r3, [r3, #1]
 8002268:	091b      	lsrs	r3, r3, #4
 800226a:	b2db      	uxtb	r3, r3
 800226c:	2b00      	cmp	r3, #0
 800226e:	d107      	bne.n	8002280 <generate_moves+0x2a4>
 8002270:	8afa      	ldrh	r2, [r7, #22]
 8002272:	4613      	mov	r3, r2
 8002274:	005b      	lsls	r3, r3, #1
 8002276:	4413      	add	r3, r2
 8002278:	683a      	ldr	r2, [r7, #0]
 800227a:	4413      	add	r3, r2
 800227c:	2201      	movs	r2, #1
 800227e:	709a      	strb	r2, [r3, #2]
 8002280:	8afb      	ldrh	r3, [r7, #22]
 8002282:	3301      	adds	r3, #1
 8002284:	82fb      	strh	r3, [r7, #22]
 8002286:	693b      	ldr	r3, [r7, #16]
 8002288:	111b      	asrs	r3, r3, #4
 800228a:	2b06      	cmp	r3, #6
 800228c:	d125      	bne.n	80022da <generate_moves+0x2fe>
 800228e:	693b      	ldr	r3, [r7, #16]
 8002290:	3b20      	subs	r3, #32
 8002292:	687a      	ldr	r2, [r7, #4]
 8002294:	5cd3      	ldrb	r3, [r2, r3]
 8002296:	2b06      	cmp	r3, #6
 8002298:	d11f      	bne.n	80022da <generate_moves+0x2fe>
 800229a:	8afa      	ldrh	r2, [r7, #22]
 800229c:	4613      	mov	r3, r2
 800229e:	005b      	lsls	r3, r3, #1
 80022a0:	4413      	add	r3, r2
 80022a2:	683a      	ldr	r2, [r7, #0]
 80022a4:	4413      	add	r3, r2
 80022a6:	693a      	ldr	r2, [r7, #16]
 80022a8:	b2d2      	uxtb	r2, r2
 80022aa:	701a      	strb	r2, [r3, #0]
 80022ac:	693b      	ldr	r3, [r7, #16]
 80022ae:	b2d9      	uxtb	r1, r3
 80022b0:	8afa      	ldrh	r2, [r7, #22]
 80022b2:	4613      	mov	r3, r2
 80022b4:	005b      	lsls	r3, r3, #1
 80022b6:	4413      	add	r3, r2
 80022b8:	683a      	ldr	r2, [r7, #0]
 80022ba:	4413      	add	r3, r2
 80022bc:	f1a1 0220 	sub.w	r2, r1, #32
 80022c0:	b2d2      	uxtb	r2, r2
 80022c2:	705a      	strb	r2, [r3, #1]
 80022c4:	8afa      	ldrh	r2, [r7, #22]
 80022c6:	4613      	mov	r3, r2
 80022c8:	005b      	lsls	r3, r3, #1
 80022ca:	4413      	add	r3, r2
 80022cc:	683a      	ldr	r2, [r7, #0]
 80022ce:	4413      	add	r3, r2
 80022d0:	2200      	movs	r2, #0
 80022d2:	709a      	strb	r2, [r3, #2]
 80022d4:	8afb      	ldrh	r3, [r7, #22]
 80022d6:	3301      	adds	r3, #1
 80022d8:	82fb      	strh	r3, [r7, #22]
 80022da:	693b      	ldr	r3, [r7, #16]
 80022dc:	3b0f      	subs	r3, #15
 80022de:	f003 0388 	and.w	r3, r3, #136	; 0x88
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d13a      	bne.n	800235c <generate_moves+0x380>
 80022e6:	693b      	ldr	r3, [r7, #16]
 80022e8:	3b0f      	subs	r3, #15
 80022ea:	687a      	ldr	r2, [r7, #4]
 80022ec:	4413      	add	r3, r2
 80022ee:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d132      	bne.n	800235c <generate_moves+0x380>
 80022f6:	8afa      	ldrh	r2, [r7, #22]
 80022f8:	4613      	mov	r3, r2
 80022fa:	005b      	lsls	r3, r3, #1
 80022fc:	4413      	add	r3, r2
 80022fe:	683a      	ldr	r2, [r7, #0]
 8002300:	4413      	add	r3, r2
 8002302:	693a      	ldr	r2, [r7, #16]
 8002304:	b2d2      	uxtb	r2, r2
 8002306:	701a      	strb	r2, [r3, #0]
 8002308:	693b      	ldr	r3, [r7, #16]
 800230a:	b2d9      	uxtb	r1, r3
 800230c:	8afa      	ldrh	r2, [r7, #22]
 800230e:	4613      	mov	r3, r2
 8002310:	005b      	lsls	r3, r3, #1
 8002312:	4413      	add	r3, r2
 8002314:	683a      	ldr	r2, [r7, #0]
 8002316:	4413      	add	r3, r2
 8002318:	f1a1 020f 	sub.w	r2, r1, #15
 800231c:	b2d2      	uxtb	r2, r2
 800231e:	705a      	strb	r2, [r3, #1]
 8002320:	8afa      	ldrh	r2, [r7, #22]
 8002322:	4613      	mov	r3, r2
 8002324:	005b      	lsls	r3, r3, #1
 8002326:	4413      	add	r3, r2
 8002328:	683a      	ldr	r2, [r7, #0]
 800232a:	4413      	add	r3, r2
 800232c:	2200      	movs	r2, #0
 800232e:	709a      	strb	r2, [r3, #2]
 8002330:	8afa      	ldrh	r2, [r7, #22]
 8002332:	4613      	mov	r3, r2
 8002334:	005b      	lsls	r3, r3, #1
 8002336:	4413      	add	r3, r2
 8002338:	683a      	ldr	r2, [r7, #0]
 800233a:	4413      	add	r3, r2
 800233c:	785b      	ldrb	r3, [r3, #1]
 800233e:	091b      	lsrs	r3, r3, #4
 8002340:	b2db      	uxtb	r3, r3
 8002342:	2b00      	cmp	r3, #0
 8002344:	d107      	bne.n	8002356 <generate_moves+0x37a>
 8002346:	8afa      	ldrh	r2, [r7, #22]
 8002348:	4613      	mov	r3, r2
 800234a:	005b      	lsls	r3, r3, #1
 800234c:	4413      	add	r3, r2
 800234e:	683a      	ldr	r2, [r7, #0]
 8002350:	4413      	add	r3, r2
 8002352:	2201      	movs	r2, #1
 8002354:	709a      	strb	r2, [r3, #2]
 8002356:	8afb      	ldrh	r3, [r7, #22]
 8002358:	3301      	adds	r3, #1
 800235a:	82fb      	strh	r3, [r7, #22]
 800235c:	693b      	ldr	r3, [r7, #16]
 800235e:	3b11      	subs	r3, #17
 8002360:	f003 0388 	and.w	r3, r3, #136	; 0x88
 8002364:	2b00      	cmp	r3, #0
 8002366:	f040 80c2 	bne.w	80024ee <generate_moves+0x512>
 800236a:	693b      	ldr	r3, [r7, #16]
 800236c:	3b11      	subs	r3, #17
 800236e:	687a      	ldr	r2, [r7, #4]
 8002370:	4413      	add	r3, r2
 8002372:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8002376:	2b00      	cmp	r3, #0
 8002378:	f040 80b9 	bne.w	80024ee <generate_moves+0x512>
 800237c:	8afa      	ldrh	r2, [r7, #22]
 800237e:	4613      	mov	r3, r2
 8002380:	005b      	lsls	r3, r3, #1
 8002382:	4413      	add	r3, r2
 8002384:	683a      	ldr	r2, [r7, #0]
 8002386:	4413      	add	r3, r2
 8002388:	693a      	ldr	r2, [r7, #16]
 800238a:	b2d2      	uxtb	r2, r2
 800238c:	701a      	strb	r2, [r3, #0]
 800238e:	693b      	ldr	r3, [r7, #16]
 8002390:	b2d9      	uxtb	r1, r3
 8002392:	8afa      	ldrh	r2, [r7, #22]
 8002394:	4613      	mov	r3, r2
 8002396:	005b      	lsls	r3, r3, #1
 8002398:	4413      	add	r3, r2
 800239a:	683a      	ldr	r2, [r7, #0]
 800239c:	4413      	add	r3, r2
 800239e:	f1a1 0211 	sub.w	r2, r1, #17
 80023a2:	b2d2      	uxtb	r2, r2
 80023a4:	705a      	strb	r2, [r3, #1]
 80023a6:	8afa      	ldrh	r2, [r7, #22]
 80023a8:	4613      	mov	r3, r2
 80023aa:	005b      	lsls	r3, r3, #1
 80023ac:	4413      	add	r3, r2
 80023ae:	683a      	ldr	r2, [r7, #0]
 80023b0:	4413      	add	r3, r2
 80023b2:	2200      	movs	r2, #0
 80023b4:	709a      	strb	r2, [r3, #2]
 80023b6:	8afa      	ldrh	r2, [r7, #22]
 80023b8:	4613      	mov	r3, r2
 80023ba:	005b      	lsls	r3, r3, #1
 80023bc:	4413      	add	r3, r2
 80023be:	683a      	ldr	r2, [r7, #0]
 80023c0:	4413      	add	r3, r2
 80023c2:	785b      	ldrb	r3, [r3, #1]
 80023c4:	091b      	lsrs	r3, r3, #4
 80023c6:	b2db      	uxtb	r3, r3
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	d107      	bne.n	80023dc <generate_moves+0x400>
 80023cc:	8afa      	ldrh	r2, [r7, #22]
 80023ce:	4613      	mov	r3, r2
 80023d0:	005b      	lsls	r3, r3, #1
 80023d2:	4413      	add	r3, r2
 80023d4:	683a      	ldr	r2, [r7, #0]
 80023d6:	4413      	add	r3, r2
 80023d8:	2201      	movs	r2, #1
 80023da:	709a      	strb	r2, [r3, #2]
 80023dc:	8afb      	ldrh	r3, [r7, #22]
 80023de:	3301      	adds	r3, #1
 80023e0:	82fb      	strh	r3, [r7, #22]
 80023e2:	e084      	b.n	80024ee <generate_moves+0x512>
 80023e4:	2300      	movs	r3, #0
 80023e6:	73fb      	strb	r3, [r7, #15]
 80023e8:	e076      	b.n	80024d8 <generate_moves+0x4fc>
 80023ea:	7b7a      	ldrb	r2, [r7, #13]
 80023ec:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80023f0:	4946      	ldr	r1, [pc, #280]	; (800250c <generate_moves+0x530>)
 80023f2:	00d2      	lsls	r2, r2, #3
 80023f4:	440a      	add	r2, r1
 80023f6:	4413      	add	r3, r2
 80023f8:	f993 3000 	ldrsb.w	r3, [r3]
 80023fc:	b2da      	uxtb	r2, r3
 80023fe:	693b      	ldr	r3, [r7, #16]
 8002400:	b2db      	uxtb	r3, r3
 8002402:	4413      	add	r3, r2
 8002404:	73bb      	strb	r3, [r7, #14]
 8002406:	e05a      	b.n	80024be <generate_moves+0x4e2>
 8002408:	7bbb      	ldrb	r3, [r7, #14]
 800240a:	687a      	ldr	r2, [r7, #4]
 800240c:	5cd3      	ldrb	r3, [r2, r3]
 800240e:	2b06      	cmp	r3, #6
 8002410:	d121      	bne.n	8002456 <generate_moves+0x47a>
 8002412:	8afa      	ldrh	r2, [r7, #22]
 8002414:	4613      	mov	r3, r2
 8002416:	005b      	lsls	r3, r3, #1
 8002418:	4413      	add	r3, r2
 800241a:	683a      	ldr	r2, [r7, #0]
 800241c:	4413      	add	r3, r2
 800241e:	693a      	ldr	r2, [r7, #16]
 8002420:	b2d2      	uxtb	r2, r2
 8002422:	701a      	strb	r2, [r3, #0]
 8002424:	8afa      	ldrh	r2, [r7, #22]
 8002426:	4613      	mov	r3, r2
 8002428:	005b      	lsls	r3, r3, #1
 800242a:	4413      	add	r3, r2
 800242c:	683a      	ldr	r2, [r7, #0]
 800242e:	4413      	add	r3, r2
 8002430:	7bba      	ldrb	r2, [r7, #14]
 8002432:	705a      	strb	r2, [r3, #1]
 8002434:	8afa      	ldrh	r2, [r7, #22]
 8002436:	4613      	mov	r3, r2
 8002438:	005b      	lsls	r3, r3, #1
 800243a:	4413      	add	r3, r2
 800243c:	683a      	ldr	r2, [r7, #0]
 800243e:	4413      	add	r3, r2
 8002440:	2200      	movs	r2, #0
 8002442:	709a      	strb	r2, [r3, #2]
 8002444:	8afb      	ldrh	r3, [r7, #22]
 8002446:	3301      	adds	r3, #1
 8002448:	82fb      	strh	r3, [r7, #22]
 800244a:	7b7b      	ldrb	r3, [r7, #13]
 800244c:	4a30      	ldr	r2, [pc, #192]	; (8002510 <generate_moves+0x534>)
 800244e:	5cd3      	ldrb	r3, [r2, r3]
 8002450:	2b00      	cmp	r3, #0
 8002452:	d127      	bne.n	80024a4 <generate_moves+0x4c8>
 8002454:	e03a      	b.n	80024cc <generate_moves+0x4f0>
 8002456:	7bbb      	ldrb	r3, [r7, #14]
 8002458:	687a      	ldr	r2, [r7, #4]
 800245a:	4413      	add	r3, r2
 800245c:	f893 2080 	ldrb.w	r2, [r3, #128]	; 0x80
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	f893 3100 	ldrb.w	r3, [r3, #256]	; 0x100
 8002466:	429a      	cmp	r2, r3
 8002468:	d02f      	beq.n	80024ca <generate_moves+0x4ee>
 800246a:	8afa      	ldrh	r2, [r7, #22]
 800246c:	4613      	mov	r3, r2
 800246e:	005b      	lsls	r3, r3, #1
 8002470:	4413      	add	r3, r2
 8002472:	683a      	ldr	r2, [r7, #0]
 8002474:	4413      	add	r3, r2
 8002476:	693a      	ldr	r2, [r7, #16]
 8002478:	b2d2      	uxtb	r2, r2
 800247a:	701a      	strb	r2, [r3, #0]
 800247c:	8afa      	ldrh	r2, [r7, #22]
 800247e:	4613      	mov	r3, r2
 8002480:	005b      	lsls	r3, r3, #1
 8002482:	4413      	add	r3, r2
 8002484:	683a      	ldr	r2, [r7, #0]
 8002486:	4413      	add	r3, r2
 8002488:	7bba      	ldrb	r2, [r7, #14]
 800248a:	705a      	strb	r2, [r3, #1]
 800248c:	8afa      	ldrh	r2, [r7, #22]
 800248e:	4613      	mov	r3, r2
 8002490:	005b      	lsls	r3, r3, #1
 8002492:	4413      	add	r3, r2
 8002494:	683a      	ldr	r2, [r7, #0]
 8002496:	4413      	add	r3, r2
 8002498:	2200      	movs	r2, #0
 800249a:	709a      	strb	r2, [r3, #2]
 800249c:	8afb      	ldrh	r3, [r7, #22]
 800249e:	3301      	adds	r3, #1
 80024a0:	82fb      	strh	r3, [r7, #22]
 80024a2:	e012      	b.n	80024ca <generate_moves+0x4ee>
 80024a4:	7b7a      	ldrb	r2, [r7, #13]
 80024a6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80024aa:	4918      	ldr	r1, [pc, #96]	; (800250c <generate_moves+0x530>)
 80024ac:	00d2      	lsls	r2, r2, #3
 80024ae:	440a      	add	r2, r1
 80024b0:	4413      	add	r3, r2
 80024b2:	f993 3000 	ldrsb.w	r3, [r3]
 80024b6:	b2da      	uxtb	r2, r3
 80024b8:	7bbb      	ldrb	r3, [r7, #14]
 80024ba:	4413      	add	r3, r2
 80024bc:	73bb      	strb	r3, [r7, #14]
 80024be:	7bbb      	ldrb	r3, [r7, #14]
 80024c0:	f003 0388 	and.w	r3, r3, #136	; 0x88
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d09f      	beq.n	8002408 <generate_moves+0x42c>
 80024c8:	e000      	b.n	80024cc <generate_moves+0x4f0>
 80024ca:	bf00      	nop
 80024cc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80024d0:	b2db      	uxtb	r3, r3
 80024d2:	3301      	adds	r3, #1
 80024d4:	b2db      	uxtb	r3, r3
 80024d6:	73fb      	strb	r3, [r7, #15]
 80024d8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80024dc:	7b7a      	ldrb	r2, [r7, #13]
 80024de:	490d      	ldr	r1, [pc, #52]	; (8002514 <generate_moves+0x538>)
 80024e0:	5c8a      	ldrb	r2, [r1, r2]
 80024e2:	4293      	cmp	r3, r2
 80024e4:	db81      	blt.n	80023ea <generate_moves+0x40e>
 80024e6:	e002      	b.n	80024ee <generate_moves+0x512>
 80024e8:	bf00      	nop
 80024ea:	e000      	b.n	80024ee <generate_moves+0x512>
 80024ec:	bf00      	nop
 80024ee:	693b      	ldr	r3, [r7, #16]
 80024f0:	3301      	adds	r3, #1
 80024f2:	613b      	str	r3, [r7, #16]
 80024f4:	693b      	ldr	r3, [r7, #16]
 80024f6:	2b7f      	cmp	r3, #127	; 0x7f
 80024f8:	f77f ad7a 	ble.w	8001ff0 <generate_moves+0x14>
 80024fc:	8afb      	ldrh	r3, [r7, #22]
 80024fe:	4618      	mov	r0, r3
 8002500:	371c      	adds	r7, #28
 8002502:	46bd      	mov	sp, r7
 8002504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002508:	4770      	bx	lr
 800250a:	bf00      	nop
 800250c:	20000004 	.word	0x20000004
 8002510:	20000034 	.word	0x20000034
 8002514:	2000002c 	.word	0x2000002c

08002518 <HAL_TIM_PWM_PulseFinishedCallback>:
uint32_t ws2812_color_data[8][8]; //Color data: 24bits: 0xBBRRGG

uint8_t ws2812_finished_dma; //DMA finished flag


void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim){
 8002518:	b580      	push	{r7, lr}
 800251a:	b082      	sub	sp, #8
 800251c:	af00      	add	r7, sp, #0
 800251e:	6078      	str	r0, [r7, #4]
	HAL_TIM_PWM_Stop_DMA(htim, TIM_CHANNEL_4);
 8002520:	210c      	movs	r1, #12
 8002522:	6878      	ldr	r0, [r7, #4]
 8002524:	f002 fde8 	bl	80050f8 <HAL_TIM_PWM_Stop_DMA>
	ws2812_finished_dma = 1;
 8002528:	4b03      	ldr	r3, [pc, #12]	; (8002538 <HAL_TIM_PWM_PulseFinishedCallback+0x20>)
 800252a:	2201      	movs	r2, #1
 800252c:	701a      	strb	r2, [r3, #0]
}
 800252e:	bf00      	nop
 8002530:	3708      	adds	r7, #8
 8002532:	46bd      	mov	sp, r7
 8002534:	bd80      	pop	{r7, pc}
 8002536:	bf00      	nop
 8002538:	200016ac 	.word	0x200016ac

0800253c <ws2812_init>:

void ws2812_init(){
 800253c:	b480      	push	{r7}
 800253e:	b083      	sub	sp, #12
 8002540:	af00      	add	r7, sp, #0
	for(int i = 0; i < (64 * 24 + 60); i++){
 8002542:	2300      	movs	r3, #0
 8002544:	607b      	str	r3, [r7, #4]
 8002546:	e010      	b.n	800256a <ws2812_init+0x2e>
		if(i < 60)
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	2b3b      	cmp	r3, #59	; 0x3b
 800254c:	dc05      	bgt.n	800255a <ws2812_init+0x1e>
			ws2812_pwm_data[i] = WS2812_BREAK;
 800254e:	4a0d      	ldr	r2, [pc, #52]	; (8002584 <ws2812_init+0x48>)
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	2100      	movs	r1, #0
 8002554:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8002558:	e004      	b.n	8002564 <ws2812_init+0x28>
		else
			ws2812_pwm_data[i] = WS2812_ZERO;
 800255a:	4a0a      	ldr	r2, [pc, #40]	; (8002584 <ws2812_init+0x48>)
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	211c      	movs	r1, #28
 8002560:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i < (64 * 24 + 60); i++){
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	3301      	adds	r3, #1
 8002568:	607b      	str	r3, [r7, #4]
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	f240 623b 	movw	r2, #1595	; 0x63b
 8002570:	4293      	cmp	r3, r2
 8002572:	dde9      	ble.n	8002548 <ws2812_init+0xc>
	}
}
 8002574:	bf00      	nop
 8002576:	bf00      	nop
 8002578:	370c      	adds	r7, #12
 800257a:	46bd      	mov	sp, r7
 800257c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002580:	4770      	bx	lr
 8002582:	bf00      	nop
 8002584:	20000934 	.word	0x20000934

08002588 <ws2812_update_pwm_data>:
								57, 54, 41, 38, 25, 22, 9, 6,
								56, 55, 40, 39, 24, 23, 8, 7};



void ws2812_update_pwm_data(){
 8002588:	b480      	push	{r7}
 800258a:	b087      	sub	sp, #28
 800258c:	af00      	add	r7, sp, #0
	for(int row = 0; row < 8; row++){
 800258e:	2300      	movs	r3, #0
 8002590:	617b      	str	r3, [r7, #20]
 8002592:	e065      	b.n	8002660 <ws2812_update_pwm_data+0xd8>
		for(int col = 0; col < 8; col++){
 8002594:	2300      	movs	r3, #0
 8002596:	613b      	str	r3, [r7, #16]
 8002598:	e05c      	b.n	8002654 <ws2812_update_pwm_data+0xcc>

			int index = row*8 + col;
 800259a:	697b      	ldr	r3, [r7, #20]
 800259c:	00db      	lsls	r3, r3, #3
 800259e:	693a      	ldr	r2, [r7, #16]
 80025a0:	4413      	add	r3, r2
 80025a2:	60bb      	str	r3, [r7, #8]

			uint32_t ws2812_corrected_color = ((ws2812_color_data[row][col] & (0x00FF00)) << 8) |
 80025a4:	4933      	ldr	r1, [pc, #204]	; (8002674 <ws2812_update_pwm_data+0xec>)
 80025a6:	697b      	ldr	r3, [r7, #20]
 80025a8:	00da      	lsls	r2, r3, #3
 80025aa:	693b      	ldr	r3, [r7, #16]
 80025ac:	4413      	add	r3, r2
 80025ae:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80025b2:	021b      	lsls	r3, r3, #8
 80025b4:	f403 027f 	and.w	r2, r3, #16711680	; 0xff0000
											  ((ws2812_color_data[row][col] & (0xFF0000)) >> 8) |
 80025b8:	482e      	ldr	r0, [pc, #184]	; (8002674 <ws2812_update_pwm_data+0xec>)
 80025ba:	697b      	ldr	r3, [r7, #20]
 80025bc:	00d9      	lsls	r1, r3, #3
 80025be:	693b      	ldr	r3, [r7, #16]
 80025c0:	440b      	add	r3, r1
 80025c2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80025c6:	0a1b      	lsrs	r3, r3, #8
 80025c8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
			uint32_t ws2812_corrected_color = ((ws2812_color_data[row][col] & (0x00FF00)) << 8) |
 80025cc:	431a      	orrs	r2, r3
										      (ws2812_color_data[row][col] & 0x0000FF);
 80025ce:	4829      	ldr	r0, [pc, #164]	; (8002674 <ws2812_update_pwm_data+0xec>)
 80025d0:	697b      	ldr	r3, [r7, #20]
 80025d2:	00d9      	lsls	r1, r3, #3
 80025d4:	693b      	ldr	r3, [r7, #16]
 80025d6:	440b      	add	r3, r1
 80025d8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80025dc:	b2db      	uxtb	r3, r3
			uint32_t ws2812_corrected_color = ((ws2812_color_data[row][col] & (0x00FF00)) << 8) |
 80025de:	4313      	orrs	r3, r2
 80025e0:	607b      	str	r3, [r7, #4]

			for(int i = 0; i < 24; i++){
 80025e2:	2300      	movs	r3, #0
 80025e4:	60fb      	str	r3, [r7, #12]
 80025e6:	e02f      	b.n	8002648 <ws2812_update_pwm_data+0xc0>



				if(ws2812_corrected_color & (0x800000 >> i))
 80025e8:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	fa42 f303 	asr.w	r3, r2, r3
 80025f2:	461a      	mov	r2, r3
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	4013      	ands	r3, r2
 80025f8:	2b00      	cmp	r3, #0
 80025fa:	d011      	beq.n	8002620 <ws2812_update_pwm_data+0x98>
					ws2812_pwm_data[60 + 24*led_strip_pos_lut[index] + i] = WS2812_ONE;
 80025fc:	4a1e      	ldr	r2, [pc, #120]	; (8002678 <ws2812_update_pwm_data+0xf0>)
 80025fe:	68bb      	ldr	r3, [r7, #8]
 8002600:	4413      	add	r3, r2
 8002602:	781b      	ldrb	r3, [r3, #0]
 8002604:	461a      	mov	r2, r3
 8002606:	4613      	mov	r3, r2
 8002608:	005b      	lsls	r3, r3, #1
 800260a:	4413      	add	r3, r2
 800260c:	00db      	lsls	r3, r3, #3
 800260e:	f103 023c 	add.w	r2, r3, #60	; 0x3c
 8002612:	68fb      	ldr	r3, [r7, #12]
 8002614:	4413      	add	r3, r2
 8002616:	4a19      	ldr	r2, [pc, #100]	; (800267c <ws2812_update_pwm_data+0xf4>)
 8002618:	214c      	movs	r1, #76	; 0x4c
 800261a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800261e:	e010      	b.n	8002642 <ws2812_update_pwm_data+0xba>
				else
					ws2812_pwm_data[60 + 24*led_strip_pos_lut[index] + i] = WS2812_ZERO;
 8002620:	4a15      	ldr	r2, [pc, #84]	; (8002678 <ws2812_update_pwm_data+0xf0>)
 8002622:	68bb      	ldr	r3, [r7, #8]
 8002624:	4413      	add	r3, r2
 8002626:	781b      	ldrb	r3, [r3, #0]
 8002628:	461a      	mov	r2, r3
 800262a:	4613      	mov	r3, r2
 800262c:	005b      	lsls	r3, r3, #1
 800262e:	4413      	add	r3, r2
 8002630:	00db      	lsls	r3, r3, #3
 8002632:	f103 023c 	add.w	r2, r3, #60	; 0x3c
 8002636:	68fb      	ldr	r3, [r7, #12]
 8002638:	4413      	add	r3, r2
 800263a:	4a10      	ldr	r2, [pc, #64]	; (800267c <ws2812_update_pwm_data+0xf4>)
 800263c:	211c      	movs	r1, #28
 800263e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int i = 0; i < 24; i++){
 8002642:	68fb      	ldr	r3, [r7, #12]
 8002644:	3301      	adds	r3, #1
 8002646:	60fb      	str	r3, [r7, #12]
 8002648:	68fb      	ldr	r3, [r7, #12]
 800264a:	2b17      	cmp	r3, #23
 800264c:	ddcc      	ble.n	80025e8 <ws2812_update_pwm_data+0x60>
		for(int col = 0; col < 8; col++){
 800264e:	693b      	ldr	r3, [r7, #16]
 8002650:	3301      	adds	r3, #1
 8002652:	613b      	str	r3, [r7, #16]
 8002654:	693b      	ldr	r3, [r7, #16]
 8002656:	2b07      	cmp	r3, #7
 8002658:	dd9f      	ble.n	800259a <ws2812_update_pwm_data+0x12>
	for(int row = 0; row < 8; row++){
 800265a:	697b      	ldr	r3, [r7, #20]
 800265c:	3301      	adds	r3, #1
 800265e:	617b      	str	r3, [r7, #20]
 8002660:	697b      	ldr	r3, [r7, #20]
 8002662:	2b07      	cmp	r3, #7
 8002664:	dd96      	ble.n	8002594 <ws2812_update_pwm_data+0xc>
			}
		}

	}
}
 8002666:	bf00      	nop
 8002668:	bf00      	nop
 800266a:	371c      	adds	r7, #28
 800266c:	46bd      	mov	sp, r7
 800266e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002672:	4770      	bx	lr
 8002674:	200015ac 	.word	0x200015ac
 8002678:	2000003c 	.word	0x2000003c
 800267c:	20000934 	.word	0x20000934

08002680 <ws2812_update_leds_from_data>:

void ws2812_update_leds_from_data(TIM_HandleTypeDef *htim){
 8002680:	b580      	push	{r7, lr}
 8002682:	b082      	sub	sp, #8
 8002684:	af00      	add	r7, sp, #0
 8002686:	6078      	str	r0, [r7, #4]
	  ws2812_update_pwm_data();
 8002688:	f7ff ff7e 	bl	8002588 <ws2812_update_pwm_data>
	  ws2812_finished_dma = 0;
 800268c:	4b06      	ldr	r3, [pc, #24]	; (80026a8 <ws2812_update_leds_from_data+0x28>)
 800268e:	2200      	movs	r2, #0
 8002690:	701a      	strb	r2, [r3, #0]
	  HAL_TIM_PWM_Start_DMA(htim, TIM_CHANNEL_4, (uint32_t *)ws2812_pwm_data, sizeof(ws2812_pwm_data) / sizeof(uint16_t));
 8002692:	f240 633c 	movw	r3, #1596	; 0x63c
 8002696:	4a05      	ldr	r2, [pc, #20]	; (80026ac <ws2812_update_leds_from_data+0x2c>)
 8002698:	210c      	movs	r1, #12
 800269a:	6878      	ldr	r0, [r7, #4]
 800269c:	f002 fb7c 	bl	8004d98 <HAL_TIM_PWM_Start_DMA>
}
 80026a0:	bf00      	nop
 80026a2:	3708      	adds	r7, #8
 80026a4:	46bd      	mov	sp, r7
 80026a6:	bd80      	pop	{r7, pc}
 80026a8:	200016ac 	.word	0x200016ac
 80026ac:	20000934 	.word	0x20000934

080026b0 <lighting_set_output>:
 80026b0:	b480      	push	{r7}
 80026b2:	b083      	sub	sp, #12
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	6078      	str	r0, [r7, #4]
 80026b8:	4a04      	ldr	r2, [pc, #16]	; (80026cc <lighting_set_output+0x1c>)
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	6013      	str	r3, [r2, #0]
 80026be:	bf00      	nop
 80026c0:	370c      	adds	r7, #12
 80026c2:	46bd      	mov	sp, r7
 80026c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c8:	4770      	bx	lr
 80026ca:	bf00      	nop
 80026cc:	200016b0 	.word	0x200016b0

080026d0 <set_color>:
 80026d0:	b480      	push	{r7}
 80026d2:	b085      	sub	sp, #20
 80026d4:	af00      	add	r7, sp, #0
 80026d6:	60f8      	str	r0, [r7, #12]
 80026d8:	60b9      	str	r1, [r7, #8]
 80026da:	4613      	mov	r3, r2
 80026dc:	71fb      	strb	r3, [r7, #7]
 80026de:	79fa      	ldrb	r2, [r7, #7]
 80026e0:	4b08      	ldr	r3, [pc, #32]	; (8002704 <set_color+0x34>)
 80026e2:	6819      	ldr	r1, [r3, #0]
 80026e4:	68fb      	ldr	r3, [r7, #12]
 80026e6:	00d8      	lsls	r0, r3, #3
 80026e8:	68bb      	ldr	r3, [r7, #8]
 80026ea:	4403      	add	r3, r0
 80026ec:	009b      	lsls	r3, r3, #2
 80026ee:	440b      	add	r3, r1
 80026f0:	4905      	ldr	r1, [pc, #20]	; (8002708 <set_color+0x38>)
 80026f2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80026f6:	601a      	str	r2, [r3, #0]
 80026f8:	bf00      	nop
 80026fa:	3714      	adds	r7, #20
 80026fc:	46bd      	mov	sp, r7
 80026fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002702:	4770      	bx	lr
 8002704:	200016b0 	.word	0x200016b0
 8002708:	2000007c 	.word	0x2000007c

0800270c <paint_board>:
 800270c:	b580      	push	{r7, lr}
 800270e:	b082      	sub	sp, #8
 8002710:	af00      	add	r7, sp, #0
 8002712:	2300      	movs	r3, #0
 8002714:	607b      	str	r3, [r7, #4]
 8002716:	e01a      	b.n	800274e <paint_board+0x42>
 8002718:	2300      	movs	r3, #0
 800271a:	603b      	str	r3, [r7, #0]
 800271c:	e011      	b.n	8002742 <paint_board+0x36>
 800271e:	687a      	ldr	r2, [r7, #4]
 8002720:	683b      	ldr	r3, [r7, #0]
 8002722:	4053      	eors	r3, r2
 8002724:	f003 0301 	and.w	r3, r3, #1
 8002728:	2b00      	cmp	r3, #0
 800272a:	bf0c      	ite	eq
 800272c:	2301      	moveq	r3, #1
 800272e:	2300      	movne	r3, #0
 8002730:	b2db      	uxtb	r3, r3
 8002732:	461a      	mov	r2, r3
 8002734:	6839      	ldr	r1, [r7, #0]
 8002736:	6878      	ldr	r0, [r7, #4]
 8002738:	f7ff ffca 	bl	80026d0 <set_color>
 800273c:	683b      	ldr	r3, [r7, #0]
 800273e:	3301      	adds	r3, #1
 8002740:	603b      	str	r3, [r7, #0]
 8002742:	683b      	ldr	r3, [r7, #0]
 8002744:	2b07      	cmp	r3, #7
 8002746:	ddea      	ble.n	800271e <paint_board+0x12>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	3301      	adds	r3, #1
 800274c:	607b      	str	r3, [r7, #4]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	2b07      	cmp	r3, #7
 8002752:	dde1      	ble.n	8002718 <paint_board+0xc>
 8002754:	bf00      	nop
 8002756:	bf00      	nop
 8002758:	3708      	adds	r7, #8
 800275a:	46bd      	mov	sp, r7
 800275c:	bd80      	pop	{r7, pc}

0800275e <paint_valid_moves>:
 800275e:	b580      	push	{r7, lr}
 8002760:	b086      	sub	sp, #24
 8002762:	af00      	add	r7, sp, #0
 8002764:	4603      	mov	r3, r0
 8002766:	60b9      	str	r1, [r7, #8]
 8002768:	607a      	str	r2, [r7, #4]
 800276a:	73fb      	strb	r3, [r7, #15]
 800276c:	2300      	movs	r3, #0
 800276e:	617b      	str	r3, [r7, #20]
 8002770:	68b8      	ldr	r0, [r7, #8]
 8002772:	f7ff f95b 	bl	8001a2c <engine_list_moves>
 8002776:	6078      	str	r0, [r7, #4]
 8002778:	2300      	movs	r3, #0
 800277a:	613b      	str	r3, [r7, #16]
 800277c:	e026      	b.n	80027cc <paint_valid_moves+0x6e>
 800277e:	693a      	ldr	r2, [r7, #16]
 8002780:	4613      	mov	r3, r2
 8002782:	005b      	lsls	r3, r3, #1
 8002784:	4413      	add	r3, r2
 8002786:	68ba      	ldr	r2, [r7, #8]
 8002788:	4413      	add	r3, r2
 800278a:	781b      	ldrb	r3, [r3, #0]
 800278c:	7bfa      	ldrb	r2, [r7, #15]
 800278e:	429a      	cmp	r2, r3
 8002790:	d119      	bne.n	80027c6 <paint_valid_moves+0x68>
 8002792:	693a      	ldr	r2, [r7, #16]
 8002794:	4613      	mov	r3, r2
 8002796:	005b      	lsls	r3, r3, #1
 8002798:	4413      	add	r3, r2
 800279a:	68ba      	ldr	r2, [r7, #8]
 800279c:	4413      	add	r3, r2
 800279e:	785b      	ldrb	r3, [r3, #1]
 80027a0:	091b      	lsrs	r3, r3, #4
 80027a2:	b2db      	uxtb	r3, r3
 80027a4:	4618      	mov	r0, r3
 80027a6:	693a      	ldr	r2, [r7, #16]
 80027a8:	4613      	mov	r3, r2
 80027aa:	005b      	lsls	r3, r3, #1
 80027ac:	4413      	add	r3, r2
 80027ae:	68ba      	ldr	r2, [r7, #8]
 80027b0:	4413      	add	r3, r2
 80027b2:	785b      	ldrb	r3, [r3, #1]
 80027b4:	f003 0307 	and.w	r3, r3, #7
 80027b8:	2202      	movs	r2, #2
 80027ba:	4619      	mov	r1, r3
 80027bc:	f7ff ff88 	bl	80026d0 <set_color>
 80027c0:	697b      	ldr	r3, [r7, #20]
 80027c2:	3301      	adds	r3, #1
 80027c4:	617b      	str	r3, [r7, #20]
 80027c6:	693b      	ldr	r3, [r7, #16]
 80027c8:	3301      	adds	r3, #1
 80027ca:	613b      	str	r3, [r7, #16]
 80027cc:	693a      	ldr	r2, [r7, #16]
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	429a      	cmp	r2, r3
 80027d2:	dbd4      	blt.n	800277e <paint_valid_moves+0x20>
 80027d4:	697b      	ldr	r3, [r7, #20]
 80027d6:	4618      	mov	r0, r3
 80027d8:	3718      	adds	r7, #24
 80027da:	46bd      	mov	sp, r7
 80027dc:	bd80      	pop	{r7, pc}
	...

080027e0 <paint_differences>:
 80027e0:	b580      	push	{r7, lr}
 80027e2:	b086      	sub	sp, #24
 80027e4:	af00      	add	r7, sp, #0
 80027e6:	4b30      	ldr	r3, [pc, #192]	; (80028a8 <paint_differences+0xc8>)
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	1d3a      	adds	r2, r7, #4
 80027ec:	4610      	mov	r0, r2
 80027ee:	4798      	blx	r3
 80027f0:	2301      	movs	r3, #1
 80027f2:	75fb      	strb	r3, [r7, #23]
 80027f4:	2300      	movs	r3, #0
 80027f6:	613b      	str	r3, [r7, #16]
 80027f8:	e04e      	b.n	8002898 <paint_differences+0xb8>
 80027fa:	2300      	movs	r3, #0
 80027fc:	60fb      	str	r3, [r7, #12]
 80027fe:	e045      	b.n	800288c <paint_differences+0xac>
 8002800:	1d3a      	adds	r2, r7, #4
 8002802:	693b      	ldr	r3, [r7, #16]
 8002804:	4413      	add	r3, r2
 8002806:	781b      	ldrb	r3, [r3, #0]
 8002808:	461a      	mov	r2, r3
 800280a:	68fb      	ldr	r3, [r7, #12]
 800280c:	fa42 f303 	asr.w	r3, r2, r3
 8002810:	f003 0301 	and.w	r3, r3, #1
 8002814:	2b00      	cmp	r3, #0
 8002816:	d015      	beq.n	8002844 <paint_differences+0x64>
 8002818:	693b      	ldr	r3, [r7, #16]
 800281a:	b2db      	uxtb	r3, r3
 800281c:	011b      	lsls	r3, r3, #4
 800281e:	b2da      	uxtb	r2, r3
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	b2db      	uxtb	r3, r3
 8002824:	4413      	add	r3, r2
 8002826:	b2db      	uxtb	r3, r3
 8002828:	4618      	mov	r0, r3
 800282a:	f7ff f90f 	bl	8001a4c <engine_get_piece>
 800282e:	4603      	mov	r3, r0
 8002830:	2b06      	cmp	r3, #6
 8002832:	d107      	bne.n	8002844 <paint_differences+0x64>
 8002834:	2205      	movs	r2, #5
 8002836:	68f9      	ldr	r1, [r7, #12]
 8002838:	6938      	ldr	r0, [r7, #16]
 800283a:	f7ff ff49 	bl	80026d0 <set_color>
 800283e:	2300      	movs	r3, #0
 8002840:	75fb      	strb	r3, [r7, #23]
 8002842:	e020      	b.n	8002886 <paint_differences+0xa6>
 8002844:	1d3a      	adds	r2, r7, #4
 8002846:	693b      	ldr	r3, [r7, #16]
 8002848:	4413      	add	r3, r2
 800284a:	781b      	ldrb	r3, [r3, #0]
 800284c:	461a      	mov	r2, r3
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	fa42 f303 	asr.w	r3, r2, r3
 8002854:	f003 0301 	and.w	r3, r3, #1
 8002858:	2b00      	cmp	r3, #0
 800285a:	d114      	bne.n	8002886 <paint_differences+0xa6>
 800285c:	693b      	ldr	r3, [r7, #16]
 800285e:	b2db      	uxtb	r3, r3
 8002860:	011b      	lsls	r3, r3, #4
 8002862:	b2da      	uxtb	r2, r3
 8002864:	68fb      	ldr	r3, [r7, #12]
 8002866:	b2db      	uxtb	r3, r3
 8002868:	4413      	add	r3, r2
 800286a:	b2db      	uxtb	r3, r3
 800286c:	4618      	mov	r0, r3
 800286e:	f7ff f8ed 	bl	8001a4c <engine_get_piece>
 8002872:	4603      	mov	r3, r0
 8002874:	2b06      	cmp	r3, #6
 8002876:	d006      	beq.n	8002886 <paint_differences+0xa6>
 8002878:	2204      	movs	r2, #4
 800287a:	68f9      	ldr	r1, [r7, #12]
 800287c:	6938      	ldr	r0, [r7, #16]
 800287e:	f7ff ff27 	bl	80026d0 <set_color>
 8002882:	2300      	movs	r3, #0
 8002884:	75fb      	strb	r3, [r7, #23]
 8002886:	68fb      	ldr	r3, [r7, #12]
 8002888:	3301      	adds	r3, #1
 800288a:	60fb      	str	r3, [r7, #12]
 800288c:	68fb      	ldr	r3, [r7, #12]
 800288e:	2b07      	cmp	r3, #7
 8002890:	ddb6      	ble.n	8002800 <paint_differences+0x20>
 8002892:	693b      	ldr	r3, [r7, #16]
 8002894:	3301      	adds	r3, #1
 8002896:	613b      	str	r3, [r7, #16]
 8002898:	693b      	ldr	r3, [r7, #16]
 800289a:	2b07      	cmp	r3, #7
 800289c:	ddad      	ble.n	80027fa <paint_differences+0x1a>
 800289e:	7dfb      	ldrb	r3, [r7, #23]
 80028a0:	4618      	mov	r0, r3
 80028a2:	3718      	adds	r7, #24
 80028a4:	46bd      	mov	sp, r7
 80028a6:	bd80      	pop	{r7, pc}
 80028a8:	200004cc 	.word	0x200004cc

080028ac <paint_capture>:
 80028ac:	b580      	push	{r7, lr}
 80028ae:	b082      	sub	sp, #8
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	6078      	str	r0, [r7, #4]
 80028b4:	6039      	str	r1, [r7, #0]
 80028b6:	2202      	movs	r2, #2
 80028b8:	6839      	ldr	r1, [r7, #0]
 80028ba:	6878      	ldr	r0, [r7, #4]
 80028bc:	f7ff ff08 	bl	80026d0 <set_color>
 80028c0:	2301      	movs	r3, #1
 80028c2:	4618      	mov	r0, r3
 80028c4:	3708      	adds	r7, #8
 80028c6:	46bd      	mov	sp, r7
 80028c8:	bd80      	pop	{r7, pc}
	...

080028cc <lighting_set_state>:
 80028cc:	b480      	push	{r7}
 80028ce:	b083      	sub	sp, #12
 80028d0:	af00      	add	r7, sp, #0
 80028d2:	4603      	mov	r3, r0
 80028d4:	71fb      	strb	r3, [r7, #7]
 80028d6:	4a04      	ldr	r2, [pc, #16]	; (80028e8 <lighting_set_state+0x1c>)
 80028d8:	79fb      	ldrb	r3, [r7, #7]
 80028da:	7013      	strb	r3, [r2, #0]
 80028dc:	bf00      	nop
 80028de:	370c      	adds	r7, #12
 80028e0:	46bd      	mov	sp, r7
 80028e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028e6:	4770      	bx	lr
 80028e8:	200016ad 	.word	0x200016ad

080028ec <lighting_piece_lifted_square>:
 80028ec:	b480      	push	{r7}
 80028ee:	b083      	sub	sp, #12
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	4603      	mov	r3, r0
 80028f4:	71fb      	strb	r3, [r7, #7]
 80028f6:	4a04      	ldr	r2, [pc, #16]	; (8002908 <lighting_piece_lifted_square+0x1c>)
 80028f8:	79fb      	ldrb	r3, [r7, #7]
 80028fa:	7013      	strb	r3, [r2, #0]
 80028fc:	bf00      	nop
 80028fe:	370c      	adds	r7, #12
 8002900:	46bd      	mov	sp, r7
 8002902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002906:	4770      	bx	lr
 8002908:	200016b4 	.word	0x200016b4

0800290c <set_valid_moves>:
 800290c:	b480      	push	{r7}
 800290e:	b083      	sub	sp, #12
 8002910:	af00      	add	r7, sp, #0
 8002912:	6078      	str	r0, [r7, #4]
 8002914:	6039      	str	r1, [r7, #0]
 8002916:	4a06      	ldr	r2, [pc, #24]	; (8002930 <set_valid_moves+0x24>)
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	6013      	str	r3, [r2, #0]
 800291c:	4a05      	ldr	r2, [pc, #20]	; (8002934 <set_valid_moves+0x28>)
 800291e:	683b      	ldr	r3, [r7, #0]
 8002920:	6013      	str	r3, [r2, #0]
 8002922:	bf00      	nop
 8002924:	370c      	adds	r7, #12
 8002926:	46bd      	mov	sp, r7
 8002928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800292c:	4770      	bx	lr
 800292e:	bf00      	nop
 8002930:	200016b8 	.word	0x200016b8
 8002934:	200016bc 	.word	0x200016bc

08002938 <lighting_refresh>:
 8002938:	b580      	push	{r7, lr}
 800293a:	af00      	add	r7, sp, #0
 800293c:	4b21      	ldr	r3, [pc, #132]	; (80029c4 <lighting_refresh+0x8c>)
 800293e:	781b      	ldrb	r3, [r3, #0]
 8002940:	2b03      	cmp	r3, #3
 8002942:	d83c      	bhi.n	80029be <lighting_refresh+0x86>
 8002944:	a201      	add	r2, pc, #4	; (adr r2, 800294c <lighting_refresh+0x14>)
 8002946:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800294a:	bf00      	nop
 800294c:	0800295d 	.word	0x0800295d
 8002950:	08002963 	.word	0x08002963
 8002954:	08002995 	.word	0x08002995
 8002958:	0800299f 	.word	0x0800299f
 800295c:	f7ff fed6 	bl	800270c <paint_board>
 8002960:	e02d      	b.n	80029be <lighting_refresh+0x86>
 8002962:	f7ff fed3 	bl	800270c <paint_board>
 8002966:	4b18      	ldr	r3, [pc, #96]	; (80029c8 <lighting_refresh+0x90>)
 8002968:	781b      	ldrb	r3, [r3, #0]
 800296a:	091b      	lsrs	r3, r3, #4
 800296c:	b2db      	uxtb	r3, r3
 800296e:	4618      	mov	r0, r3
 8002970:	4b15      	ldr	r3, [pc, #84]	; (80029c8 <lighting_refresh+0x90>)
 8002972:	781b      	ldrb	r3, [r3, #0]
 8002974:	f003 0307 	and.w	r3, r3, #7
 8002978:	2203      	movs	r2, #3
 800297a:	4619      	mov	r1, r3
 800297c:	f7ff fea8 	bl	80026d0 <set_color>
 8002980:	4b11      	ldr	r3, [pc, #68]	; (80029c8 <lighting_refresh+0x90>)
 8002982:	781b      	ldrb	r3, [r3, #0]
 8002984:	4a11      	ldr	r2, [pc, #68]	; (80029cc <lighting_refresh+0x94>)
 8002986:	6811      	ldr	r1, [r2, #0]
 8002988:	4a11      	ldr	r2, [pc, #68]	; (80029d0 <lighting_refresh+0x98>)
 800298a:	6812      	ldr	r2, [r2, #0]
 800298c:	4618      	mov	r0, r3
 800298e:	f7ff fee6 	bl	800275e <paint_valid_moves>
 8002992:	e014      	b.n	80029be <lighting_refresh+0x86>
 8002994:	f7ff feba 	bl	800270c <paint_board>
 8002998:	f7ff ff22 	bl	80027e0 <paint_differences>
 800299c:	e00f      	b.n	80029be <lighting_refresh+0x86>
 800299e:	f7ff feb5 	bl	800270c <paint_board>
 80029a2:	4b09      	ldr	r3, [pc, #36]	; (80029c8 <lighting_refresh+0x90>)
 80029a4:	781b      	ldrb	r3, [r3, #0]
 80029a6:	091b      	lsrs	r3, r3, #4
 80029a8:	b2db      	uxtb	r3, r3
 80029aa:	461a      	mov	r2, r3
 80029ac:	4b06      	ldr	r3, [pc, #24]	; (80029c8 <lighting_refresh+0x90>)
 80029ae:	781b      	ldrb	r3, [r3, #0]
 80029b0:	f003 0307 	and.w	r3, r3, #7
 80029b4:	4619      	mov	r1, r3
 80029b6:	4610      	mov	r0, r2
 80029b8:	f7ff ff78 	bl	80028ac <paint_capture>
 80029bc:	bf00      	nop
 80029be:	bf00      	nop
 80029c0:	bd80      	pop	{r7, pc}
 80029c2:	bf00      	nop
 80029c4:	200016ad 	.word	0x200016ad
 80029c8:	200016b4 	.word	0x200016b4
 80029cc:	200016b8 	.word	0x200016b8
 80029d0:	200016bc 	.word	0x200016bc

080029d4 <reed_scan_sensors>:

#include "main.h"
#include "util.h"


void reed_scan_sensors(uint8_t data[8]){
 80029d4:	b580      	push	{r7, lr}
 80029d6:	b084      	sub	sp, #16
 80029d8:	af00      	add	r7, sp, #0
 80029da:	6078      	str	r0, [r7, #4]
  for (int row = 0; row < 8; row++) {
 80029dc:	2300      	movs	r3, #0
 80029de:	60fb      	str	r3, [r7, #12]
 80029e0:	e127      	b.n	8002c32 <reed_scan_sensors+0x25e>
	HAL_GPIO_WritePin(REED_1_GPIO_Port, REED_1_Pin, row == 0);
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	bf0c      	ite	eq
 80029e8:	2301      	moveq	r3, #1
 80029ea:	2300      	movne	r3, #0
 80029ec:	b2db      	uxtb	r3, r3
 80029ee:	461a      	mov	r2, r3
 80029f0:	2101      	movs	r1, #1
 80029f2:	4894      	ldr	r0, [pc, #592]	; (8002c44 <reed_scan_sensors+0x270>)
 80029f4:	f000 ffa8 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_2_GPIO_Port, REED_2_Pin, row == 1);
 80029f8:	68fb      	ldr	r3, [r7, #12]
 80029fa:	2b01      	cmp	r3, #1
 80029fc:	bf0c      	ite	eq
 80029fe:	2301      	moveq	r3, #1
 8002a00:	2300      	movne	r3, #0
 8002a02:	b2db      	uxtb	r3, r3
 8002a04:	461a      	mov	r2, r3
 8002a06:	2102      	movs	r1, #2
 8002a08:	488e      	ldr	r0, [pc, #568]	; (8002c44 <reed_scan_sensors+0x270>)
 8002a0a:	f000 ff9d 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_3_GPIO_Port, REED_3_Pin, row == 2);
 8002a0e:	68fb      	ldr	r3, [r7, #12]
 8002a10:	2b02      	cmp	r3, #2
 8002a12:	bf0c      	ite	eq
 8002a14:	2301      	moveq	r3, #1
 8002a16:	2300      	movne	r3, #0
 8002a18:	b2db      	uxtb	r3, r3
 8002a1a:	461a      	mov	r2, r3
 8002a1c:	2101      	movs	r1, #1
 8002a1e:	488a      	ldr	r0, [pc, #552]	; (8002c48 <reed_scan_sensors+0x274>)
 8002a20:	f000 ff92 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_4_GPIO_Port, REED_4_Pin, row == 3);
 8002a24:	68fb      	ldr	r3, [r7, #12]
 8002a26:	2b03      	cmp	r3, #3
 8002a28:	bf0c      	ite	eq
 8002a2a:	2301      	moveq	r3, #1
 8002a2c:	2300      	movne	r3, #0
 8002a2e:	b2db      	uxtb	r3, r3
 8002a30:	461a      	mov	r2, r3
 8002a32:	2140      	movs	r1, #64	; 0x40
 8002a34:	4885      	ldr	r0, [pc, #532]	; (8002c4c <reed_scan_sensors+0x278>)
 8002a36:	f000 ff87 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_5_GPIO_Port, REED_5_Pin, row == 4);
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	2b04      	cmp	r3, #4
 8002a3e:	bf0c      	ite	eq
 8002a40:	2301      	moveq	r3, #1
 8002a42:	2300      	movne	r3, #0
 8002a44:	b2db      	uxtb	r3, r3
 8002a46:	461a      	mov	r2, r3
 8002a48:	2180      	movs	r1, #128	; 0x80
 8002a4a:	4880      	ldr	r0, [pc, #512]	; (8002c4c <reed_scan_sensors+0x278>)
 8002a4c:	f000 ff7c 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_6_GPIO_Port, REED_6_Pin, row == 5);
 8002a50:	68fb      	ldr	r3, [r7, #12]
 8002a52:	2b05      	cmp	r3, #5
 8002a54:	bf0c      	ite	eq
 8002a56:	2301      	moveq	r3, #1
 8002a58:	2300      	movne	r3, #0
 8002a5a:	b2db      	uxtb	r3, r3
 8002a5c:	461a      	mov	r2, r3
 8002a5e:	2140      	movs	r1, #64	; 0x40
 8002a60:	4879      	ldr	r0, [pc, #484]	; (8002c48 <reed_scan_sensors+0x274>)
 8002a62:	f000 ff71 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_7_GPIO_Port, REED_7_Pin, row == 6);
 8002a66:	68fb      	ldr	r3, [r7, #12]
 8002a68:	2b06      	cmp	r3, #6
 8002a6a:	bf0c      	ite	eq
 8002a6c:	2301      	moveq	r3, #1
 8002a6e:	2300      	movne	r3, #0
 8002a70:	b2db      	uxtb	r3, r3
 8002a72:	461a      	mov	r2, r3
 8002a74:	2180      	movs	r1, #128	; 0x80
 8002a76:	4873      	ldr	r0, [pc, #460]	; (8002c44 <reed_scan_sensors+0x270>)
 8002a78:	f000 ff66 	bl	8003948 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(REED_8_GPIO_Port, REED_8_Pin, row == 7);
 8002a7c:	68fb      	ldr	r3, [r7, #12]
 8002a7e:	2b07      	cmp	r3, #7
 8002a80:	bf0c      	ite	eq
 8002a82:	2301      	moveq	r3, #1
 8002a84:	2300      	movne	r3, #0
 8002a86:	b2db      	uxtb	r3, r3
 8002a88:	461a      	mov	r2, r3
 8002a8a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002a8e:	486f      	ldr	r0, [pc, #444]	; (8002c4c <reed_scan_sensors+0x278>)
 8002a90:	f000 ff5a 	bl	8003948 <HAL_GPIO_WritePin>

	for(int i = 0; i < 10; i++){ } //Delay chico para dejar que la señal se propage
 8002a94:	2300      	movs	r3, #0
 8002a96:	60bb      	str	r3, [r7, #8]
 8002a98:	e002      	b.n	8002aa0 <reed_scan_sensors+0xcc>
 8002a9a:	68bb      	ldr	r3, [r7, #8]
 8002a9c:	3301      	adds	r3, #1
 8002a9e:	60bb      	str	r3, [r7, #8]
 8002aa0:	68bb      	ldr	r3, [r7, #8]
 8002aa2:	2b09      	cmp	r3, #9
 8002aa4:	ddf9      	ble.n	8002a9a <reed_scan_sensors+0xc6>


    data[row] = 0;
 8002aa6:	68fb      	ldr	r3, [r7, #12]
 8002aa8:	687a      	ldr	r2, [r7, #4]
 8002aaa:	4413      	add	r3, r2
 8002aac:	2200      	movs	r2, #0
 8002aae:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_A_GPIO_Port, REED_A_Pin) != 0);
 8002ab0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002ab4:	4865      	ldr	r0, [pc, #404]	; (8002c4c <reed_scan_sensors+0x278>)
 8002ab6:	f000 ff2f 	bl	8003918 <HAL_GPIO_ReadPin>
 8002aba:	4603      	mov	r3, r0
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	bf14      	ite	ne
 8002ac0:	2301      	movne	r3, #1
 8002ac2:	2300      	moveq	r3, #0
 8002ac4:	b2db      	uxtb	r3, r3
 8002ac6:	4619      	mov	r1, r3
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	687a      	ldr	r2, [r7, #4]
 8002acc:	4413      	add	r3, r2
 8002ace:	781b      	ldrb	r3, [r3, #0]
 8002ad0:	b25a      	sxtb	r2, r3
 8002ad2:	b24b      	sxtb	r3, r1
 8002ad4:	4313      	orrs	r3, r2
 8002ad6:	b259      	sxtb	r1, r3
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	687a      	ldr	r2, [r7, #4]
 8002adc:	4413      	add	r3, r2
 8002ade:	b2ca      	uxtb	r2, r1
 8002ae0:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_B_GPIO_Port, REED_B_Pin) != 0) << 1;
 8002ae2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002ae6:	4858      	ldr	r0, [pc, #352]	; (8002c48 <reed_scan_sensors+0x274>)
 8002ae8:	f000 ff16 	bl	8003918 <HAL_GPIO_ReadPin>
 8002aec:	4603      	mov	r3, r0
 8002aee:	2b00      	cmp	r3, #0
 8002af0:	d001      	beq.n	8002af6 <reed_scan_sensors+0x122>
 8002af2:	2102      	movs	r1, #2
 8002af4:	e000      	b.n	8002af8 <reed_scan_sensors+0x124>
 8002af6:	2100      	movs	r1, #0
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	687a      	ldr	r2, [r7, #4]
 8002afc:	4413      	add	r3, r2
 8002afe:	781b      	ldrb	r3, [r3, #0]
 8002b00:	b25a      	sxtb	r2, r3
 8002b02:	b24b      	sxtb	r3, r1
 8002b04:	4313      	orrs	r3, r2
 8002b06:	b259      	sxtb	r1, r3
 8002b08:	68fb      	ldr	r3, [r7, #12]
 8002b0a:	687a      	ldr	r2, [r7, #4]
 8002b0c:	4413      	add	r3, r2
 8002b0e:	b2ca      	uxtb	r2, r1
 8002b10:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_C_GPIO_Port, REED_C_Pin) != 0) << 2;
 8002b12:	2110      	movs	r1, #16
 8002b14:	484c      	ldr	r0, [pc, #304]	; (8002c48 <reed_scan_sensors+0x274>)
 8002b16:	f000 feff 	bl	8003918 <HAL_GPIO_ReadPin>
 8002b1a:	4603      	mov	r3, r0
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d001      	beq.n	8002b24 <reed_scan_sensors+0x150>
 8002b20:	2104      	movs	r1, #4
 8002b22:	e000      	b.n	8002b26 <reed_scan_sensors+0x152>
 8002b24:	2100      	movs	r1, #0
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	687a      	ldr	r2, [r7, #4]
 8002b2a:	4413      	add	r3, r2
 8002b2c:	781b      	ldrb	r3, [r3, #0]
 8002b2e:	b25a      	sxtb	r2, r3
 8002b30:	b24b      	sxtb	r3, r1
 8002b32:	4313      	orrs	r3, r2
 8002b34:	b259      	sxtb	r1, r3
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	687a      	ldr	r2, [r7, #4]
 8002b3a:	4413      	add	r3, r2
 8002b3c:	b2ca      	uxtb	r2, r1
 8002b3e:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_D_GPIO_Port, REED_D_Pin) != 0) << 3;
 8002b40:	2108      	movs	r1, #8
 8002b42:	4841      	ldr	r0, [pc, #260]	; (8002c48 <reed_scan_sensors+0x274>)
 8002b44:	f000 fee8 	bl	8003918 <HAL_GPIO_ReadPin>
 8002b48:	4603      	mov	r3, r0
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d001      	beq.n	8002b52 <reed_scan_sensors+0x17e>
 8002b4e:	2108      	movs	r1, #8
 8002b50:	e000      	b.n	8002b54 <reed_scan_sensors+0x180>
 8002b52:	2100      	movs	r1, #0
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	687a      	ldr	r2, [r7, #4]
 8002b58:	4413      	add	r3, r2
 8002b5a:	781b      	ldrb	r3, [r3, #0]
 8002b5c:	b25a      	sxtb	r2, r3
 8002b5e:	b24b      	sxtb	r3, r1
 8002b60:	4313      	orrs	r3, r2
 8002b62:	b259      	sxtb	r1, r3
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	687a      	ldr	r2, [r7, #4]
 8002b68:	4413      	add	r3, r2
 8002b6a:	b2ca      	uxtb	r2, r1
 8002b6c:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_E_GPIO_Port, REED_E_Pin) != 0) << 4;
 8002b6e:	2120      	movs	r1, #32
 8002b70:	4835      	ldr	r0, [pc, #212]	; (8002c48 <reed_scan_sensors+0x274>)
 8002b72:	f000 fed1 	bl	8003918 <HAL_GPIO_ReadPin>
 8002b76:	4603      	mov	r3, r0
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d001      	beq.n	8002b80 <reed_scan_sensors+0x1ac>
 8002b7c:	2110      	movs	r1, #16
 8002b7e:	e000      	b.n	8002b82 <reed_scan_sensors+0x1ae>
 8002b80:	2100      	movs	r1, #0
 8002b82:	68fb      	ldr	r3, [r7, #12]
 8002b84:	687a      	ldr	r2, [r7, #4]
 8002b86:	4413      	add	r3, r2
 8002b88:	781b      	ldrb	r3, [r3, #0]
 8002b8a:	b25a      	sxtb	r2, r3
 8002b8c:	b24b      	sxtb	r3, r1
 8002b8e:	4313      	orrs	r3, r2
 8002b90:	b259      	sxtb	r1, r3
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	687a      	ldr	r2, [r7, #4]
 8002b96:	4413      	add	r3, r2
 8002b98:	b2ca      	uxtb	r2, r1
 8002b9a:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_F_GPIO_Port, REED_F_Pin) != 0) << 5;
 8002b9c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002ba0:	482a      	ldr	r0, [pc, #168]	; (8002c4c <reed_scan_sensors+0x278>)
 8002ba2:	f000 feb9 	bl	8003918 <HAL_GPIO_ReadPin>
 8002ba6:	4603      	mov	r3, r0
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d001      	beq.n	8002bb0 <reed_scan_sensors+0x1dc>
 8002bac:	2120      	movs	r1, #32
 8002bae:	e000      	b.n	8002bb2 <reed_scan_sensors+0x1de>
 8002bb0:	2100      	movs	r1, #0
 8002bb2:	68fb      	ldr	r3, [r7, #12]
 8002bb4:	687a      	ldr	r2, [r7, #4]
 8002bb6:	4413      	add	r3, r2
 8002bb8:	781b      	ldrb	r3, [r3, #0]
 8002bba:	b25a      	sxtb	r2, r3
 8002bbc:	b24b      	sxtb	r3, r1
 8002bbe:	4313      	orrs	r3, r2
 8002bc0:	b259      	sxtb	r1, r3
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	687a      	ldr	r2, [r7, #4]
 8002bc6:	4413      	add	r3, r2
 8002bc8:	b2ca      	uxtb	r2, r1
 8002bca:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_G_GPIO_Port, REED_G_Pin) != 0) << 6;
 8002bcc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002bd0:	481d      	ldr	r0, [pc, #116]	; (8002c48 <reed_scan_sensors+0x274>)
 8002bd2:	f000 fea1 	bl	8003918 <HAL_GPIO_ReadPin>
 8002bd6:	4603      	mov	r3, r0
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d001      	beq.n	8002be0 <reed_scan_sensors+0x20c>
 8002bdc:	2140      	movs	r1, #64	; 0x40
 8002bde:	e000      	b.n	8002be2 <reed_scan_sensors+0x20e>
 8002be0:	2100      	movs	r1, #0
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	687a      	ldr	r2, [r7, #4]
 8002be6:	4413      	add	r3, r2
 8002be8:	781b      	ldrb	r3, [r3, #0]
 8002bea:	b25a      	sxtb	r2, r3
 8002bec:	b24b      	sxtb	r3, r1
 8002bee:	4313      	orrs	r3, r2
 8002bf0:	b259      	sxtb	r1, r3
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	687a      	ldr	r2, [r7, #4]
 8002bf6:	4413      	add	r3, r2
 8002bf8:	b2ca      	uxtb	r2, r1
 8002bfa:	701a      	strb	r2, [r3, #0]
	data[row] |= (HAL_GPIO_ReadPin(REED_H_GPIO_Port, REED_H_Pin) != 0) << 7;
 8002bfc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002c00:	4811      	ldr	r0, [pc, #68]	; (8002c48 <reed_scan_sensors+0x274>)
 8002c02:	f000 fe89 	bl	8003918 <HAL_GPIO_ReadPin>
 8002c06:	4603      	mov	r3, r0
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	d001      	beq.n	8002c10 <reed_scan_sensors+0x23c>
 8002c0c:	2180      	movs	r1, #128	; 0x80
 8002c0e:	e000      	b.n	8002c12 <reed_scan_sensors+0x23e>
 8002c10:	2100      	movs	r1, #0
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	687a      	ldr	r2, [r7, #4]
 8002c16:	4413      	add	r3, r2
 8002c18:	781b      	ldrb	r3, [r3, #0]
 8002c1a:	b25a      	sxtb	r2, r3
 8002c1c:	b24b      	sxtb	r3, r1
 8002c1e:	4313      	orrs	r3, r2
 8002c20:	b259      	sxtb	r1, r3
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	687a      	ldr	r2, [r7, #4]
 8002c26:	4413      	add	r3, r2
 8002c28:	b2ca      	uxtb	r2, r1
 8002c2a:	701a      	strb	r2, [r3, #0]
  for (int row = 0; row < 8; row++) {
 8002c2c:	68fb      	ldr	r3, [r7, #12]
 8002c2e:	3301      	adds	r3, #1
 8002c30:	60fb      	str	r3, [r7, #12]
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	2b07      	cmp	r3, #7
 8002c36:	f77f aed4 	ble.w	80029e2 <reed_scan_sensors+0xe>

  }
}
 8002c3a:	bf00      	nop
 8002c3c:	bf00      	nop
 8002c3e:	3710      	adds	r7, #16
 8002c40:	46bd      	mov	sp, r7
 8002c42:	bd80      	pop	{r7, pc}
 8002c44:	40020800 	.word	0x40020800
 8002c48:	40020400 	.word	0x40020400
 8002c4c:	40020000 	.word	0x40020000

08002c50 <Reset_Handler>:
 8002c50:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002c88 <LoopFillZerobss+0x12>
 8002c54:	480d      	ldr	r0, [pc, #52]	; (8002c8c <LoopFillZerobss+0x16>)
 8002c56:	490e      	ldr	r1, [pc, #56]	; (8002c90 <LoopFillZerobss+0x1a>)
 8002c58:	4a0e      	ldr	r2, [pc, #56]	; (8002c94 <LoopFillZerobss+0x1e>)
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	e002      	b.n	8002c64 <LoopCopyDataInit>

08002c5e <CopyDataInit>:
 8002c5e:	58d4      	ldr	r4, [r2, r3]
 8002c60:	50c4      	str	r4, [r0, r3]
 8002c62:	3304      	adds	r3, #4

08002c64 <LoopCopyDataInit>:
 8002c64:	18c4      	adds	r4, r0, r3
 8002c66:	428c      	cmp	r4, r1
 8002c68:	d3f9      	bcc.n	8002c5e <CopyDataInit>
 8002c6a:	4a0b      	ldr	r2, [pc, #44]	; (8002c98 <LoopFillZerobss+0x22>)
 8002c6c:	4c0b      	ldr	r4, [pc, #44]	; (8002c9c <LoopFillZerobss+0x26>)
 8002c6e:	2300      	movs	r3, #0
 8002c70:	e001      	b.n	8002c76 <LoopFillZerobss>

08002c72 <FillZerobss>:
 8002c72:	6013      	str	r3, [r2, #0]
 8002c74:	3204      	adds	r2, #4

08002c76 <LoopFillZerobss>:
 8002c76:	42a2      	cmp	r2, r4
 8002c78:	d3fb      	bcc.n	8002c72 <FillZerobss>
 8002c7a:	f7fe fcff 	bl	800167c <SystemInit>
 8002c7e:	f005 fb91 	bl	80083a4 <__libc_init_array>
 8002c82:	f7fd fe37 	bl	80008f4 <main>
 8002c86:	4770      	bx	lr
 8002c88:	20018000 	.word	0x20018000
 8002c8c:	20000000 	.word	0x20000000
 8002c90:	200000fc 	.word	0x200000fc
 8002c94:	08009c3c 	.word	0x08009c3c
 8002c98:	200000fc 	.word	0x200000fc
 8002c9c:	20005564 	.word	0x20005564

08002ca0 <ADC_IRQHandler>:
 8002ca0:	e7fe      	b.n	8002ca0 <ADC_IRQHandler>
	...

08002ca4 <HAL_Init>:
 8002ca4:	b580      	push	{r7, lr}
 8002ca6:	af00      	add	r7, sp, #0
 8002ca8:	4b0e      	ldr	r3, [pc, #56]	; (8002ce4 <HAL_Init+0x40>)
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	4a0d      	ldr	r2, [pc, #52]	; (8002ce4 <HAL_Init+0x40>)
 8002cae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002cb2:	6013      	str	r3, [r2, #0]
 8002cb4:	4b0b      	ldr	r3, [pc, #44]	; (8002ce4 <HAL_Init+0x40>)
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	4a0a      	ldr	r2, [pc, #40]	; (8002ce4 <HAL_Init+0x40>)
 8002cba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002cbe:	6013      	str	r3, [r2, #0]
 8002cc0:	4b08      	ldr	r3, [pc, #32]	; (8002ce4 <HAL_Init+0x40>)
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	4a07      	ldr	r2, [pc, #28]	; (8002ce4 <HAL_Init+0x40>)
 8002cc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002cca:	6013      	str	r3, [r2, #0]
 8002ccc:	2003      	movs	r0, #3
 8002cce:	f000 f8d8 	bl	8002e82 <HAL_NVIC_SetPriorityGrouping>
 8002cd2:	200f      	movs	r0, #15
 8002cd4:	f7fe fb7e 	bl	80013d4 <HAL_InitTick>
 8002cd8:	f7fe fa66 	bl	80011a8 <HAL_MspInit>
 8002cdc:	2300      	movs	r3, #0
 8002cde:	4618      	mov	r0, r3
 8002ce0:	bd80      	pop	{r7, pc}
 8002ce2:	bf00      	nop
 8002ce4:	40023c00 	.word	0x40023c00

08002ce8 <HAL_IncTick>:
 8002ce8:	b480      	push	{r7}
 8002cea:	af00      	add	r7, sp, #0
 8002cec:	4b06      	ldr	r3, [pc, #24]	; (8002d08 <HAL_IncTick+0x20>)
 8002cee:	781b      	ldrb	r3, [r3, #0]
 8002cf0:	461a      	mov	r2, r3
 8002cf2:	4b06      	ldr	r3, [pc, #24]	; (8002d0c <HAL_IncTick+0x24>)
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	4413      	add	r3, r2
 8002cf8:	4a04      	ldr	r2, [pc, #16]	; (8002d0c <HAL_IncTick+0x24>)
 8002cfa:	6013      	str	r3, [r2, #0]
 8002cfc:	bf00      	nop
 8002cfe:	46bd      	mov	sp, r7
 8002d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d04:	4770      	bx	lr
 8002d06:	bf00      	nop
 8002d08:	20000098 	.word	0x20000098
 8002d0c:	200016c0 	.word	0x200016c0

08002d10 <HAL_GetTick>:
 8002d10:	b480      	push	{r7}
 8002d12:	af00      	add	r7, sp, #0
 8002d14:	4b03      	ldr	r3, [pc, #12]	; (8002d24 <HAL_GetTick+0x14>)
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	4618      	mov	r0, r3
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d20:	4770      	bx	lr
 8002d22:	bf00      	nop
 8002d24:	200016c0 	.word	0x200016c0

08002d28 <__NVIC_SetPriorityGrouping>:
 8002d28:	b480      	push	{r7}
 8002d2a:	b085      	sub	sp, #20
 8002d2c:	af00      	add	r7, sp, #0
 8002d2e:	6078      	str	r0, [r7, #4]
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	f003 0307 	and.w	r3, r3, #7
 8002d36:	60fb      	str	r3, [r7, #12]
 8002d38:	4b0c      	ldr	r3, [pc, #48]	; (8002d6c <__NVIC_SetPriorityGrouping+0x44>)
 8002d3a:	68db      	ldr	r3, [r3, #12]
 8002d3c:	60bb      	str	r3, [r7, #8]
 8002d3e:	68ba      	ldr	r2, [r7, #8]
 8002d40:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002d44:	4013      	ands	r3, r2
 8002d46:	60bb      	str	r3, [r7, #8]
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	021a      	lsls	r2, r3, #8
 8002d4c:	68bb      	ldr	r3, [r7, #8]
 8002d4e:	4313      	orrs	r3, r2
 8002d50:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002d54:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002d58:	60bb      	str	r3, [r7, #8]
 8002d5a:	4a04      	ldr	r2, [pc, #16]	; (8002d6c <__NVIC_SetPriorityGrouping+0x44>)
 8002d5c:	68bb      	ldr	r3, [r7, #8]
 8002d5e:	60d3      	str	r3, [r2, #12]
 8002d60:	bf00      	nop
 8002d62:	3714      	adds	r7, #20
 8002d64:	46bd      	mov	sp, r7
 8002d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d6a:	4770      	bx	lr
 8002d6c:	e000ed00 	.word	0xe000ed00

08002d70 <__NVIC_GetPriorityGrouping>:
 8002d70:	b480      	push	{r7}
 8002d72:	af00      	add	r7, sp, #0
 8002d74:	4b04      	ldr	r3, [pc, #16]	; (8002d88 <__NVIC_GetPriorityGrouping+0x18>)
 8002d76:	68db      	ldr	r3, [r3, #12]
 8002d78:	0a1b      	lsrs	r3, r3, #8
 8002d7a:	f003 0307 	and.w	r3, r3, #7
 8002d7e:	4618      	mov	r0, r3
 8002d80:	46bd      	mov	sp, r7
 8002d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d86:	4770      	bx	lr
 8002d88:	e000ed00 	.word	0xe000ed00

08002d8c <__NVIC_EnableIRQ>:
 8002d8c:	b480      	push	{r7}
 8002d8e:	b083      	sub	sp, #12
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	4603      	mov	r3, r0
 8002d94:	71fb      	strb	r3, [r7, #7]
 8002d96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	db0b      	blt.n	8002db6 <__NVIC_EnableIRQ+0x2a>
 8002d9e:	79fb      	ldrb	r3, [r7, #7]
 8002da0:	f003 021f 	and.w	r2, r3, #31
 8002da4:	4907      	ldr	r1, [pc, #28]	; (8002dc4 <__NVIC_EnableIRQ+0x38>)
 8002da6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002daa:	095b      	lsrs	r3, r3, #5
 8002dac:	2001      	movs	r0, #1
 8002dae:	fa00 f202 	lsl.w	r2, r0, r2
 8002db2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002db6:	bf00      	nop
 8002db8:	370c      	adds	r7, #12
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dc0:	4770      	bx	lr
 8002dc2:	bf00      	nop
 8002dc4:	e000e100 	.word	0xe000e100

08002dc8 <__NVIC_SetPriority>:
 8002dc8:	b480      	push	{r7}
 8002dca:	b083      	sub	sp, #12
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	4603      	mov	r3, r0
 8002dd0:	6039      	str	r1, [r7, #0]
 8002dd2:	71fb      	strb	r3, [r7, #7]
 8002dd4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	db0a      	blt.n	8002df2 <__NVIC_SetPriority+0x2a>
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	b2da      	uxtb	r2, r3
 8002de0:	490c      	ldr	r1, [pc, #48]	; (8002e14 <__NVIC_SetPriority+0x4c>)
 8002de2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002de6:	0112      	lsls	r2, r2, #4
 8002de8:	b2d2      	uxtb	r2, r2
 8002dea:	440b      	add	r3, r1
 8002dec:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002df0:	e00a      	b.n	8002e08 <__NVIC_SetPriority+0x40>
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	b2da      	uxtb	r2, r3
 8002df6:	4908      	ldr	r1, [pc, #32]	; (8002e18 <__NVIC_SetPriority+0x50>)
 8002df8:	79fb      	ldrb	r3, [r7, #7]
 8002dfa:	f003 030f 	and.w	r3, r3, #15
 8002dfe:	3b04      	subs	r3, #4
 8002e00:	0112      	lsls	r2, r2, #4
 8002e02:	b2d2      	uxtb	r2, r2
 8002e04:	440b      	add	r3, r1
 8002e06:	761a      	strb	r2, [r3, #24]
 8002e08:	bf00      	nop
 8002e0a:	370c      	adds	r7, #12
 8002e0c:	46bd      	mov	sp, r7
 8002e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e12:	4770      	bx	lr
 8002e14:	e000e100 	.word	0xe000e100
 8002e18:	e000ed00 	.word	0xe000ed00

08002e1c <NVIC_EncodePriority>:
 8002e1c:	b480      	push	{r7}
 8002e1e:	b089      	sub	sp, #36	; 0x24
 8002e20:	af00      	add	r7, sp, #0
 8002e22:	60f8      	str	r0, [r7, #12]
 8002e24:	60b9      	str	r1, [r7, #8]
 8002e26:	607a      	str	r2, [r7, #4]
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	f003 0307 	and.w	r3, r3, #7
 8002e2e:	61fb      	str	r3, [r7, #28]
 8002e30:	69fb      	ldr	r3, [r7, #28]
 8002e32:	f1c3 0307 	rsb	r3, r3, #7
 8002e36:	2b04      	cmp	r3, #4
 8002e38:	bf28      	it	cs
 8002e3a:	2304      	movcs	r3, #4
 8002e3c:	61bb      	str	r3, [r7, #24]
 8002e3e:	69fb      	ldr	r3, [r7, #28]
 8002e40:	3304      	adds	r3, #4
 8002e42:	2b06      	cmp	r3, #6
 8002e44:	d902      	bls.n	8002e4c <NVIC_EncodePriority+0x30>
 8002e46:	69fb      	ldr	r3, [r7, #28]
 8002e48:	3b03      	subs	r3, #3
 8002e4a:	e000      	b.n	8002e4e <NVIC_EncodePriority+0x32>
 8002e4c:	2300      	movs	r3, #0
 8002e4e:	617b      	str	r3, [r7, #20]
 8002e50:	f04f 32ff 	mov.w	r2, #4294967295
 8002e54:	69bb      	ldr	r3, [r7, #24]
 8002e56:	fa02 f303 	lsl.w	r3, r2, r3
 8002e5a:	43da      	mvns	r2, r3
 8002e5c:	68bb      	ldr	r3, [r7, #8]
 8002e5e:	401a      	ands	r2, r3
 8002e60:	697b      	ldr	r3, [r7, #20]
 8002e62:	409a      	lsls	r2, r3
 8002e64:	f04f 31ff 	mov.w	r1, #4294967295
 8002e68:	697b      	ldr	r3, [r7, #20]
 8002e6a:	fa01 f303 	lsl.w	r3, r1, r3
 8002e6e:	43d9      	mvns	r1, r3
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	400b      	ands	r3, r1
 8002e74:	4313      	orrs	r3, r2
 8002e76:	4618      	mov	r0, r3
 8002e78:	3724      	adds	r7, #36	; 0x24
 8002e7a:	46bd      	mov	sp, r7
 8002e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e80:	4770      	bx	lr

08002e82 <HAL_NVIC_SetPriorityGrouping>:
 8002e82:	b580      	push	{r7, lr}
 8002e84:	b082      	sub	sp, #8
 8002e86:	af00      	add	r7, sp, #0
 8002e88:	6078      	str	r0, [r7, #4]
 8002e8a:	6878      	ldr	r0, [r7, #4]
 8002e8c:	f7ff ff4c 	bl	8002d28 <__NVIC_SetPriorityGrouping>
 8002e90:	bf00      	nop
 8002e92:	3708      	adds	r7, #8
 8002e94:	46bd      	mov	sp, r7
 8002e96:	bd80      	pop	{r7, pc}

08002e98 <HAL_NVIC_SetPriority>:
 8002e98:	b580      	push	{r7, lr}
 8002e9a:	b086      	sub	sp, #24
 8002e9c:	af00      	add	r7, sp, #0
 8002e9e:	4603      	mov	r3, r0
 8002ea0:	60b9      	str	r1, [r7, #8]
 8002ea2:	607a      	str	r2, [r7, #4]
 8002ea4:	73fb      	strb	r3, [r7, #15]
 8002ea6:	2300      	movs	r3, #0
 8002ea8:	617b      	str	r3, [r7, #20]
 8002eaa:	f7ff ff61 	bl	8002d70 <__NVIC_GetPriorityGrouping>
 8002eae:	6178      	str	r0, [r7, #20]
 8002eb0:	687a      	ldr	r2, [r7, #4]
 8002eb2:	68b9      	ldr	r1, [r7, #8]
 8002eb4:	6978      	ldr	r0, [r7, #20]
 8002eb6:	f7ff ffb1 	bl	8002e1c <NVIC_EncodePriority>
 8002eba:	4602      	mov	r2, r0
 8002ebc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002ec0:	4611      	mov	r1, r2
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	f7ff ff80 	bl	8002dc8 <__NVIC_SetPriority>
 8002ec8:	bf00      	nop
 8002eca:	3718      	adds	r7, #24
 8002ecc:	46bd      	mov	sp, r7
 8002ece:	bd80      	pop	{r7, pc}

08002ed0 <HAL_NVIC_EnableIRQ>:
 8002ed0:	b580      	push	{r7, lr}
 8002ed2:	b082      	sub	sp, #8
 8002ed4:	af00      	add	r7, sp, #0
 8002ed6:	4603      	mov	r3, r0
 8002ed8:	71fb      	strb	r3, [r7, #7]
 8002eda:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ede:	4618      	mov	r0, r3
 8002ee0:	f7ff ff54 	bl	8002d8c <__NVIC_EnableIRQ>
 8002ee4:	bf00      	nop
 8002ee6:	3708      	adds	r7, #8
 8002ee8:	46bd      	mov	sp, r7
 8002eea:	bd80      	pop	{r7, pc}

08002eec <HAL_DMA_Init>:
 8002eec:	b580      	push	{r7, lr}
 8002eee:	b086      	sub	sp, #24
 8002ef0:	af00      	add	r7, sp, #0
 8002ef2:	6078      	str	r0, [r7, #4]
 8002ef4:	2300      	movs	r3, #0
 8002ef6:	617b      	str	r3, [r7, #20]
 8002ef8:	f7ff ff0a 	bl	8002d10 <HAL_GetTick>
 8002efc:	6138      	str	r0, [r7, #16]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d101      	bne.n	8002f08 <HAL_DMA_Init+0x1c>
 8002f04:	2301      	movs	r3, #1
 8002f06:	e099      	b.n	800303c <HAL_DMA_Init+0x150>
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	2202      	movs	r2, #2
 8002f0c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	2200      	movs	r2, #0
 8002f14:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	681a      	ldr	r2, [r3, #0]
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	f022 0201 	bic.w	r2, r2, #1
 8002f26:	601a      	str	r2, [r3, #0]
 8002f28:	e00f      	b.n	8002f4a <HAL_DMA_Init+0x5e>
 8002f2a:	f7ff fef1 	bl	8002d10 <HAL_GetTick>
 8002f2e:	4602      	mov	r2, r0
 8002f30:	693b      	ldr	r3, [r7, #16]
 8002f32:	1ad3      	subs	r3, r2, r3
 8002f34:	2b05      	cmp	r3, #5
 8002f36:	d908      	bls.n	8002f4a <HAL_DMA_Init+0x5e>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	2220      	movs	r2, #32
 8002f3c:	655a      	str	r2, [r3, #84]	; 0x54
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	2203      	movs	r2, #3
 8002f42:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002f46:	2303      	movs	r3, #3
 8002f48:	e078      	b.n	800303c <HAL_DMA_Init+0x150>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	f003 0301 	and.w	r3, r3, #1
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d1e8      	bne.n	8002f2a <HAL_DMA_Init+0x3e>
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	617b      	str	r3, [r7, #20]
 8002f60:	697a      	ldr	r2, [r7, #20]
 8002f62:	4b38      	ldr	r3, [pc, #224]	; (8003044 <HAL_DMA_Init+0x158>)
 8002f64:	4013      	ands	r3, r2
 8002f66:	617b      	str	r3, [r7, #20]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	685a      	ldr	r2, [r3, #4]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	689b      	ldr	r3, [r3, #8]
 8002f70:	431a      	orrs	r2, r3
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	68db      	ldr	r3, [r3, #12]
 8002f76:	431a      	orrs	r2, r3
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	691b      	ldr	r3, [r3, #16]
 8002f7c:	431a      	orrs	r2, r3
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	695b      	ldr	r3, [r3, #20]
 8002f82:	431a      	orrs	r2, r3
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	699b      	ldr	r3, [r3, #24]
 8002f88:	431a      	orrs	r2, r3
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	69db      	ldr	r3, [r3, #28]
 8002f8e:	431a      	orrs	r2, r3
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	6a1b      	ldr	r3, [r3, #32]
 8002f94:	4313      	orrs	r3, r2
 8002f96:	697a      	ldr	r2, [r7, #20]
 8002f98:	4313      	orrs	r3, r2
 8002f9a:	617b      	str	r3, [r7, #20]
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fa0:	2b04      	cmp	r3, #4
 8002fa2:	d107      	bne.n	8002fb4 <HAL_DMA_Init+0xc8>
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fac:	4313      	orrs	r3, r2
 8002fae:	697a      	ldr	r2, [r7, #20]
 8002fb0:	4313      	orrs	r3, r2
 8002fb2:	617b      	str	r3, [r7, #20]
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	697a      	ldr	r2, [r7, #20]
 8002fba:	601a      	str	r2, [r3, #0]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	695b      	ldr	r3, [r3, #20]
 8002fc2:	617b      	str	r3, [r7, #20]
 8002fc4:	697b      	ldr	r3, [r7, #20]
 8002fc6:	f023 0307 	bic.w	r3, r3, #7
 8002fca:	617b      	str	r3, [r7, #20]
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fd0:	697a      	ldr	r2, [r7, #20]
 8002fd2:	4313      	orrs	r3, r2
 8002fd4:	617b      	str	r3, [r7, #20]
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fda:	2b04      	cmp	r3, #4
 8002fdc:	d117      	bne.n	800300e <HAL_DMA_Init+0x122>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002fe2:	697a      	ldr	r2, [r7, #20]
 8002fe4:	4313      	orrs	r3, r2
 8002fe6:	617b      	str	r3, [r7, #20]
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002fec:	2b00      	cmp	r3, #0
 8002fee:	d00e      	beq.n	800300e <HAL_DMA_Init+0x122>
 8002ff0:	6878      	ldr	r0, [r7, #4]
 8002ff2:	f000 fa91 	bl	8003518 <DMA_CheckFifoParam>
 8002ff6:	4603      	mov	r3, r0
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	d008      	beq.n	800300e <HAL_DMA_Init+0x122>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	2240      	movs	r2, #64	; 0x40
 8003000:	655a      	str	r2, [r3, #84]	; 0x54
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	2201      	movs	r2, #1
 8003006:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800300a:	2301      	movs	r3, #1
 800300c:	e016      	b.n	800303c <HAL_DMA_Init+0x150>
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	697a      	ldr	r2, [r7, #20]
 8003014:	615a      	str	r2, [r3, #20]
 8003016:	6878      	ldr	r0, [r7, #4]
 8003018:	f000 fa48 	bl	80034ac <DMA_CalcBaseAndBitshift>
 800301c:	4603      	mov	r3, r0
 800301e:	60fb      	str	r3, [r7, #12]
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003024:	223f      	movs	r2, #63	; 0x3f
 8003026:	409a      	lsls	r2, r3
 8003028:	68fb      	ldr	r3, [r7, #12]
 800302a:	609a      	str	r2, [r3, #8]
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	2200      	movs	r2, #0
 8003030:	655a      	str	r2, [r3, #84]	; 0x54
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	2201      	movs	r2, #1
 8003036:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800303a:	2300      	movs	r3, #0
 800303c:	4618      	mov	r0, r3
 800303e:	3718      	adds	r7, #24
 8003040:	46bd      	mov	sp, r7
 8003042:	bd80      	pop	{r7, pc}
 8003044:	f010803f 	.word	0xf010803f

08003048 <HAL_DMA_Start_IT>:
 8003048:	b580      	push	{r7, lr}
 800304a:	b086      	sub	sp, #24
 800304c:	af00      	add	r7, sp, #0
 800304e:	60f8      	str	r0, [r7, #12]
 8003050:	60b9      	str	r1, [r7, #8]
 8003052:	607a      	str	r2, [r7, #4]
 8003054:	603b      	str	r3, [r7, #0]
 8003056:	2300      	movs	r3, #0
 8003058:	75fb      	strb	r3, [r7, #23]
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800305e:	613b      	str	r3, [r7, #16]
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003066:	2b01      	cmp	r3, #1
 8003068:	d101      	bne.n	800306e <HAL_DMA_Start_IT+0x26>
 800306a:	2302      	movs	r3, #2
 800306c:	e040      	b.n	80030f0 <HAL_DMA_Start_IT+0xa8>
 800306e:	68fb      	ldr	r3, [r7, #12]
 8003070:	2201      	movs	r2, #1
 8003072:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800307c:	b2db      	uxtb	r3, r3
 800307e:	2b01      	cmp	r3, #1
 8003080:	d12f      	bne.n	80030e2 <HAL_DMA_Start_IT+0x9a>
 8003082:	68fb      	ldr	r3, [r7, #12]
 8003084:	2202      	movs	r2, #2
 8003086:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	2200      	movs	r2, #0
 800308e:	655a      	str	r2, [r3, #84]	; 0x54
 8003090:	683b      	ldr	r3, [r7, #0]
 8003092:	687a      	ldr	r2, [r7, #4]
 8003094:	68b9      	ldr	r1, [r7, #8]
 8003096:	68f8      	ldr	r0, [r7, #12]
 8003098:	f000 f9da 	bl	8003450 <DMA_SetConfig>
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030a0:	223f      	movs	r2, #63	; 0x3f
 80030a2:	409a      	lsls	r2, r3
 80030a4:	693b      	ldr	r3, [r7, #16]
 80030a6:	609a      	str	r2, [r3, #8]
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	681a      	ldr	r2, [r3, #0]
 80030ae:	68fb      	ldr	r3, [r7, #12]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	f042 0216 	orr.w	r2, r2, #22
 80030b6:	601a      	str	r2, [r3, #0]
 80030b8:	68fb      	ldr	r3, [r7, #12]
 80030ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030bc:	2b00      	cmp	r3, #0
 80030be:	d007      	beq.n	80030d0 <HAL_DMA_Start_IT+0x88>
 80030c0:	68fb      	ldr	r3, [r7, #12]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	681a      	ldr	r2, [r3, #0]
 80030c6:	68fb      	ldr	r3, [r7, #12]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	f042 0208 	orr.w	r2, r2, #8
 80030ce:	601a      	str	r2, [r3, #0]
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	681a      	ldr	r2, [r3, #0]
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	f042 0201 	orr.w	r2, r2, #1
 80030de:	601a      	str	r2, [r3, #0]
 80030e0:	e005      	b.n	80030ee <HAL_DMA_Start_IT+0xa6>
 80030e2:	68fb      	ldr	r3, [r7, #12]
 80030e4:	2200      	movs	r2, #0
 80030e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80030ea:	2302      	movs	r3, #2
 80030ec:	75fb      	strb	r3, [r7, #23]
 80030ee:	7dfb      	ldrb	r3, [r7, #23]
 80030f0:	4618      	mov	r0, r3
 80030f2:	3718      	adds	r7, #24
 80030f4:	46bd      	mov	sp, r7
 80030f6:	bd80      	pop	{r7, pc}

080030f8 <HAL_DMA_Abort_IT>:
 80030f8:	b480      	push	{r7}
 80030fa:	b083      	sub	sp, #12
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003106:	b2db      	uxtb	r3, r3
 8003108:	2b02      	cmp	r3, #2
 800310a:	d004      	beq.n	8003116 <HAL_DMA_Abort_IT+0x1e>
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	2280      	movs	r2, #128	; 0x80
 8003110:	655a      	str	r2, [r3, #84]	; 0x54
 8003112:	2301      	movs	r3, #1
 8003114:	e00c      	b.n	8003130 <HAL_DMA_Abort_IT+0x38>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	2205      	movs	r2, #5
 800311a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	681a      	ldr	r2, [r3, #0]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	f022 0201 	bic.w	r2, r2, #1
 800312c:	601a      	str	r2, [r3, #0]
 800312e:	2300      	movs	r3, #0
 8003130:	4618      	mov	r0, r3
 8003132:	370c      	adds	r7, #12
 8003134:	46bd      	mov	sp, r7
 8003136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800313a:	4770      	bx	lr

0800313c <HAL_DMA_IRQHandler>:
 800313c:	b580      	push	{r7, lr}
 800313e:	b086      	sub	sp, #24
 8003140:	af00      	add	r7, sp, #0
 8003142:	6078      	str	r0, [r7, #4]
 8003144:	2300      	movs	r3, #0
 8003146:	60bb      	str	r3, [r7, #8]
 8003148:	4b8e      	ldr	r3, [pc, #568]	; (8003384 <HAL_DMA_IRQHandler+0x248>)
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	4a8e      	ldr	r2, [pc, #568]	; (8003388 <HAL_DMA_IRQHandler+0x24c>)
 800314e:	fba2 2303 	umull	r2, r3, r2, r3
 8003152:	0a9b      	lsrs	r3, r3, #10
 8003154:	617b      	str	r3, [r7, #20]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800315a:	613b      	str	r3, [r7, #16]
 800315c:	693b      	ldr	r3, [r7, #16]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	60fb      	str	r3, [r7, #12]
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003166:	2208      	movs	r2, #8
 8003168:	409a      	lsls	r2, r3
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	4013      	ands	r3, r2
 800316e:	2b00      	cmp	r3, #0
 8003170:	d01a      	beq.n	80031a8 <HAL_DMA_IRQHandler+0x6c>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f003 0304 	and.w	r3, r3, #4
 800317c:	2b00      	cmp	r3, #0
 800317e:	d013      	beq.n	80031a8 <HAL_DMA_IRQHandler+0x6c>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	681a      	ldr	r2, [r3, #0]
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	681b      	ldr	r3, [r3, #0]
 800318a:	f022 0204 	bic.w	r2, r2, #4
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003194:	2208      	movs	r2, #8
 8003196:	409a      	lsls	r2, r3
 8003198:	693b      	ldr	r3, [r7, #16]
 800319a:	609a      	str	r2, [r3, #8]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80031a0:	f043 0201 	orr.w	r2, r3, #1
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	655a      	str	r2, [r3, #84]	; 0x54
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031ac:	2201      	movs	r2, #1
 80031ae:	409a      	lsls	r2, r3
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	4013      	ands	r3, r2
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d012      	beq.n	80031de <HAL_DMA_IRQHandler+0xa2>
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	695b      	ldr	r3, [r3, #20]
 80031be:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d00b      	beq.n	80031de <HAL_DMA_IRQHandler+0xa2>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031ca:	2201      	movs	r2, #1
 80031cc:	409a      	lsls	r2, r3
 80031ce:	693b      	ldr	r3, [r7, #16]
 80031d0:	609a      	str	r2, [r3, #8]
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80031d6:	f043 0202 	orr.w	r2, r3, #2
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	655a      	str	r2, [r3, #84]	; 0x54
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031e2:	2204      	movs	r2, #4
 80031e4:	409a      	lsls	r2, r3
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	4013      	ands	r3, r2
 80031ea:	2b00      	cmp	r3, #0
 80031ec:	d012      	beq.n	8003214 <HAL_DMA_IRQHandler+0xd8>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	f003 0302 	and.w	r3, r3, #2
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	d00b      	beq.n	8003214 <HAL_DMA_IRQHandler+0xd8>
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003200:	2204      	movs	r2, #4
 8003202:	409a      	lsls	r2, r3
 8003204:	693b      	ldr	r3, [r7, #16]
 8003206:	609a      	str	r2, [r3, #8]
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800320c:	f043 0204 	orr.w	r2, r3, #4
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	655a      	str	r2, [r3, #84]	; 0x54
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003218:	2210      	movs	r2, #16
 800321a:	409a      	lsls	r2, r3
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	4013      	ands	r3, r2
 8003220:	2b00      	cmp	r3, #0
 8003222:	d043      	beq.n	80032ac <HAL_DMA_IRQHandler+0x170>
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	f003 0308 	and.w	r3, r3, #8
 800322e:	2b00      	cmp	r3, #0
 8003230:	d03c      	beq.n	80032ac <HAL_DMA_IRQHandler+0x170>
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003236:	2210      	movs	r2, #16
 8003238:	409a      	lsls	r2, r3
 800323a:	693b      	ldr	r3, [r7, #16]
 800323c:	609a      	str	r2, [r3, #8]
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003248:	2b00      	cmp	r3, #0
 800324a:	d018      	beq.n	800327e <HAL_DMA_IRQHandler+0x142>
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003256:	2b00      	cmp	r3, #0
 8003258:	d108      	bne.n	800326c <HAL_DMA_IRQHandler+0x130>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800325e:	2b00      	cmp	r3, #0
 8003260:	d024      	beq.n	80032ac <HAL_DMA_IRQHandler+0x170>
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003266:	6878      	ldr	r0, [r7, #4]
 8003268:	4798      	blx	r3
 800326a:	e01f      	b.n	80032ac <HAL_DMA_IRQHandler+0x170>
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003270:	2b00      	cmp	r3, #0
 8003272:	d01b      	beq.n	80032ac <HAL_DMA_IRQHandler+0x170>
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003278:	6878      	ldr	r0, [r7, #4]
 800327a:	4798      	blx	r3
 800327c:	e016      	b.n	80032ac <HAL_DMA_IRQHandler+0x170>
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003288:	2b00      	cmp	r3, #0
 800328a:	d107      	bne.n	800329c <HAL_DMA_IRQHandler+0x160>
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	681a      	ldr	r2, [r3, #0]
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	f022 0208 	bic.w	r2, r2, #8
 800329a:	601a      	str	r2, [r3, #0]
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d003      	beq.n	80032ac <HAL_DMA_IRQHandler+0x170>
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032a8:	6878      	ldr	r0, [r7, #4]
 80032aa:	4798      	blx	r3
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032b0:	2220      	movs	r2, #32
 80032b2:	409a      	lsls	r2, r3
 80032b4:	68fb      	ldr	r3, [r7, #12]
 80032b6:	4013      	ands	r3, r2
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	f000 808f 	beq.w	80033dc <HAL_DMA_IRQHandler+0x2a0>
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	f003 0310 	and.w	r3, r3, #16
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	f000 8087 	beq.w	80033dc <HAL_DMA_IRQHandler+0x2a0>
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032d2:	2220      	movs	r2, #32
 80032d4:	409a      	lsls	r2, r3
 80032d6:	693b      	ldr	r3, [r7, #16]
 80032d8:	609a      	str	r2, [r3, #8]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80032e0:	b2db      	uxtb	r3, r3
 80032e2:	2b05      	cmp	r3, #5
 80032e4:	d136      	bne.n	8003354 <HAL_DMA_IRQHandler+0x218>
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	681a      	ldr	r2, [r3, #0]
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	f022 0216 	bic.w	r2, r2, #22
 80032f4:	601a      	str	r2, [r3, #0]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	695a      	ldr	r2, [r3, #20]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003304:	615a      	str	r2, [r3, #20]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800330a:	2b00      	cmp	r3, #0
 800330c:	d103      	bne.n	8003316 <HAL_DMA_IRQHandler+0x1da>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003312:	2b00      	cmp	r3, #0
 8003314:	d007      	beq.n	8003326 <HAL_DMA_IRQHandler+0x1ea>
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	681a      	ldr	r2, [r3, #0]
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	f022 0208 	bic.w	r2, r2, #8
 8003324:	601a      	str	r2, [r3, #0]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800332a:	223f      	movs	r2, #63	; 0x3f
 800332c:	409a      	lsls	r2, r3
 800332e:	693b      	ldr	r3, [r7, #16]
 8003330:	609a      	str	r2, [r3, #8]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	2201      	movs	r2, #1
 8003336:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	2200      	movs	r2, #0
 800333e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003346:	2b00      	cmp	r3, #0
 8003348:	d07e      	beq.n	8003448 <HAL_DMA_IRQHandler+0x30c>
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800334e:	6878      	ldr	r0, [r7, #4]
 8003350:	4798      	blx	r3
 8003352:	e079      	b.n	8003448 <HAL_DMA_IRQHandler+0x30c>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800335e:	2b00      	cmp	r3, #0
 8003360:	d01d      	beq.n	800339e <HAL_DMA_IRQHandler+0x262>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800336c:	2b00      	cmp	r3, #0
 800336e:	d10d      	bne.n	800338c <HAL_DMA_IRQHandler+0x250>
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003374:	2b00      	cmp	r3, #0
 8003376:	d031      	beq.n	80033dc <HAL_DMA_IRQHandler+0x2a0>
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800337c:	6878      	ldr	r0, [r7, #4]
 800337e:	4798      	blx	r3
 8003380:	e02c      	b.n	80033dc <HAL_DMA_IRQHandler+0x2a0>
 8003382:	bf00      	nop
 8003384:	20000000 	.word	0x20000000
 8003388:	1b4e81b5 	.word	0x1b4e81b5
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003390:	2b00      	cmp	r3, #0
 8003392:	d023      	beq.n	80033dc <HAL_DMA_IRQHandler+0x2a0>
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003398:	6878      	ldr	r0, [r7, #4]
 800339a:	4798      	blx	r3
 800339c:	e01e      	b.n	80033dc <HAL_DMA_IRQHandler+0x2a0>
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80033a8:	2b00      	cmp	r3, #0
 80033aa:	d10f      	bne.n	80033cc <HAL_DMA_IRQHandler+0x290>
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	681a      	ldr	r2, [r3, #0]
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	f022 0210 	bic.w	r2, r2, #16
 80033ba:	601a      	str	r2, [r3, #0]
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	2201      	movs	r2, #1
 80033c0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	2200      	movs	r2, #0
 80033c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d003      	beq.n	80033dc <HAL_DMA_IRQHandler+0x2a0>
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033d8:	6878      	ldr	r0, [r7, #4]
 80033da:	4798      	blx	r3
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	d032      	beq.n	800344a <HAL_DMA_IRQHandler+0x30e>
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80033e8:	f003 0301 	and.w	r3, r3, #1
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d022      	beq.n	8003436 <HAL_DMA_IRQHandler+0x2fa>
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	2205      	movs	r2, #5
 80033f4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	681a      	ldr	r2, [r3, #0]
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	f022 0201 	bic.w	r2, r2, #1
 8003406:	601a      	str	r2, [r3, #0]
 8003408:	68bb      	ldr	r3, [r7, #8]
 800340a:	3301      	adds	r3, #1
 800340c:	60bb      	str	r3, [r7, #8]
 800340e:	697a      	ldr	r2, [r7, #20]
 8003410:	429a      	cmp	r2, r3
 8003412:	d307      	bcc.n	8003424 <HAL_DMA_IRQHandler+0x2e8>
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	f003 0301 	and.w	r3, r3, #1
 800341e:	2b00      	cmp	r3, #0
 8003420:	d1f2      	bne.n	8003408 <HAL_DMA_IRQHandler+0x2cc>
 8003422:	e000      	b.n	8003426 <HAL_DMA_IRQHandler+0x2ea>
 8003424:	bf00      	nop
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2201      	movs	r2, #1
 800342a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	2200      	movs	r2, #0
 8003432:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800343a:	2b00      	cmp	r3, #0
 800343c:	d005      	beq.n	800344a <HAL_DMA_IRQHandler+0x30e>
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003442:	6878      	ldr	r0, [r7, #4]
 8003444:	4798      	blx	r3
 8003446:	e000      	b.n	800344a <HAL_DMA_IRQHandler+0x30e>
 8003448:	bf00      	nop
 800344a:	3718      	adds	r7, #24
 800344c:	46bd      	mov	sp, r7
 800344e:	bd80      	pop	{r7, pc}

08003450 <DMA_SetConfig>:
 8003450:	b480      	push	{r7}
 8003452:	b085      	sub	sp, #20
 8003454:	af00      	add	r7, sp, #0
 8003456:	60f8      	str	r0, [r7, #12]
 8003458:	60b9      	str	r1, [r7, #8]
 800345a:	607a      	str	r2, [r7, #4]
 800345c:	603b      	str	r3, [r7, #0]
 800345e:	68fb      	ldr	r3, [r7, #12]
 8003460:	681b      	ldr	r3, [r3, #0]
 8003462:	681a      	ldr	r2, [r3, #0]
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800346c:	601a      	str	r2, [r3, #0]
 800346e:	68fb      	ldr	r3, [r7, #12]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	683a      	ldr	r2, [r7, #0]
 8003474:	605a      	str	r2, [r3, #4]
 8003476:	68fb      	ldr	r3, [r7, #12]
 8003478:	689b      	ldr	r3, [r3, #8]
 800347a:	2b40      	cmp	r3, #64	; 0x40
 800347c:	d108      	bne.n	8003490 <DMA_SetConfig+0x40>
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	687a      	ldr	r2, [r7, #4]
 8003484:	609a      	str	r2, [r3, #8]
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	68ba      	ldr	r2, [r7, #8]
 800348c:	60da      	str	r2, [r3, #12]
 800348e:	e007      	b.n	80034a0 <DMA_SetConfig+0x50>
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	68ba      	ldr	r2, [r7, #8]
 8003496:	609a      	str	r2, [r3, #8]
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	687a      	ldr	r2, [r7, #4]
 800349e:	60da      	str	r2, [r3, #12]
 80034a0:	bf00      	nop
 80034a2:	3714      	adds	r7, #20
 80034a4:	46bd      	mov	sp, r7
 80034a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034aa:	4770      	bx	lr

080034ac <DMA_CalcBaseAndBitshift>:
 80034ac:	b480      	push	{r7}
 80034ae:	b085      	sub	sp, #20
 80034b0:	af00      	add	r7, sp, #0
 80034b2:	6078      	str	r0, [r7, #4]
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	b2db      	uxtb	r3, r3
 80034ba:	3b10      	subs	r3, #16
 80034bc:	4a14      	ldr	r2, [pc, #80]	; (8003510 <DMA_CalcBaseAndBitshift+0x64>)
 80034be:	fba2 2303 	umull	r2, r3, r2, r3
 80034c2:	091b      	lsrs	r3, r3, #4
 80034c4:	60fb      	str	r3, [r7, #12]
 80034c6:	4a13      	ldr	r2, [pc, #76]	; (8003514 <DMA_CalcBaseAndBitshift+0x68>)
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	4413      	add	r3, r2
 80034cc:	781b      	ldrb	r3, [r3, #0]
 80034ce:	461a      	mov	r2, r3
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	65da      	str	r2, [r3, #92]	; 0x5c
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	2b03      	cmp	r3, #3
 80034d8:	d909      	bls.n	80034ee <DMA_CalcBaseAndBitshift+0x42>
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80034e2:	f023 0303 	bic.w	r3, r3, #3
 80034e6:	1d1a      	adds	r2, r3, #4
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	659a      	str	r2, [r3, #88]	; 0x58
 80034ec:	e007      	b.n	80034fe <DMA_CalcBaseAndBitshift+0x52>
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80034f6:	f023 0303 	bic.w	r3, r3, #3
 80034fa:	687a      	ldr	r2, [r7, #4]
 80034fc:	6593      	str	r3, [r2, #88]	; 0x58
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003502:	4618      	mov	r0, r3
 8003504:	3714      	adds	r7, #20
 8003506:	46bd      	mov	sp, r7
 8003508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800350c:	4770      	bx	lr
 800350e:	bf00      	nop
 8003510:	aaaaaaab 	.word	0xaaaaaaab
 8003514:	08009ad4 	.word	0x08009ad4

08003518 <DMA_CheckFifoParam>:
 8003518:	b480      	push	{r7}
 800351a:	b085      	sub	sp, #20
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	2300      	movs	r3, #0
 8003522:	73fb      	strb	r3, [r7, #15]
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003528:	60bb      	str	r3, [r7, #8]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	699b      	ldr	r3, [r3, #24]
 800352e:	2b00      	cmp	r3, #0
 8003530:	d11f      	bne.n	8003572 <DMA_CheckFifoParam+0x5a>
 8003532:	68bb      	ldr	r3, [r7, #8]
 8003534:	2b03      	cmp	r3, #3
 8003536:	d856      	bhi.n	80035e6 <DMA_CheckFifoParam+0xce>
 8003538:	a201      	add	r2, pc, #4	; (adr r2, 8003540 <DMA_CheckFifoParam+0x28>)
 800353a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800353e:	bf00      	nop
 8003540:	08003551 	.word	0x08003551
 8003544:	08003563 	.word	0x08003563
 8003548:	08003551 	.word	0x08003551
 800354c:	080035e7 	.word	0x080035e7
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003554:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003558:	2b00      	cmp	r3, #0
 800355a:	d046      	beq.n	80035ea <DMA_CheckFifoParam+0xd2>
 800355c:	2301      	movs	r3, #1
 800355e:	73fb      	strb	r3, [r7, #15]
 8003560:	e043      	b.n	80035ea <DMA_CheckFifoParam+0xd2>
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003566:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800356a:	d140      	bne.n	80035ee <DMA_CheckFifoParam+0xd6>
 800356c:	2301      	movs	r3, #1
 800356e:	73fb      	strb	r3, [r7, #15]
 8003570:	e03d      	b.n	80035ee <DMA_CheckFifoParam+0xd6>
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	699b      	ldr	r3, [r3, #24]
 8003576:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800357a:	d121      	bne.n	80035c0 <DMA_CheckFifoParam+0xa8>
 800357c:	68bb      	ldr	r3, [r7, #8]
 800357e:	2b03      	cmp	r3, #3
 8003580:	d837      	bhi.n	80035f2 <DMA_CheckFifoParam+0xda>
 8003582:	a201      	add	r2, pc, #4	; (adr r2, 8003588 <DMA_CheckFifoParam+0x70>)
 8003584:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003588:	08003599 	.word	0x08003599
 800358c:	0800359f 	.word	0x0800359f
 8003590:	08003599 	.word	0x08003599
 8003594:	080035b1 	.word	0x080035b1
 8003598:	2301      	movs	r3, #1
 800359a:	73fb      	strb	r3, [r7, #15]
 800359c:	e030      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035a2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d025      	beq.n	80035f6 <DMA_CheckFifoParam+0xde>
 80035aa:	2301      	movs	r3, #1
 80035ac:	73fb      	strb	r3, [r7, #15]
 80035ae:	e022      	b.n	80035f6 <DMA_CheckFifoParam+0xde>
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035b4:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80035b8:	d11f      	bne.n	80035fa <DMA_CheckFifoParam+0xe2>
 80035ba:	2301      	movs	r3, #1
 80035bc:	73fb      	strb	r3, [r7, #15]
 80035be:	e01c      	b.n	80035fa <DMA_CheckFifoParam+0xe2>
 80035c0:	68bb      	ldr	r3, [r7, #8]
 80035c2:	2b02      	cmp	r3, #2
 80035c4:	d903      	bls.n	80035ce <DMA_CheckFifoParam+0xb6>
 80035c6:	68bb      	ldr	r3, [r7, #8]
 80035c8:	2b03      	cmp	r3, #3
 80035ca:	d003      	beq.n	80035d4 <DMA_CheckFifoParam+0xbc>
 80035cc:	e018      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035ce:	2301      	movs	r3, #1
 80035d0:	73fb      	strb	r3, [r7, #15]
 80035d2:	e015      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035d8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80035dc:	2b00      	cmp	r3, #0
 80035de:	d00e      	beq.n	80035fe <DMA_CheckFifoParam+0xe6>
 80035e0:	2301      	movs	r3, #1
 80035e2:	73fb      	strb	r3, [r7, #15]
 80035e4:	e00b      	b.n	80035fe <DMA_CheckFifoParam+0xe6>
 80035e6:	bf00      	nop
 80035e8:	e00a      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035ea:	bf00      	nop
 80035ec:	e008      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035ee:	bf00      	nop
 80035f0:	e006      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035f2:	bf00      	nop
 80035f4:	e004      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035f6:	bf00      	nop
 80035f8:	e002      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035fa:	bf00      	nop
 80035fc:	e000      	b.n	8003600 <DMA_CheckFifoParam+0xe8>
 80035fe:	bf00      	nop
 8003600:	7bfb      	ldrb	r3, [r7, #15]
 8003602:	4618      	mov	r0, r3
 8003604:	3714      	adds	r7, #20
 8003606:	46bd      	mov	sp, r7
 8003608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800360c:	4770      	bx	lr
 800360e:	bf00      	nop

08003610 <HAL_GPIO_Init>:
 8003610:	b480      	push	{r7}
 8003612:	b089      	sub	sp, #36	; 0x24
 8003614:	af00      	add	r7, sp, #0
 8003616:	6078      	str	r0, [r7, #4]
 8003618:	6039      	str	r1, [r7, #0]
 800361a:	2300      	movs	r3, #0
 800361c:	617b      	str	r3, [r7, #20]
 800361e:	2300      	movs	r3, #0
 8003620:	613b      	str	r3, [r7, #16]
 8003622:	2300      	movs	r3, #0
 8003624:	61bb      	str	r3, [r7, #24]
 8003626:	2300      	movs	r3, #0
 8003628:	61fb      	str	r3, [r7, #28]
 800362a:	e159      	b.n	80038e0 <HAL_GPIO_Init+0x2d0>
 800362c:	2201      	movs	r2, #1
 800362e:	69fb      	ldr	r3, [r7, #28]
 8003630:	fa02 f303 	lsl.w	r3, r2, r3
 8003634:	617b      	str	r3, [r7, #20]
 8003636:	683b      	ldr	r3, [r7, #0]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	697a      	ldr	r2, [r7, #20]
 800363c:	4013      	ands	r3, r2
 800363e:	613b      	str	r3, [r7, #16]
 8003640:	693a      	ldr	r2, [r7, #16]
 8003642:	697b      	ldr	r3, [r7, #20]
 8003644:	429a      	cmp	r2, r3
 8003646:	f040 8148 	bne.w	80038da <HAL_GPIO_Init+0x2ca>
 800364a:	683b      	ldr	r3, [r7, #0]
 800364c:	685b      	ldr	r3, [r3, #4]
 800364e:	f003 0303 	and.w	r3, r3, #3
 8003652:	2b01      	cmp	r3, #1
 8003654:	d005      	beq.n	8003662 <HAL_GPIO_Init+0x52>
 8003656:	683b      	ldr	r3, [r7, #0]
 8003658:	685b      	ldr	r3, [r3, #4]
 800365a:	f003 0303 	and.w	r3, r3, #3
 800365e:	2b02      	cmp	r3, #2
 8003660:	d130      	bne.n	80036c4 <HAL_GPIO_Init+0xb4>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	689b      	ldr	r3, [r3, #8]
 8003666:	61bb      	str	r3, [r7, #24]
 8003668:	69fb      	ldr	r3, [r7, #28]
 800366a:	005b      	lsls	r3, r3, #1
 800366c:	2203      	movs	r2, #3
 800366e:	fa02 f303 	lsl.w	r3, r2, r3
 8003672:	43db      	mvns	r3, r3
 8003674:	69ba      	ldr	r2, [r7, #24]
 8003676:	4013      	ands	r3, r2
 8003678:	61bb      	str	r3, [r7, #24]
 800367a:	683b      	ldr	r3, [r7, #0]
 800367c:	68da      	ldr	r2, [r3, #12]
 800367e:	69fb      	ldr	r3, [r7, #28]
 8003680:	005b      	lsls	r3, r3, #1
 8003682:	fa02 f303 	lsl.w	r3, r2, r3
 8003686:	69ba      	ldr	r2, [r7, #24]
 8003688:	4313      	orrs	r3, r2
 800368a:	61bb      	str	r3, [r7, #24]
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	69ba      	ldr	r2, [r7, #24]
 8003690:	609a      	str	r2, [r3, #8]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	685b      	ldr	r3, [r3, #4]
 8003696:	61bb      	str	r3, [r7, #24]
 8003698:	2201      	movs	r2, #1
 800369a:	69fb      	ldr	r3, [r7, #28]
 800369c:	fa02 f303 	lsl.w	r3, r2, r3
 80036a0:	43db      	mvns	r3, r3
 80036a2:	69ba      	ldr	r2, [r7, #24]
 80036a4:	4013      	ands	r3, r2
 80036a6:	61bb      	str	r3, [r7, #24]
 80036a8:	683b      	ldr	r3, [r7, #0]
 80036aa:	685b      	ldr	r3, [r3, #4]
 80036ac:	091b      	lsrs	r3, r3, #4
 80036ae:	f003 0201 	and.w	r2, r3, #1
 80036b2:	69fb      	ldr	r3, [r7, #28]
 80036b4:	fa02 f303 	lsl.w	r3, r2, r3
 80036b8:	69ba      	ldr	r2, [r7, #24]
 80036ba:	4313      	orrs	r3, r2
 80036bc:	61bb      	str	r3, [r7, #24]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	69ba      	ldr	r2, [r7, #24]
 80036c2:	605a      	str	r2, [r3, #4]
 80036c4:	683b      	ldr	r3, [r7, #0]
 80036c6:	685b      	ldr	r3, [r3, #4]
 80036c8:	f003 0303 	and.w	r3, r3, #3
 80036cc:	2b03      	cmp	r3, #3
 80036ce:	d017      	beq.n	8003700 <HAL_GPIO_Init+0xf0>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	68db      	ldr	r3, [r3, #12]
 80036d4:	61bb      	str	r3, [r7, #24]
 80036d6:	69fb      	ldr	r3, [r7, #28]
 80036d8:	005b      	lsls	r3, r3, #1
 80036da:	2203      	movs	r2, #3
 80036dc:	fa02 f303 	lsl.w	r3, r2, r3
 80036e0:	43db      	mvns	r3, r3
 80036e2:	69ba      	ldr	r2, [r7, #24]
 80036e4:	4013      	ands	r3, r2
 80036e6:	61bb      	str	r3, [r7, #24]
 80036e8:	683b      	ldr	r3, [r7, #0]
 80036ea:	689a      	ldr	r2, [r3, #8]
 80036ec:	69fb      	ldr	r3, [r7, #28]
 80036ee:	005b      	lsls	r3, r3, #1
 80036f0:	fa02 f303 	lsl.w	r3, r2, r3
 80036f4:	69ba      	ldr	r2, [r7, #24]
 80036f6:	4313      	orrs	r3, r2
 80036f8:	61bb      	str	r3, [r7, #24]
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	69ba      	ldr	r2, [r7, #24]
 80036fe:	60da      	str	r2, [r3, #12]
 8003700:	683b      	ldr	r3, [r7, #0]
 8003702:	685b      	ldr	r3, [r3, #4]
 8003704:	f003 0303 	and.w	r3, r3, #3
 8003708:	2b02      	cmp	r3, #2
 800370a:	d123      	bne.n	8003754 <HAL_GPIO_Init+0x144>
 800370c:	69fb      	ldr	r3, [r7, #28]
 800370e:	08da      	lsrs	r2, r3, #3
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	3208      	adds	r2, #8
 8003714:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003718:	61bb      	str	r3, [r7, #24]
 800371a:	69fb      	ldr	r3, [r7, #28]
 800371c:	f003 0307 	and.w	r3, r3, #7
 8003720:	009b      	lsls	r3, r3, #2
 8003722:	220f      	movs	r2, #15
 8003724:	fa02 f303 	lsl.w	r3, r2, r3
 8003728:	43db      	mvns	r3, r3
 800372a:	69ba      	ldr	r2, [r7, #24]
 800372c:	4013      	ands	r3, r2
 800372e:	61bb      	str	r3, [r7, #24]
 8003730:	683b      	ldr	r3, [r7, #0]
 8003732:	691a      	ldr	r2, [r3, #16]
 8003734:	69fb      	ldr	r3, [r7, #28]
 8003736:	f003 0307 	and.w	r3, r3, #7
 800373a:	009b      	lsls	r3, r3, #2
 800373c:	fa02 f303 	lsl.w	r3, r2, r3
 8003740:	69ba      	ldr	r2, [r7, #24]
 8003742:	4313      	orrs	r3, r2
 8003744:	61bb      	str	r3, [r7, #24]
 8003746:	69fb      	ldr	r3, [r7, #28]
 8003748:	08da      	lsrs	r2, r3, #3
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	3208      	adds	r2, #8
 800374e:	69b9      	ldr	r1, [r7, #24]
 8003750:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	61bb      	str	r3, [r7, #24]
 800375a:	69fb      	ldr	r3, [r7, #28]
 800375c:	005b      	lsls	r3, r3, #1
 800375e:	2203      	movs	r2, #3
 8003760:	fa02 f303 	lsl.w	r3, r2, r3
 8003764:	43db      	mvns	r3, r3
 8003766:	69ba      	ldr	r2, [r7, #24]
 8003768:	4013      	ands	r3, r2
 800376a:	61bb      	str	r3, [r7, #24]
 800376c:	683b      	ldr	r3, [r7, #0]
 800376e:	685b      	ldr	r3, [r3, #4]
 8003770:	f003 0203 	and.w	r2, r3, #3
 8003774:	69fb      	ldr	r3, [r7, #28]
 8003776:	005b      	lsls	r3, r3, #1
 8003778:	fa02 f303 	lsl.w	r3, r2, r3
 800377c:	69ba      	ldr	r2, [r7, #24]
 800377e:	4313      	orrs	r3, r2
 8003780:	61bb      	str	r3, [r7, #24]
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	69ba      	ldr	r2, [r7, #24]
 8003786:	601a      	str	r2, [r3, #0]
 8003788:	683b      	ldr	r3, [r7, #0]
 800378a:	685b      	ldr	r3, [r3, #4]
 800378c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003790:	2b00      	cmp	r3, #0
 8003792:	f000 80a2 	beq.w	80038da <HAL_GPIO_Init+0x2ca>
 8003796:	2300      	movs	r3, #0
 8003798:	60fb      	str	r3, [r7, #12]
 800379a:	4b57      	ldr	r3, [pc, #348]	; (80038f8 <HAL_GPIO_Init+0x2e8>)
 800379c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800379e:	4a56      	ldr	r2, [pc, #344]	; (80038f8 <HAL_GPIO_Init+0x2e8>)
 80037a0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80037a4:	6453      	str	r3, [r2, #68]	; 0x44
 80037a6:	4b54      	ldr	r3, [pc, #336]	; (80038f8 <HAL_GPIO_Init+0x2e8>)
 80037a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80037aa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80037ae:	60fb      	str	r3, [r7, #12]
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	4a52      	ldr	r2, [pc, #328]	; (80038fc <HAL_GPIO_Init+0x2ec>)
 80037b4:	69fb      	ldr	r3, [r7, #28]
 80037b6:	089b      	lsrs	r3, r3, #2
 80037b8:	3302      	adds	r3, #2
 80037ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037be:	61bb      	str	r3, [r7, #24]
 80037c0:	69fb      	ldr	r3, [r7, #28]
 80037c2:	f003 0303 	and.w	r3, r3, #3
 80037c6:	009b      	lsls	r3, r3, #2
 80037c8:	220f      	movs	r2, #15
 80037ca:	fa02 f303 	lsl.w	r3, r2, r3
 80037ce:	43db      	mvns	r3, r3
 80037d0:	69ba      	ldr	r2, [r7, #24]
 80037d2:	4013      	ands	r3, r2
 80037d4:	61bb      	str	r3, [r7, #24]
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	4a49      	ldr	r2, [pc, #292]	; (8003900 <HAL_GPIO_Init+0x2f0>)
 80037da:	4293      	cmp	r3, r2
 80037dc:	d019      	beq.n	8003812 <HAL_GPIO_Init+0x202>
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	4a48      	ldr	r2, [pc, #288]	; (8003904 <HAL_GPIO_Init+0x2f4>)
 80037e2:	4293      	cmp	r3, r2
 80037e4:	d013      	beq.n	800380e <HAL_GPIO_Init+0x1fe>
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	4a47      	ldr	r2, [pc, #284]	; (8003908 <HAL_GPIO_Init+0x2f8>)
 80037ea:	4293      	cmp	r3, r2
 80037ec:	d00d      	beq.n	800380a <HAL_GPIO_Init+0x1fa>
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	4a46      	ldr	r2, [pc, #280]	; (800390c <HAL_GPIO_Init+0x2fc>)
 80037f2:	4293      	cmp	r3, r2
 80037f4:	d007      	beq.n	8003806 <HAL_GPIO_Init+0x1f6>
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	4a45      	ldr	r2, [pc, #276]	; (8003910 <HAL_GPIO_Init+0x300>)
 80037fa:	4293      	cmp	r3, r2
 80037fc:	d101      	bne.n	8003802 <HAL_GPIO_Init+0x1f2>
 80037fe:	2304      	movs	r3, #4
 8003800:	e008      	b.n	8003814 <HAL_GPIO_Init+0x204>
 8003802:	2307      	movs	r3, #7
 8003804:	e006      	b.n	8003814 <HAL_GPIO_Init+0x204>
 8003806:	2303      	movs	r3, #3
 8003808:	e004      	b.n	8003814 <HAL_GPIO_Init+0x204>
 800380a:	2302      	movs	r3, #2
 800380c:	e002      	b.n	8003814 <HAL_GPIO_Init+0x204>
 800380e:	2301      	movs	r3, #1
 8003810:	e000      	b.n	8003814 <HAL_GPIO_Init+0x204>
 8003812:	2300      	movs	r3, #0
 8003814:	69fa      	ldr	r2, [r7, #28]
 8003816:	f002 0203 	and.w	r2, r2, #3
 800381a:	0092      	lsls	r2, r2, #2
 800381c:	4093      	lsls	r3, r2
 800381e:	69ba      	ldr	r2, [r7, #24]
 8003820:	4313      	orrs	r3, r2
 8003822:	61bb      	str	r3, [r7, #24]
 8003824:	4935      	ldr	r1, [pc, #212]	; (80038fc <HAL_GPIO_Init+0x2ec>)
 8003826:	69fb      	ldr	r3, [r7, #28]
 8003828:	089b      	lsrs	r3, r3, #2
 800382a:	3302      	adds	r3, #2
 800382c:	69ba      	ldr	r2, [r7, #24]
 800382e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003832:	4b38      	ldr	r3, [pc, #224]	; (8003914 <HAL_GPIO_Init+0x304>)
 8003834:	689b      	ldr	r3, [r3, #8]
 8003836:	61bb      	str	r3, [r7, #24]
 8003838:	693b      	ldr	r3, [r7, #16]
 800383a:	43db      	mvns	r3, r3
 800383c:	69ba      	ldr	r2, [r7, #24]
 800383e:	4013      	ands	r3, r2
 8003840:	61bb      	str	r3, [r7, #24]
 8003842:	683b      	ldr	r3, [r7, #0]
 8003844:	685b      	ldr	r3, [r3, #4]
 8003846:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800384a:	2b00      	cmp	r3, #0
 800384c:	d003      	beq.n	8003856 <HAL_GPIO_Init+0x246>
 800384e:	69ba      	ldr	r2, [r7, #24]
 8003850:	693b      	ldr	r3, [r7, #16]
 8003852:	4313      	orrs	r3, r2
 8003854:	61bb      	str	r3, [r7, #24]
 8003856:	4a2f      	ldr	r2, [pc, #188]	; (8003914 <HAL_GPIO_Init+0x304>)
 8003858:	69bb      	ldr	r3, [r7, #24]
 800385a:	6093      	str	r3, [r2, #8]
 800385c:	4b2d      	ldr	r3, [pc, #180]	; (8003914 <HAL_GPIO_Init+0x304>)
 800385e:	68db      	ldr	r3, [r3, #12]
 8003860:	61bb      	str	r3, [r7, #24]
 8003862:	693b      	ldr	r3, [r7, #16]
 8003864:	43db      	mvns	r3, r3
 8003866:	69ba      	ldr	r2, [r7, #24]
 8003868:	4013      	ands	r3, r2
 800386a:	61bb      	str	r3, [r7, #24]
 800386c:	683b      	ldr	r3, [r7, #0]
 800386e:	685b      	ldr	r3, [r3, #4]
 8003870:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003874:	2b00      	cmp	r3, #0
 8003876:	d003      	beq.n	8003880 <HAL_GPIO_Init+0x270>
 8003878:	69ba      	ldr	r2, [r7, #24]
 800387a:	693b      	ldr	r3, [r7, #16]
 800387c:	4313      	orrs	r3, r2
 800387e:	61bb      	str	r3, [r7, #24]
 8003880:	4a24      	ldr	r2, [pc, #144]	; (8003914 <HAL_GPIO_Init+0x304>)
 8003882:	69bb      	ldr	r3, [r7, #24]
 8003884:	60d3      	str	r3, [r2, #12]
 8003886:	4b23      	ldr	r3, [pc, #140]	; (8003914 <HAL_GPIO_Init+0x304>)
 8003888:	685b      	ldr	r3, [r3, #4]
 800388a:	61bb      	str	r3, [r7, #24]
 800388c:	693b      	ldr	r3, [r7, #16]
 800388e:	43db      	mvns	r3, r3
 8003890:	69ba      	ldr	r2, [r7, #24]
 8003892:	4013      	ands	r3, r2
 8003894:	61bb      	str	r3, [r7, #24]
 8003896:	683b      	ldr	r3, [r7, #0]
 8003898:	685b      	ldr	r3, [r3, #4]
 800389a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800389e:	2b00      	cmp	r3, #0
 80038a0:	d003      	beq.n	80038aa <HAL_GPIO_Init+0x29a>
 80038a2:	69ba      	ldr	r2, [r7, #24]
 80038a4:	693b      	ldr	r3, [r7, #16]
 80038a6:	4313      	orrs	r3, r2
 80038a8:	61bb      	str	r3, [r7, #24]
 80038aa:	4a1a      	ldr	r2, [pc, #104]	; (8003914 <HAL_GPIO_Init+0x304>)
 80038ac:	69bb      	ldr	r3, [r7, #24]
 80038ae:	6053      	str	r3, [r2, #4]
 80038b0:	4b18      	ldr	r3, [pc, #96]	; (8003914 <HAL_GPIO_Init+0x304>)
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	61bb      	str	r3, [r7, #24]
 80038b6:	693b      	ldr	r3, [r7, #16]
 80038b8:	43db      	mvns	r3, r3
 80038ba:	69ba      	ldr	r2, [r7, #24]
 80038bc:	4013      	ands	r3, r2
 80038be:	61bb      	str	r3, [r7, #24]
 80038c0:	683b      	ldr	r3, [r7, #0]
 80038c2:	685b      	ldr	r3, [r3, #4]
 80038c4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d003      	beq.n	80038d4 <HAL_GPIO_Init+0x2c4>
 80038cc:	69ba      	ldr	r2, [r7, #24]
 80038ce:	693b      	ldr	r3, [r7, #16]
 80038d0:	4313      	orrs	r3, r2
 80038d2:	61bb      	str	r3, [r7, #24]
 80038d4:	4a0f      	ldr	r2, [pc, #60]	; (8003914 <HAL_GPIO_Init+0x304>)
 80038d6:	69bb      	ldr	r3, [r7, #24]
 80038d8:	6013      	str	r3, [r2, #0]
 80038da:	69fb      	ldr	r3, [r7, #28]
 80038dc:	3301      	adds	r3, #1
 80038de:	61fb      	str	r3, [r7, #28]
 80038e0:	69fb      	ldr	r3, [r7, #28]
 80038e2:	2b0f      	cmp	r3, #15
 80038e4:	f67f aea2 	bls.w	800362c <HAL_GPIO_Init+0x1c>
 80038e8:	bf00      	nop
 80038ea:	bf00      	nop
 80038ec:	3724      	adds	r7, #36	; 0x24
 80038ee:	46bd      	mov	sp, r7
 80038f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f4:	4770      	bx	lr
 80038f6:	bf00      	nop
 80038f8:	40023800 	.word	0x40023800
 80038fc:	40013800 	.word	0x40013800
 8003900:	40020000 	.word	0x40020000
 8003904:	40020400 	.word	0x40020400
 8003908:	40020800 	.word	0x40020800
 800390c:	40020c00 	.word	0x40020c00
 8003910:	40021000 	.word	0x40021000
 8003914:	40013c00 	.word	0x40013c00

08003918 <HAL_GPIO_ReadPin>:
 8003918:	b480      	push	{r7}
 800391a:	b085      	sub	sp, #20
 800391c:	af00      	add	r7, sp, #0
 800391e:	6078      	str	r0, [r7, #4]
 8003920:	460b      	mov	r3, r1
 8003922:	807b      	strh	r3, [r7, #2]
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	691a      	ldr	r2, [r3, #16]
 8003928:	887b      	ldrh	r3, [r7, #2]
 800392a:	4013      	ands	r3, r2
 800392c:	2b00      	cmp	r3, #0
 800392e:	d002      	beq.n	8003936 <HAL_GPIO_ReadPin+0x1e>
 8003930:	2301      	movs	r3, #1
 8003932:	73fb      	strb	r3, [r7, #15]
 8003934:	e001      	b.n	800393a <HAL_GPIO_ReadPin+0x22>
 8003936:	2300      	movs	r3, #0
 8003938:	73fb      	strb	r3, [r7, #15]
 800393a:	7bfb      	ldrb	r3, [r7, #15]
 800393c:	4618      	mov	r0, r3
 800393e:	3714      	adds	r7, #20
 8003940:	46bd      	mov	sp, r7
 8003942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003946:	4770      	bx	lr

08003948 <HAL_GPIO_WritePin>:
 8003948:	b480      	push	{r7}
 800394a:	b083      	sub	sp, #12
 800394c:	af00      	add	r7, sp, #0
 800394e:	6078      	str	r0, [r7, #4]
 8003950:	460b      	mov	r3, r1
 8003952:	807b      	strh	r3, [r7, #2]
 8003954:	4613      	mov	r3, r2
 8003956:	707b      	strb	r3, [r7, #1]
 8003958:	787b      	ldrb	r3, [r7, #1]
 800395a:	2b00      	cmp	r3, #0
 800395c:	d003      	beq.n	8003966 <HAL_GPIO_WritePin+0x1e>
 800395e:	887a      	ldrh	r2, [r7, #2]
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	619a      	str	r2, [r3, #24]
 8003964:	e003      	b.n	800396e <HAL_GPIO_WritePin+0x26>
 8003966:	887b      	ldrh	r3, [r7, #2]
 8003968:	041a      	lsls	r2, r3, #16
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	619a      	str	r2, [r3, #24]
 800396e:	bf00      	nop
 8003970:	370c      	adds	r7, #12
 8003972:	46bd      	mov	sp, r7
 8003974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003978:	4770      	bx	lr
	...

0800397c <HAL_I2C_Init>:
 800397c:	b580      	push	{r7, lr}
 800397e:	b084      	sub	sp, #16
 8003980:	af00      	add	r7, sp, #0
 8003982:	6078      	str	r0, [r7, #4]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	2b00      	cmp	r3, #0
 8003988:	d101      	bne.n	800398e <HAL_I2C_Init+0x12>
 800398a:	2301      	movs	r3, #1
 800398c:	e12b      	b.n	8003be6 <HAL_I2C_Init+0x26a>
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003994:	b2db      	uxtb	r3, r3
 8003996:	2b00      	cmp	r3, #0
 8003998:	d106      	bne.n	80039a8 <HAL_I2C_Init+0x2c>
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	2200      	movs	r2, #0
 800399e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039a2:	6878      	ldr	r0, [r7, #4]
 80039a4:	f7fd fc2c 	bl	8001200 <HAL_I2C_MspInit>
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	2224      	movs	r2, #36	; 0x24
 80039ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	681a      	ldr	r2, [r3, #0]
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	f022 0201 	bic.w	r2, r2, #1
 80039be:	601a      	str	r2, [r3, #0]
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	681a      	ldr	r2, [r3, #0]
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80039ce:	601a      	str	r2, [r3, #0]
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	681a      	ldr	r2, [r3, #0]
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80039de:	601a      	str	r2, [r3, #0]
 80039e0:	f001 f888 	bl	8004af4 <HAL_RCC_GetPCLK1Freq>
 80039e4:	60f8      	str	r0, [r7, #12]
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	685b      	ldr	r3, [r3, #4]
 80039ea:	4a81      	ldr	r2, [pc, #516]	; (8003bf0 <HAL_I2C_Init+0x274>)
 80039ec:	4293      	cmp	r3, r2
 80039ee:	d807      	bhi.n	8003a00 <HAL_I2C_Init+0x84>
 80039f0:	68fb      	ldr	r3, [r7, #12]
 80039f2:	4a80      	ldr	r2, [pc, #512]	; (8003bf4 <HAL_I2C_Init+0x278>)
 80039f4:	4293      	cmp	r3, r2
 80039f6:	bf94      	ite	ls
 80039f8:	2301      	movls	r3, #1
 80039fa:	2300      	movhi	r3, #0
 80039fc:	b2db      	uxtb	r3, r3
 80039fe:	e006      	b.n	8003a0e <HAL_I2C_Init+0x92>
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	4a7d      	ldr	r2, [pc, #500]	; (8003bf8 <HAL_I2C_Init+0x27c>)
 8003a04:	4293      	cmp	r3, r2
 8003a06:	bf94      	ite	ls
 8003a08:	2301      	movls	r3, #1
 8003a0a:	2300      	movhi	r3, #0
 8003a0c:	b2db      	uxtb	r3, r3
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d001      	beq.n	8003a16 <HAL_I2C_Init+0x9a>
 8003a12:	2301      	movs	r3, #1
 8003a14:	e0e7      	b.n	8003be6 <HAL_I2C_Init+0x26a>
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	4a78      	ldr	r2, [pc, #480]	; (8003bfc <HAL_I2C_Init+0x280>)
 8003a1a:	fba2 2303 	umull	r2, r3, r2, r3
 8003a1e:	0c9b      	lsrs	r3, r3, #18
 8003a20:	60bb      	str	r3, [r7, #8]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	685b      	ldr	r3, [r3, #4]
 8003a28:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	68ba      	ldr	r2, [r7, #8]
 8003a32:	430a      	orrs	r2, r1
 8003a34:	605a      	str	r2, [r3, #4]
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	6a1b      	ldr	r3, [r3, #32]
 8003a3c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	685b      	ldr	r3, [r3, #4]
 8003a44:	4a6a      	ldr	r2, [pc, #424]	; (8003bf0 <HAL_I2C_Init+0x274>)
 8003a46:	4293      	cmp	r3, r2
 8003a48:	d802      	bhi.n	8003a50 <HAL_I2C_Init+0xd4>
 8003a4a:	68bb      	ldr	r3, [r7, #8]
 8003a4c:	3301      	adds	r3, #1
 8003a4e:	e009      	b.n	8003a64 <HAL_I2C_Init+0xe8>
 8003a50:	68bb      	ldr	r3, [r7, #8]
 8003a52:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003a56:	fb02 f303 	mul.w	r3, r2, r3
 8003a5a:	4a69      	ldr	r2, [pc, #420]	; (8003c00 <HAL_I2C_Init+0x284>)
 8003a5c:	fba2 2303 	umull	r2, r3, r2, r3
 8003a60:	099b      	lsrs	r3, r3, #6
 8003a62:	3301      	adds	r3, #1
 8003a64:	687a      	ldr	r2, [r7, #4]
 8003a66:	6812      	ldr	r2, [r2, #0]
 8003a68:	430b      	orrs	r3, r1
 8003a6a:	6213      	str	r3, [r2, #32]
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	69db      	ldr	r3, [r3, #28]
 8003a72:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8003a76:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	685b      	ldr	r3, [r3, #4]
 8003a7e:	495c      	ldr	r1, [pc, #368]	; (8003bf0 <HAL_I2C_Init+0x274>)
 8003a80:	428b      	cmp	r3, r1
 8003a82:	d819      	bhi.n	8003ab8 <HAL_I2C_Init+0x13c>
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	1e59      	subs	r1, r3, #1
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	685b      	ldr	r3, [r3, #4]
 8003a8c:	005b      	lsls	r3, r3, #1
 8003a8e:	fbb1 f3f3 	udiv	r3, r1, r3
 8003a92:	1c59      	adds	r1, r3, #1
 8003a94:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003a98:	400b      	ands	r3, r1
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d00a      	beq.n	8003ab4 <HAL_I2C_Init+0x138>
 8003a9e:	68fb      	ldr	r3, [r7, #12]
 8003aa0:	1e59      	subs	r1, r3, #1
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	685b      	ldr	r3, [r3, #4]
 8003aa6:	005b      	lsls	r3, r3, #1
 8003aa8:	fbb1 f3f3 	udiv	r3, r1, r3
 8003aac:	3301      	adds	r3, #1
 8003aae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003ab2:	e051      	b.n	8003b58 <HAL_I2C_Init+0x1dc>
 8003ab4:	2304      	movs	r3, #4
 8003ab6:	e04f      	b.n	8003b58 <HAL_I2C_Init+0x1dc>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	689b      	ldr	r3, [r3, #8]
 8003abc:	2b00      	cmp	r3, #0
 8003abe:	d111      	bne.n	8003ae4 <HAL_I2C_Init+0x168>
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	1e58      	subs	r0, r3, #1
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	6859      	ldr	r1, [r3, #4]
 8003ac8:	460b      	mov	r3, r1
 8003aca:	005b      	lsls	r3, r3, #1
 8003acc:	440b      	add	r3, r1
 8003ace:	fbb0 f3f3 	udiv	r3, r0, r3
 8003ad2:	3301      	adds	r3, #1
 8003ad4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003ad8:	2b00      	cmp	r3, #0
 8003ada:	bf0c      	ite	eq
 8003adc:	2301      	moveq	r3, #1
 8003ade:	2300      	movne	r3, #0
 8003ae0:	b2db      	uxtb	r3, r3
 8003ae2:	e012      	b.n	8003b0a <HAL_I2C_Init+0x18e>
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	1e58      	subs	r0, r3, #1
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	6859      	ldr	r1, [r3, #4]
 8003aec:	460b      	mov	r3, r1
 8003aee:	009b      	lsls	r3, r3, #2
 8003af0:	440b      	add	r3, r1
 8003af2:	0099      	lsls	r1, r3, #2
 8003af4:	440b      	add	r3, r1
 8003af6:	fbb0 f3f3 	udiv	r3, r0, r3
 8003afa:	3301      	adds	r3, #1
 8003afc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	bf0c      	ite	eq
 8003b04:	2301      	moveq	r3, #1
 8003b06:	2300      	movne	r3, #0
 8003b08:	b2db      	uxtb	r3, r3
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d001      	beq.n	8003b12 <HAL_I2C_Init+0x196>
 8003b0e:	2301      	movs	r3, #1
 8003b10:	e022      	b.n	8003b58 <HAL_I2C_Init+0x1dc>
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	689b      	ldr	r3, [r3, #8]
 8003b16:	2b00      	cmp	r3, #0
 8003b18:	d10e      	bne.n	8003b38 <HAL_I2C_Init+0x1bc>
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	1e58      	subs	r0, r3, #1
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	6859      	ldr	r1, [r3, #4]
 8003b22:	460b      	mov	r3, r1
 8003b24:	005b      	lsls	r3, r3, #1
 8003b26:	440b      	add	r3, r1
 8003b28:	fbb0 f3f3 	udiv	r3, r0, r3
 8003b2c:	3301      	adds	r3, #1
 8003b2e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003b32:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003b36:	e00f      	b.n	8003b58 <HAL_I2C_Init+0x1dc>
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	1e58      	subs	r0, r3, #1
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	6859      	ldr	r1, [r3, #4]
 8003b40:	460b      	mov	r3, r1
 8003b42:	009b      	lsls	r3, r3, #2
 8003b44:	440b      	add	r3, r1
 8003b46:	0099      	lsls	r1, r3, #2
 8003b48:	440b      	add	r3, r1
 8003b4a:	fbb0 f3f3 	udiv	r3, r0, r3
 8003b4e:	3301      	adds	r3, #1
 8003b50:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003b54:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003b58:	6879      	ldr	r1, [r7, #4]
 8003b5a:	6809      	ldr	r1, [r1, #0]
 8003b5c:	4313      	orrs	r3, r2
 8003b5e:	61cb      	str	r3, [r1, #28]
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	69da      	ldr	r2, [r3, #28]
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	6a1b      	ldr	r3, [r3, #32]
 8003b72:	431a      	orrs	r2, r3
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	430a      	orrs	r2, r1
 8003b7a:	601a      	str	r2, [r3, #0]
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	689b      	ldr	r3, [r3, #8]
 8003b82:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8003b86:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003b8a:	687a      	ldr	r2, [r7, #4]
 8003b8c:	6911      	ldr	r1, [r2, #16]
 8003b8e:	687a      	ldr	r2, [r7, #4]
 8003b90:	68d2      	ldr	r2, [r2, #12]
 8003b92:	4311      	orrs	r1, r2
 8003b94:	687a      	ldr	r2, [r7, #4]
 8003b96:	6812      	ldr	r2, [r2, #0]
 8003b98:	430b      	orrs	r3, r1
 8003b9a:	6093      	str	r3, [r2, #8]
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	68db      	ldr	r3, [r3, #12]
 8003ba2:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	695a      	ldr	r2, [r3, #20]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	699b      	ldr	r3, [r3, #24]
 8003bae:	431a      	orrs	r2, r3
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	430a      	orrs	r2, r1
 8003bb6:	60da      	str	r2, [r3, #12]
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	681a      	ldr	r2, [r3, #0]
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	f042 0201 	orr.w	r2, r2, #1
 8003bc6:	601a      	str	r2, [r3, #0]
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	2200      	movs	r2, #0
 8003bcc:	641a      	str	r2, [r3, #64]	; 0x40
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	2220      	movs	r2, #32
 8003bd2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	2200      	movs	r2, #0
 8003bda:	631a      	str	r2, [r3, #48]	; 0x30
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	2200      	movs	r2, #0
 8003be0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003be4:	2300      	movs	r3, #0
 8003be6:	4618      	mov	r0, r3
 8003be8:	3710      	adds	r7, #16
 8003bea:	46bd      	mov	sp, r7
 8003bec:	bd80      	pop	{r7, pc}
 8003bee:	bf00      	nop
 8003bf0:	000186a0 	.word	0x000186a0
 8003bf4:	001e847f 	.word	0x001e847f
 8003bf8:	003d08ff 	.word	0x003d08ff
 8003bfc:	431bde83 	.word	0x431bde83
 8003c00:	10624dd3 	.word	0x10624dd3

08003c04 <HAL_I2C_Master_Transmit>:
 8003c04:	b580      	push	{r7, lr}
 8003c06:	b088      	sub	sp, #32
 8003c08:	af02      	add	r7, sp, #8
 8003c0a:	60f8      	str	r0, [r7, #12]
 8003c0c:	607a      	str	r2, [r7, #4]
 8003c0e:	461a      	mov	r2, r3
 8003c10:	460b      	mov	r3, r1
 8003c12:	817b      	strh	r3, [r7, #10]
 8003c14:	4613      	mov	r3, r2
 8003c16:	813b      	strh	r3, [r7, #8]
 8003c18:	f7ff f87a 	bl	8002d10 <HAL_GetTick>
 8003c1c:	6178      	str	r0, [r7, #20]
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003c24:	b2db      	uxtb	r3, r3
 8003c26:	2b20      	cmp	r3, #32
 8003c28:	f040 80e0 	bne.w	8003dec <HAL_I2C_Master_Transmit+0x1e8>
 8003c2c:	697b      	ldr	r3, [r7, #20]
 8003c2e:	9300      	str	r3, [sp, #0]
 8003c30:	2319      	movs	r3, #25
 8003c32:	2201      	movs	r2, #1
 8003c34:	4970      	ldr	r1, [pc, #448]	; (8003df8 <HAL_I2C_Master_Transmit+0x1f4>)
 8003c36:	68f8      	ldr	r0, [r7, #12]
 8003c38:	f000 f964 	bl	8003f04 <I2C_WaitOnFlagUntilTimeout>
 8003c3c:	4603      	mov	r3, r0
 8003c3e:	2b00      	cmp	r3, #0
 8003c40:	d001      	beq.n	8003c46 <HAL_I2C_Master_Transmit+0x42>
 8003c42:	2302      	movs	r3, #2
 8003c44:	e0d3      	b.n	8003dee <HAL_I2C_Master_Transmit+0x1ea>
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003c4c:	2b01      	cmp	r3, #1
 8003c4e:	d101      	bne.n	8003c54 <HAL_I2C_Master_Transmit+0x50>
 8003c50:	2302      	movs	r3, #2
 8003c52:	e0cc      	b.n	8003dee <HAL_I2C_Master_Transmit+0x1ea>
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	2201      	movs	r2, #1
 8003c58:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	f003 0301 	and.w	r3, r3, #1
 8003c66:	2b01      	cmp	r3, #1
 8003c68:	d007      	beq.n	8003c7a <HAL_I2C_Master_Transmit+0x76>
 8003c6a:	68fb      	ldr	r3, [r7, #12]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	681a      	ldr	r2, [r3, #0]
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	f042 0201 	orr.w	r2, r2, #1
 8003c78:	601a      	str	r2, [r3, #0]
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	681a      	ldr	r2, [r3, #0]
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003c88:	601a      	str	r2, [r3, #0]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	2221      	movs	r2, #33	; 0x21
 8003c8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003c92:	68fb      	ldr	r3, [r7, #12]
 8003c94:	2210      	movs	r2, #16
 8003c96:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	2200      	movs	r2, #0
 8003c9e:	641a      	str	r2, [r3, #64]	; 0x40
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	687a      	ldr	r2, [r7, #4]
 8003ca4:	625a      	str	r2, [r3, #36]	; 0x24
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	893a      	ldrh	r2, [r7, #8]
 8003caa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003cb0:	b29a      	uxth	r2, r3
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	851a      	strh	r2, [r3, #40]	; 0x28
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	4a50      	ldr	r2, [pc, #320]	; (8003dfc <HAL_I2C_Master_Transmit+0x1f8>)
 8003cba:	62da      	str	r2, [r3, #44]	; 0x2c
 8003cbc:	8979      	ldrh	r1, [r7, #10]
 8003cbe:	697b      	ldr	r3, [r7, #20]
 8003cc0:	6a3a      	ldr	r2, [r7, #32]
 8003cc2:	68f8      	ldr	r0, [r7, #12]
 8003cc4:	f000 f89c 	bl	8003e00 <I2C_MasterRequestWrite>
 8003cc8:	4603      	mov	r3, r0
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d001      	beq.n	8003cd2 <HAL_I2C_Master_Transmit+0xce>
 8003cce:	2301      	movs	r3, #1
 8003cd0:	e08d      	b.n	8003dee <HAL_I2C_Master_Transmit+0x1ea>
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	613b      	str	r3, [r7, #16]
 8003cd6:	68fb      	ldr	r3, [r7, #12]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	695b      	ldr	r3, [r3, #20]
 8003cdc:	613b      	str	r3, [r7, #16]
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	699b      	ldr	r3, [r3, #24]
 8003ce4:	613b      	str	r3, [r7, #16]
 8003ce6:	693b      	ldr	r3, [r7, #16]
 8003ce8:	e066      	b.n	8003db8 <HAL_I2C_Master_Transmit+0x1b4>
 8003cea:	697a      	ldr	r2, [r7, #20]
 8003cec:	6a39      	ldr	r1, [r7, #32]
 8003cee:	68f8      	ldr	r0, [r7, #12]
 8003cf0:	f000 f9de 	bl	80040b0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003cf4:	4603      	mov	r3, r0
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d00d      	beq.n	8003d16 <HAL_I2C_Master_Transmit+0x112>
 8003cfa:	68fb      	ldr	r3, [r7, #12]
 8003cfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cfe:	2b04      	cmp	r3, #4
 8003d00:	d107      	bne.n	8003d12 <HAL_I2C_Master_Transmit+0x10e>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	681a      	ldr	r2, [r3, #0]
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	681b      	ldr	r3, [r3, #0]
 8003d0c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003d10:	601a      	str	r2, [r3, #0]
 8003d12:	2301      	movs	r3, #1
 8003d14:	e06b      	b.n	8003dee <HAL_I2C_Master_Transmit+0x1ea>
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d1a:	781a      	ldrb	r2, [r3, #0]
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	611a      	str	r2, [r3, #16]
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d26:	1c5a      	adds	r2, r3, #1
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	625a      	str	r2, [r3, #36]	; 0x24
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d30:	b29b      	uxth	r3, r3
 8003d32:	3b01      	subs	r3, #1
 8003d34:	b29a      	uxth	r2, r3
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d3e:	3b01      	subs	r3, #1
 8003d40:	b29a      	uxth	r2, r3
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	851a      	strh	r2, [r3, #40]	; 0x28
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	695b      	ldr	r3, [r3, #20]
 8003d4c:	f003 0304 	and.w	r3, r3, #4
 8003d50:	2b04      	cmp	r3, #4
 8003d52:	d11b      	bne.n	8003d8c <HAL_I2C_Master_Transmit+0x188>
 8003d54:	68fb      	ldr	r3, [r7, #12]
 8003d56:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d017      	beq.n	8003d8c <HAL_I2C_Master_Transmit+0x188>
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d60:	781a      	ldrb	r2, [r3, #0]
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	611a      	str	r2, [r3, #16]
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d6c:	1c5a      	adds	r2, r3, #1
 8003d6e:	68fb      	ldr	r3, [r7, #12]
 8003d70:	625a      	str	r2, [r3, #36]	; 0x24
 8003d72:	68fb      	ldr	r3, [r7, #12]
 8003d74:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d76:	b29b      	uxth	r3, r3
 8003d78:	3b01      	subs	r3, #1
 8003d7a:	b29a      	uxth	r2, r3
 8003d7c:	68fb      	ldr	r3, [r7, #12]
 8003d7e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d84:	3b01      	subs	r3, #1
 8003d86:	b29a      	uxth	r2, r3
 8003d88:	68fb      	ldr	r3, [r7, #12]
 8003d8a:	851a      	strh	r2, [r3, #40]	; 0x28
 8003d8c:	697a      	ldr	r2, [r7, #20]
 8003d8e:	6a39      	ldr	r1, [r7, #32]
 8003d90:	68f8      	ldr	r0, [r7, #12]
 8003d92:	f000 f9ce 	bl	8004132 <I2C_WaitOnBTFFlagUntilTimeout>
 8003d96:	4603      	mov	r3, r0
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d00d      	beq.n	8003db8 <HAL_I2C_Master_Transmit+0x1b4>
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003da0:	2b04      	cmp	r3, #4
 8003da2:	d107      	bne.n	8003db4 <HAL_I2C_Master_Transmit+0x1b0>
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	681a      	ldr	r2, [r3, #0]
 8003daa:	68fb      	ldr	r3, [r7, #12]
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003db2:	601a      	str	r2, [r3, #0]
 8003db4:	2301      	movs	r3, #1
 8003db6:	e01a      	b.n	8003dee <HAL_I2C_Master_Transmit+0x1ea>
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d194      	bne.n	8003cea <HAL_I2C_Master_Transmit+0xe6>
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	681a      	ldr	r2, [r3, #0]
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003dce:	601a      	str	r2, [r3, #0]
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	2220      	movs	r2, #32
 8003dd4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003dd8:	68fb      	ldr	r3, [r7, #12]
 8003dda:	2200      	movs	r2, #0
 8003ddc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003de0:	68fb      	ldr	r3, [r7, #12]
 8003de2:	2200      	movs	r2, #0
 8003de4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003de8:	2300      	movs	r3, #0
 8003dea:	e000      	b.n	8003dee <HAL_I2C_Master_Transmit+0x1ea>
 8003dec:	2302      	movs	r3, #2
 8003dee:	4618      	mov	r0, r3
 8003df0:	3718      	adds	r7, #24
 8003df2:	46bd      	mov	sp, r7
 8003df4:	bd80      	pop	{r7, pc}
 8003df6:	bf00      	nop
 8003df8:	00100002 	.word	0x00100002
 8003dfc:	ffff0000 	.word	0xffff0000

08003e00 <I2C_MasterRequestWrite>:
 8003e00:	b580      	push	{r7, lr}
 8003e02:	b088      	sub	sp, #32
 8003e04:	af02      	add	r7, sp, #8
 8003e06:	60f8      	str	r0, [r7, #12]
 8003e08:	607a      	str	r2, [r7, #4]
 8003e0a:	603b      	str	r3, [r7, #0]
 8003e0c:	460b      	mov	r3, r1
 8003e0e:	817b      	strh	r3, [r7, #10]
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e14:	617b      	str	r3, [r7, #20]
 8003e16:	697b      	ldr	r3, [r7, #20]
 8003e18:	2b08      	cmp	r3, #8
 8003e1a:	d006      	beq.n	8003e2a <I2C_MasterRequestWrite+0x2a>
 8003e1c:	697b      	ldr	r3, [r7, #20]
 8003e1e:	2b01      	cmp	r3, #1
 8003e20:	d003      	beq.n	8003e2a <I2C_MasterRequestWrite+0x2a>
 8003e22:	697b      	ldr	r3, [r7, #20]
 8003e24:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8003e28:	d108      	bne.n	8003e3c <I2C_MasterRequestWrite+0x3c>
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	681a      	ldr	r2, [r3, #0]
 8003e30:	68fb      	ldr	r3, [r7, #12]
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003e38:	601a      	str	r2, [r3, #0]
 8003e3a:	e00b      	b.n	8003e54 <I2C_MasterRequestWrite+0x54>
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e40:	2b12      	cmp	r3, #18
 8003e42:	d107      	bne.n	8003e54 <I2C_MasterRequestWrite+0x54>
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	681a      	ldr	r2, [r3, #0]
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003e52:	601a      	str	r2, [r3, #0]
 8003e54:	683b      	ldr	r3, [r7, #0]
 8003e56:	9300      	str	r3, [sp, #0]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	2200      	movs	r2, #0
 8003e5c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003e60:	68f8      	ldr	r0, [r7, #12]
 8003e62:	f000 f84f 	bl	8003f04 <I2C_WaitOnFlagUntilTimeout>
 8003e66:	4603      	mov	r3, r0
 8003e68:	2b00      	cmp	r3, #0
 8003e6a:	d00d      	beq.n	8003e88 <I2C_MasterRequestWrite+0x88>
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	681b      	ldr	r3, [r3, #0]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003e76:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003e7a:	d103      	bne.n	8003e84 <I2C_MasterRequestWrite+0x84>
 8003e7c:	68fb      	ldr	r3, [r7, #12]
 8003e7e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003e82:	641a      	str	r2, [r3, #64]	; 0x40
 8003e84:	2303      	movs	r3, #3
 8003e86:	e035      	b.n	8003ef4 <I2C_MasterRequestWrite+0xf4>
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	691b      	ldr	r3, [r3, #16]
 8003e8c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003e90:	d108      	bne.n	8003ea4 <I2C_MasterRequestWrite+0xa4>
 8003e92:	897b      	ldrh	r3, [r7, #10]
 8003e94:	b2db      	uxtb	r3, r3
 8003e96:	461a      	mov	r2, r3
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003ea0:	611a      	str	r2, [r3, #16]
 8003ea2:	e01b      	b.n	8003edc <I2C_MasterRequestWrite+0xdc>
 8003ea4:	897b      	ldrh	r3, [r7, #10]
 8003ea6:	11db      	asrs	r3, r3, #7
 8003ea8:	b2db      	uxtb	r3, r3
 8003eaa:	f003 0306 	and.w	r3, r3, #6
 8003eae:	b2db      	uxtb	r3, r3
 8003eb0:	f063 030f 	orn	r3, r3, #15
 8003eb4:	b2da      	uxtb	r2, r3
 8003eb6:	68fb      	ldr	r3, [r7, #12]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	611a      	str	r2, [r3, #16]
 8003ebc:	683b      	ldr	r3, [r7, #0]
 8003ebe:	687a      	ldr	r2, [r7, #4]
 8003ec0:	490e      	ldr	r1, [pc, #56]	; (8003efc <I2C_MasterRequestWrite+0xfc>)
 8003ec2:	68f8      	ldr	r0, [r7, #12]
 8003ec4:	f000 f875 	bl	8003fb2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003ec8:	4603      	mov	r3, r0
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	d001      	beq.n	8003ed2 <I2C_MasterRequestWrite+0xd2>
 8003ece:	2301      	movs	r3, #1
 8003ed0:	e010      	b.n	8003ef4 <I2C_MasterRequestWrite+0xf4>
 8003ed2:	897b      	ldrh	r3, [r7, #10]
 8003ed4:	b2da      	uxtb	r2, r3
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	681b      	ldr	r3, [r3, #0]
 8003eda:	611a      	str	r2, [r3, #16]
 8003edc:	683b      	ldr	r3, [r7, #0]
 8003ede:	687a      	ldr	r2, [r7, #4]
 8003ee0:	4907      	ldr	r1, [pc, #28]	; (8003f00 <I2C_MasterRequestWrite+0x100>)
 8003ee2:	68f8      	ldr	r0, [r7, #12]
 8003ee4:	f000 f865 	bl	8003fb2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003ee8:	4603      	mov	r3, r0
 8003eea:	2b00      	cmp	r3, #0
 8003eec:	d001      	beq.n	8003ef2 <I2C_MasterRequestWrite+0xf2>
 8003eee:	2301      	movs	r3, #1
 8003ef0:	e000      	b.n	8003ef4 <I2C_MasterRequestWrite+0xf4>
 8003ef2:	2300      	movs	r3, #0
 8003ef4:	4618      	mov	r0, r3
 8003ef6:	3718      	adds	r7, #24
 8003ef8:	46bd      	mov	sp, r7
 8003efa:	bd80      	pop	{r7, pc}
 8003efc:	00010008 	.word	0x00010008
 8003f00:	00010002 	.word	0x00010002

08003f04 <I2C_WaitOnFlagUntilTimeout>:
 8003f04:	b580      	push	{r7, lr}
 8003f06:	b084      	sub	sp, #16
 8003f08:	af00      	add	r7, sp, #0
 8003f0a:	60f8      	str	r0, [r7, #12]
 8003f0c:	60b9      	str	r1, [r7, #8]
 8003f0e:	603b      	str	r3, [r7, #0]
 8003f10:	4613      	mov	r3, r2
 8003f12:	71fb      	strb	r3, [r7, #7]
 8003f14:	e025      	b.n	8003f62 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8003f16:	683b      	ldr	r3, [r7, #0]
 8003f18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f1c:	d021      	beq.n	8003f62 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8003f1e:	f7fe fef7 	bl	8002d10 <HAL_GetTick>
 8003f22:	4602      	mov	r2, r0
 8003f24:	69bb      	ldr	r3, [r7, #24]
 8003f26:	1ad3      	subs	r3, r2, r3
 8003f28:	683a      	ldr	r2, [r7, #0]
 8003f2a:	429a      	cmp	r2, r3
 8003f2c:	d302      	bcc.n	8003f34 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003f2e:	683b      	ldr	r3, [r7, #0]
 8003f30:	2b00      	cmp	r3, #0
 8003f32:	d116      	bne.n	8003f62 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	2200      	movs	r2, #0
 8003f38:	631a      	str	r2, [r3, #48]	; 0x30
 8003f3a:	68fb      	ldr	r3, [r7, #12]
 8003f3c:	2220      	movs	r2, #32
 8003f3e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	2200      	movs	r2, #0
 8003f46:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003f4a:	68fb      	ldr	r3, [r7, #12]
 8003f4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f4e:	f043 0220 	orr.w	r2, r3, #32
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	641a      	str	r2, [r3, #64]	; 0x40
 8003f56:	68fb      	ldr	r3, [r7, #12]
 8003f58:	2200      	movs	r2, #0
 8003f5a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003f5e:	2301      	movs	r3, #1
 8003f60:	e023      	b.n	8003faa <I2C_WaitOnFlagUntilTimeout+0xa6>
 8003f62:	68bb      	ldr	r3, [r7, #8]
 8003f64:	0c1b      	lsrs	r3, r3, #16
 8003f66:	b2db      	uxtb	r3, r3
 8003f68:	2b01      	cmp	r3, #1
 8003f6a:	d10d      	bne.n	8003f88 <I2C_WaitOnFlagUntilTimeout+0x84>
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	695b      	ldr	r3, [r3, #20]
 8003f72:	43da      	mvns	r2, r3
 8003f74:	68bb      	ldr	r3, [r7, #8]
 8003f76:	4013      	ands	r3, r2
 8003f78:	b29b      	uxth	r3, r3
 8003f7a:	2b00      	cmp	r3, #0
 8003f7c:	bf0c      	ite	eq
 8003f7e:	2301      	moveq	r3, #1
 8003f80:	2300      	movne	r3, #0
 8003f82:	b2db      	uxtb	r3, r3
 8003f84:	461a      	mov	r2, r3
 8003f86:	e00c      	b.n	8003fa2 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	699b      	ldr	r3, [r3, #24]
 8003f8e:	43da      	mvns	r2, r3
 8003f90:	68bb      	ldr	r3, [r7, #8]
 8003f92:	4013      	ands	r3, r2
 8003f94:	b29b      	uxth	r3, r3
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	bf0c      	ite	eq
 8003f9a:	2301      	moveq	r3, #1
 8003f9c:	2300      	movne	r3, #0
 8003f9e:	b2db      	uxtb	r3, r3
 8003fa0:	461a      	mov	r2, r3
 8003fa2:	79fb      	ldrb	r3, [r7, #7]
 8003fa4:	429a      	cmp	r2, r3
 8003fa6:	d0b6      	beq.n	8003f16 <I2C_WaitOnFlagUntilTimeout+0x12>
 8003fa8:	2300      	movs	r3, #0
 8003faa:	4618      	mov	r0, r3
 8003fac:	3710      	adds	r7, #16
 8003fae:	46bd      	mov	sp, r7
 8003fb0:	bd80      	pop	{r7, pc}

08003fb2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003fb2:	b580      	push	{r7, lr}
 8003fb4:	b084      	sub	sp, #16
 8003fb6:	af00      	add	r7, sp, #0
 8003fb8:	60f8      	str	r0, [r7, #12]
 8003fba:	60b9      	str	r1, [r7, #8]
 8003fbc:	607a      	str	r2, [r7, #4]
 8003fbe:	603b      	str	r3, [r7, #0]
 8003fc0:	e051      	b.n	8004066 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	695b      	ldr	r3, [r3, #20]
 8003fc8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003fcc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003fd0:	d123      	bne.n	800401a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	681a      	ldr	r2, [r3, #0]
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003fe0:	601a      	str	r2, [r3, #0]
 8003fe2:	68fb      	ldr	r3, [r7, #12]
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003fea:	615a      	str	r2, [r3, #20]
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	2200      	movs	r2, #0
 8003ff0:	631a      	str	r2, [r3, #48]	; 0x30
 8003ff2:	68fb      	ldr	r3, [r7, #12]
 8003ff4:	2220      	movs	r2, #32
 8003ff6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	2200      	movs	r2, #0
 8003ffe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004002:	68fb      	ldr	r3, [r7, #12]
 8004004:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004006:	f043 0204 	orr.w	r2, r3, #4
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	641a      	str	r2, [r3, #64]	; 0x40
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	2200      	movs	r2, #0
 8004012:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004016:	2301      	movs	r3, #1
 8004018:	e046      	b.n	80040a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004020:	d021      	beq.n	8004066 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8004022:	f7fe fe75 	bl	8002d10 <HAL_GetTick>
 8004026:	4602      	mov	r2, r0
 8004028:	683b      	ldr	r3, [r7, #0]
 800402a:	1ad3      	subs	r3, r2, r3
 800402c:	687a      	ldr	r2, [r7, #4]
 800402e:	429a      	cmp	r2, r3
 8004030:	d302      	bcc.n	8004038 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	2b00      	cmp	r3, #0
 8004036:	d116      	bne.n	8004066 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	2200      	movs	r2, #0
 800403c:	631a      	str	r2, [r3, #48]	; 0x30
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	2220      	movs	r2, #32
 8004042:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	2200      	movs	r2, #0
 800404a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004052:	f043 0220 	orr.w	r2, r3, #32
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	641a      	str	r2, [r3, #64]	; 0x40
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	2200      	movs	r2, #0
 800405e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004062:	2301      	movs	r3, #1
 8004064:	e020      	b.n	80040a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8004066:	68bb      	ldr	r3, [r7, #8]
 8004068:	0c1b      	lsrs	r3, r3, #16
 800406a:	b2db      	uxtb	r3, r3
 800406c:	2b01      	cmp	r3, #1
 800406e:	d10c      	bne.n	800408a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	695b      	ldr	r3, [r3, #20]
 8004076:	43da      	mvns	r2, r3
 8004078:	68bb      	ldr	r3, [r7, #8]
 800407a:	4013      	ands	r3, r2
 800407c:	b29b      	uxth	r3, r3
 800407e:	2b00      	cmp	r3, #0
 8004080:	bf14      	ite	ne
 8004082:	2301      	movne	r3, #1
 8004084:	2300      	moveq	r3, #0
 8004086:	b2db      	uxtb	r3, r3
 8004088:	e00b      	b.n	80040a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	699b      	ldr	r3, [r3, #24]
 8004090:	43da      	mvns	r2, r3
 8004092:	68bb      	ldr	r3, [r7, #8]
 8004094:	4013      	ands	r3, r2
 8004096:	b29b      	uxth	r3, r3
 8004098:	2b00      	cmp	r3, #0
 800409a:	bf14      	ite	ne
 800409c:	2301      	movne	r3, #1
 800409e:	2300      	moveq	r3, #0
 80040a0:	b2db      	uxtb	r3, r3
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d18d      	bne.n	8003fc2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80040a6:	2300      	movs	r3, #0
 80040a8:	4618      	mov	r0, r3
 80040aa:	3710      	adds	r7, #16
 80040ac:	46bd      	mov	sp, r7
 80040ae:	bd80      	pop	{r7, pc}

080040b0 <I2C_WaitOnTXEFlagUntilTimeout>:
 80040b0:	b580      	push	{r7, lr}
 80040b2:	b084      	sub	sp, #16
 80040b4:	af00      	add	r7, sp, #0
 80040b6:	60f8      	str	r0, [r7, #12]
 80040b8:	60b9      	str	r1, [r7, #8]
 80040ba:	607a      	str	r2, [r7, #4]
 80040bc:	e02d      	b.n	800411a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80040be:	68f8      	ldr	r0, [r7, #12]
 80040c0:	f000 f878 	bl	80041b4 <I2C_IsAcknowledgeFailed>
 80040c4:	4603      	mov	r3, r0
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d001      	beq.n	80040ce <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80040ca:	2301      	movs	r3, #1
 80040cc:	e02d      	b.n	800412a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80040ce:	68bb      	ldr	r3, [r7, #8]
 80040d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80040d4:	d021      	beq.n	800411a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80040d6:	f7fe fe1b 	bl	8002d10 <HAL_GetTick>
 80040da:	4602      	mov	r2, r0
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	1ad3      	subs	r3, r2, r3
 80040e0:	68ba      	ldr	r2, [r7, #8]
 80040e2:	429a      	cmp	r2, r3
 80040e4:	d302      	bcc.n	80040ec <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80040e6:	68bb      	ldr	r3, [r7, #8]
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	d116      	bne.n	800411a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80040ec:	68fb      	ldr	r3, [r7, #12]
 80040ee:	2200      	movs	r2, #0
 80040f0:	631a      	str	r2, [r3, #48]	; 0x30
 80040f2:	68fb      	ldr	r3, [r7, #12]
 80040f4:	2220      	movs	r2, #32
 80040f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	2200      	movs	r2, #0
 80040fe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004102:	68fb      	ldr	r3, [r7, #12]
 8004104:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004106:	f043 0220 	orr.w	r2, r3, #32
 800410a:	68fb      	ldr	r3, [r7, #12]
 800410c:	641a      	str	r2, [r3, #64]	; 0x40
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	2200      	movs	r2, #0
 8004112:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004116:	2301      	movs	r3, #1
 8004118:	e007      	b.n	800412a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800411a:	68fb      	ldr	r3, [r7, #12]
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	695b      	ldr	r3, [r3, #20]
 8004120:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004124:	2b80      	cmp	r3, #128	; 0x80
 8004126:	d1ca      	bne.n	80040be <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8004128:	2300      	movs	r3, #0
 800412a:	4618      	mov	r0, r3
 800412c:	3710      	adds	r7, #16
 800412e:	46bd      	mov	sp, r7
 8004130:	bd80      	pop	{r7, pc}

08004132 <I2C_WaitOnBTFFlagUntilTimeout>:
 8004132:	b580      	push	{r7, lr}
 8004134:	b084      	sub	sp, #16
 8004136:	af00      	add	r7, sp, #0
 8004138:	60f8      	str	r0, [r7, #12]
 800413a:	60b9      	str	r1, [r7, #8]
 800413c:	607a      	str	r2, [r7, #4]
 800413e:	e02d      	b.n	800419c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8004140:	68f8      	ldr	r0, [r7, #12]
 8004142:	f000 f837 	bl	80041b4 <I2C_IsAcknowledgeFailed>
 8004146:	4603      	mov	r3, r0
 8004148:	2b00      	cmp	r3, #0
 800414a:	d001      	beq.n	8004150 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800414c:	2301      	movs	r3, #1
 800414e:	e02d      	b.n	80041ac <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8004150:	68bb      	ldr	r3, [r7, #8]
 8004152:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004156:	d021      	beq.n	800419c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8004158:	f7fe fdda 	bl	8002d10 <HAL_GetTick>
 800415c:	4602      	mov	r2, r0
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	1ad3      	subs	r3, r2, r3
 8004162:	68ba      	ldr	r2, [r7, #8]
 8004164:	429a      	cmp	r2, r3
 8004166:	d302      	bcc.n	800416e <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004168:	68bb      	ldr	r3, [r7, #8]
 800416a:	2b00      	cmp	r3, #0
 800416c:	d116      	bne.n	800419c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	2200      	movs	r2, #0
 8004172:	631a      	str	r2, [r3, #48]	; 0x30
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	2220      	movs	r2, #32
 8004178:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	2200      	movs	r2, #0
 8004180:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004188:	f043 0220 	orr.w	r2, r3, #32
 800418c:	68fb      	ldr	r3, [r7, #12]
 800418e:	641a      	str	r2, [r3, #64]	; 0x40
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	2200      	movs	r2, #0
 8004194:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004198:	2301      	movs	r3, #1
 800419a:	e007      	b.n	80041ac <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	695b      	ldr	r3, [r3, #20]
 80041a2:	f003 0304 	and.w	r3, r3, #4
 80041a6:	2b04      	cmp	r3, #4
 80041a8:	d1ca      	bne.n	8004140 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80041aa:	2300      	movs	r3, #0
 80041ac:	4618      	mov	r0, r3
 80041ae:	3710      	adds	r7, #16
 80041b0:	46bd      	mov	sp, r7
 80041b2:	bd80      	pop	{r7, pc}

080041b4 <I2C_IsAcknowledgeFailed>:
 80041b4:	b480      	push	{r7}
 80041b6:	b083      	sub	sp, #12
 80041b8:	af00      	add	r7, sp, #0
 80041ba:	6078      	str	r0, [r7, #4]
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	695b      	ldr	r3, [r3, #20]
 80041c2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80041c6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80041ca:	d11b      	bne.n	8004204 <I2C_IsAcknowledgeFailed+0x50>
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80041d4:	615a      	str	r2, [r3, #20]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	2200      	movs	r2, #0
 80041da:	631a      	str	r2, [r3, #48]	; 0x30
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	2220      	movs	r2, #32
 80041e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	2200      	movs	r2, #0
 80041e8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041f0:	f043 0204 	orr.w	r2, r3, #4
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	641a      	str	r2, [r3, #64]	; 0x40
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	2200      	movs	r2, #0
 80041fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004200:	2301      	movs	r3, #1
 8004202:	e000      	b.n	8004206 <I2C_IsAcknowledgeFailed+0x52>
 8004204:	2300      	movs	r3, #0
 8004206:	4618      	mov	r0, r3
 8004208:	370c      	adds	r7, #12
 800420a:	46bd      	mov	sp, r7
 800420c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004210:	4770      	bx	lr
	...

08004214 <HAL_RCC_OscConfig>:
 8004214:	b580      	push	{r7, lr}
 8004216:	b086      	sub	sp, #24
 8004218:	af00      	add	r7, sp, #0
 800421a:	6078      	str	r0, [r7, #4]
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	2b00      	cmp	r3, #0
 8004220:	d101      	bne.n	8004226 <HAL_RCC_OscConfig+0x12>
 8004222:	2301      	movs	r3, #1
 8004224:	e267      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	f003 0301 	and.w	r3, r3, #1
 800422e:	2b00      	cmp	r3, #0
 8004230:	d075      	beq.n	800431e <HAL_RCC_OscConfig+0x10a>
 8004232:	4b88      	ldr	r3, [pc, #544]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004234:	689b      	ldr	r3, [r3, #8]
 8004236:	f003 030c 	and.w	r3, r3, #12
 800423a:	2b04      	cmp	r3, #4
 800423c:	d00c      	beq.n	8004258 <HAL_RCC_OscConfig+0x44>
 800423e:	4b85      	ldr	r3, [pc, #532]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004240:	689b      	ldr	r3, [r3, #8]
 8004242:	f003 030c 	and.w	r3, r3, #12
 8004246:	2b08      	cmp	r3, #8
 8004248:	d112      	bne.n	8004270 <HAL_RCC_OscConfig+0x5c>
 800424a:	4b82      	ldr	r3, [pc, #520]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 800424c:	685b      	ldr	r3, [r3, #4]
 800424e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004252:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004256:	d10b      	bne.n	8004270 <HAL_RCC_OscConfig+0x5c>
 8004258:	4b7e      	ldr	r3, [pc, #504]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004260:	2b00      	cmp	r3, #0
 8004262:	d05b      	beq.n	800431c <HAL_RCC_OscConfig+0x108>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	685b      	ldr	r3, [r3, #4]
 8004268:	2b00      	cmp	r3, #0
 800426a:	d157      	bne.n	800431c <HAL_RCC_OscConfig+0x108>
 800426c:	2301      	movs	r3, #1
 800426e:	e242      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	685b      	ldr	r3, [r3, #4]
 8004274:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004278:	d106      	bne.n	8004288 <HAL_RCC_OscConfig+0x74>
 800427a:	4b76      	ldr	r3, [pc, #472]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	4a75      	ldr	r2, [pc, #468]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004280:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004284:	6013      	str	r3, [r2, #0]
 8004286:	e01d      	b.n	80042c4 <HAL_RCC_OscConfig+0xb0>
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	685b      	ldr	r3, [r3, #4]
 800428c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004290:	d10c      	bne.n	80042ac <HAL_RCC_OscConfig+0x98>
 8004292:	4b70      	ldr	r3, [pc, #448]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	4a6f      	ldr	r2, [pc, #444]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004298:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800429c:	6013      	str	r3, [r2, #0]
 800429e:	4b6d      	ldr	r3, [pc, #436]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	4a6c      	ldr	r2, [pc, #432]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80042a8:	6013      	str	r3, [r2, #0]
 80042aa:	e00b      	b.n	80042c4 <HAL_RCC_OscConfig+0xb0>
 80042ac:	4b69      	ldr	r3, [pc, #420]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4a68      	ldr	r2, [pc, #416]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042b2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80042b6:	6013      	str	r3, [r2, #0]
 80042b8:	4b66      	ldr	r3, [pc, #408]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	4a65      	ldr	r2, [pc, #404]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042be:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80042c2:	6013      	str	r3, [r2, #0]
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	685b      	ldr	r3, [r3, #4]
 80042c8:	2b00      	cmp	r3, #0
 80042ca:	d013      	beq.n	80042f4 <HAL_RCC_OscConfig+0xe0>
 80042cc:	f7fe fd20 	bl	8002d10 <HAL_GetTick>
 80042d0:	6138      	str	r0, [r7, #16]
 80042d2:	e008      	b.n	80042e6 <HAL_RCC_OscConfig+0xd2>
 80042d4:	f7fe fd1c 	bl	8002d10 <HAL_GetTick>
 80042d8:	4602      	mov	r2, r0
 80042da:	693b      	ldr	r3, [r7, #16]
 80042dc:	1ad3      	subs	r3, r2, r3
 80042de:	2b64      	cmp	r3, #100	; 0x64
 80042e0:	d901      	bls.n	80042e6 <HAL_RCC_OscConfig+0xd2>
 80042e2:	2303      	movs	r3, #3
 80042e4:	e207      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 80042e6:	4b5b      	ldr	r3, [pc, #364]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d0f0      	beq.n	80042d4 <HAL_RCC_OscConfig+0xc0>
 80042f2:	e014      	b.n	800431e <HAL_RCC_OscConfig+0x10a>
 80042f4:	f7fe fd0c 	bl	8002d10 <HAL_GetTick>
 80042f8:	6138      	str	r0, [r7, #16]
 80042fa:	e008      	b.n	800430e <HAL_RCC_OscConfig+0xfa>
 80042fc:	f7fe fd08 	bl	8002d10 <HAL_GetTick>
 8004300:	4602      	mov	r2, r0
 8004302:	693b      	ldr	r3, [r7, #16]
 8004304:	1ad3      	subs	r3, r2, r3
 8004306:	2b64      	cmp	r3, #100	; 0x64
 8004308:	d901      	bls.n	800430e <HAL_RCC_OscConfig+0xfa>
 800430a:	2303      	movs	r3, #3
 800430c:	e1f3      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 800430e:	4b51      	ldr	r3, [pc, #324]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004316:	2b00      	cmp	r3, #0
 8004318:	d1f0      	bne.n	80042fc <HAL_RCC_OscConfig+0xe8>
 800431a:	e000      	b.n	800431e <HAL_RCC_OscConfig+0x10a>
 800431c:	bf00      	nop
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	f003 0302 	and.w	r3, r3, #2
 8004326:	2b00      	cmp	r3, #0
 8004328:	d063      	beq.n	80043f2 <HAL_RCC_OscConfig+0x1de>
 800432a:	4b4a      	ldr	r3, [pc, #296]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 800432c:	689b      	ldr	r3, [r3, #8]
 800432e:	f003 030c 	and.w	r3, r3, #12
 8004332:	2b00      	cmp	r3, #0
 8004334:	d00b      	beq.n	800434e <HAL_RCC_OscConfig+0x13a>
 8004336:	4b47      	ldr	r3, [pc, #284]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004338:	689b      	ldr	r3, [r3, #8]
 800433a:	f003 030c 	and.w	r3, r3, #12
 800433e:	2b08      	cmp	r3, #8
 8004340:	d11c      	bne.n	800437c <HAL_RCC_OscConfig+0x168>
 8004342:	4b44      	ldr	r3, [pc, #272]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004344:	685b      	ldr	r3, [r3, #4]
 8004346:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800434a:	2b00      	cmp	r3, #0
 800434c:	d116      	bne.n	800437c <HAL_RCC_OscConfig+0x168>
 800434e:	4b41      	ldr	r3, [pc, #260]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	f003 0302 	and.w	r3, r3, #2
 8004356:	2b00      	cmp	r3, #0
 8004358:	d005      	beq.n	8004366 <HAL_RCC_OscConfig+0x152>
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	68db      	ldr	r3, [r3, #12]
 800435e:	2b01      	cmp	r3, #1
 8004360:	d001      	beq.n	8004366 <HAL_RCC_OscConfig+0x152>
 8004362:	2301      	movs	r3, #1
 8004364:	e1c7      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 8004366:	4b3b      	ldr	r3, [pc, #236]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	691b      	ldr	r3, [r3, #16]
 8004372:	00db      	lsls	r3, r3, #3
 8004374:	4937      	ldr	r1, [pc, #220]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004376:	4313      	orrs	r3, r2
 8004378:	600b      	str	r3, [r1, #0]
 800437a:	e03a      	b.n	80043f2 <HAL_RCC_OscConfig+0x1de>
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	68db      	ldr	r3, [r3, #12]
 8004380:	2b00      	cmp	r3, #0
 8004382:	d020      	beq.n	80043c6 <HAL_RCC_OscConfig+0x1b2>
 8004384:	4b34      	ldr	r3, [pc, #208]	; (8004458 <HAL_RCC_OscConfig+0x244>)
 8004386:	2201      	movs	r2, #1
 8004388:	601a      	str	r2, [r3, #0]
 800438a:	f7fe fcc1 	bl	8002d10 <HAL_GetTick>
 800438e:	6138      	str	r0, [r7, #16]
 8004390:	e008      	b.n	80043a4 <HAL_RCC_OscConfig+0x190>
 8004392:	f7fe fcbd 	bl	8002d10 <HAL_GetTick>
 8004396:	4602      	mov	r2, r0
 8004398:	693b      	ldr	r3, [r7, #16]
 800439a:	1ad3      	subs	r3, r2, r3
 800439c:	2b02      	cmp	r3, #2
 800439e:	d901      	bls.n	80043a4 <HAL_RCC_OscConfig+0x190>
 80043a0:	2303      	movs	r3, #3
 80043a2:	e1a8      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 80043a4:	4b2b      	ldr	r3, [pc, #172]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	f003 0302 	and.w	r3, r3, #2
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	d0f0      	beq.n	8004392 <HAL_RCC_OscConfig+0x17e>
 80043b0:	4b28      	ldr	r3, [pc, #160]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	691b      	ldr	r3, [r3, #16]
 80043bc:	00db      	lsls	r3, r3, #3
 80043be:	4925      	ldr	r1, [pc, #148]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80043c0:	4313      	orrs	r3, r2
 80043c2:	600b      	str	r3, [r1, #0]
 80043c4:	e015      	b.n	80043f2 <HAL_RCC_OscConfig+0x1de>
 80043c6:	4b24      	ldr	r3, [pc, #144]	; (8004458 <HAL_RCC_OscConfig+0x244>)
 80043c8:	2200      	movs	r2, #0
 80043ca:	601a      	str	r2, [r3, #0]
 80043cc:	f7fe fca0 	bl	8002d10 <HAL_GetTick>
 80043d0:	6138      	str	r0, [r7, #16]
 80043d2:	e008      	b.n	80043e6 <HAL_RCC_OscConfig+0x1d2>
 80043d4:	f7fe fc9c 	bl	8002d10 <HAL_GetTick>
 80043d8:	4602      	mov	r2, r0
 80043da:	693b      	ldr	r3, [r7, #16]
 80043dc:	1ad3      	subs	r3, r2, r3
 80043de:	2b02      	cmp	r3, #2
 80043e0:	d901      	bls.n	80043e6 <HAL_RCC_OscConfig+0x1d2>
 80043e2:	2303      	movs	r3, #3
 80043e4:	e187      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 80043e6:	4b1b      	ldr	r3, [pc, #108]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	f003 0302 	and.w	r3, r3, #2
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	d1f0      	bne.n	80043d4 <HAL_RCC_OscConfig+0x1c0>
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	f003 0308 	and.w	r3, r3, #8
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d036      	beq.n	800446c <HAL_RCC_OscConfig+0x258>
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	695b      	ldr	r3, [r3, #20]
 8004402:	2b00      	cmp	r3, #0
 8004404:	d016      	beq.n	8004434 <HAL_RCC_OscConfig+0x220>
 8004406:	4b15      	ldr	r3, [pc, #84]	; (800445c <HAL_RCC_OscConfig+0x248>)
 8004408:	2201      	movs	r2, #1
 800440a:	601a      	str	r2, [r3, #0]
 800440c:	f7fe fc80 	bl	8002d10 <HAL_GetTick>
 8004410:	6138      	str	r0, [r7, #16]
 8004412:	e008      	b.n	8004426 <HAL_RCC_OscConfig+0x212>
 8004414:	f7fe fc7c 	bl	8002d10 <HAL_GetTick>
 8004418:	4602      	mov	r2, r0
 800441a:	693b      	ldr	r3, [r7, #16]
 800441c:	1ad3      	subs	r3, r2, r3
 800441e:	2b02      	cmp	r3, #2
 8004420:	d901      	bls.n	8004426 <HAL_RCC_OscConfig+0x212>
 8004422:	2303      	movs	r3, #3
 8004424:	e167      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 8004426:	4b0b      	ldr	r3, [pc, #44]	; (8004454 <HAL_RCC_OscConfig+0x240>)
 8004428:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800442a:	f003 0302 	and.w	r3, r3, #2
 800442e:	2b00      	cmp	r3, #0
 8004430:	d0f0      	beq.n	8004414 <HAL_RCC_OscConfig+0x200>
 8004432:	e01b      	b.n	800446c <HAL_RCC_OscConfig+0x258>
 8004434:	4b09      	ldr	r3, [pc, #36]	; (800445c <HAL_RCC_OscConfig+0x248>)
 8004436:	2200      	movs	r2, #0
 8004438:	601a      	str	r2, [r3, #0]
 800443a:	f7fe fc69 	bl	8002d10 <HAL_GetTick>
 800443e:	6138      	str	r0, [r7, #16]
 8004440:	e00e      	b.n	8004460 <HAL_RCC_OscConfig+0x24c>
 8004442:	f7fe fc65 	bl	8002d10 <HAL_GetTick>
 8004446:	4602      	mov	r2, r0
 8004448:	693b      	ldr	r3, [r7, #16]
 800444a:	1ad3      	subs	r3, r2, r3
 800444c:	2b02      	cmp	r3, #2
 800444e:	d907      	bls.n	8004460 <HAL_RCC_OscConfig+0x24c>
 8004450:	2303      	movs	r3, #3
 8004452:	e150      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 8004454:	40023800 	.word	0x40023800
 8004458:	42470000 	.word	0x42470000
 800445c:	42470e80 	.word	0x42470e80
 8004460:	4b88      	ldr	r3, [pc, #544]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004462:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004464:	f003 0302 	and.w	r3, r3, #2
 8004468:	2b00      	cmp	r3, #0
 800446a:	d1ea      	bne.n	8004442 <HAL_RCC_OscConfig+0x22e>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	f003 0304 	and.w	r3, r3, #4
 8004474:	2b00      	cmp	r3, #0
 8004476:	f000 8097 	beq.w	80045a8 <HAL_RCC_OscConfig+0x394>
 800447a:	2300      	movs	r3, #0
 800447c:	75fb      	strb	r3, [r7, #23]
 800447e:	4b81      	ldr	r3, [pc, #516]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004482:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004486:	2b00      	cmp	r3, #0
 8004488:	d10f      	bne.n	80044aa <HAL_RCC_OscConfig+0x296>
 800448a:	2300      	movs	r3, #0
 800448c:	60bb      	str	r3, [r7, #8]
 800448e:	4b7d      	ldr	r3, [pc, #500]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004490:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004492:	4a7c      	ldr	r2, [pc, #496]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004494:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004498:	6413      	str	r3, [r2, #64]	; 0x40
 800449a:	4b7a      	ldr	r3, [pc, #488]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800449c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800449e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80044a2:	60bb      	str	r3, [r7, #8]
 80044a4:	68bb      	ldr	r3, [r7, #8]
 80044a6:	2301      	movs	r3, #1
 80044a8:	75fb      	strb	r3, [r7, #23]
 80044aa:	4b77      	ldr	r3, [pc, #476]	; (8004688 <HAL_RCC_OscConfig+0x474>)
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d118      	bne.n	80044e8 <HAL_RCC_OscConfig+0x2d4>
 80044b6:	4b74      	ldr	r3, [pc, #464]	; (8004688 <HAL_RCC_OscConfig+0x474>)
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	4a73      	ldr	r2, [pc, #460]	; (8004688 <HAL_RCC_OscConfig+0x474>)
 80044bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80044c0:	6013      	str	r3, [r2, #0]
 80044c2:	f7fe fc25 	bl	8002d10 <HAL_GetTick>
 80044c6:	6138      	str	r0, [r7, #16]
 80044c8:	e008      	b.n	80044dc <HAL_RCC_OscConfig+0x2c8>
 80044ca:	f7fe fc21 	bl	8002d10 <HAL_GetTick>
 80044ce:	4602      	mov	r2, r0
 80044d0:	693b      	ldr	r3, [r7, #16]
 80044d2:	1ad3      	subs	r3, r2, r3
 80044d4:	2b02      	cmp	r3, #2
 80044d6:	d901      	bls.n	80044dc <HAL_RCC_OscConfig+0x2c8>
 80044d8:	2303      	movs	r3, #3
 80044da:	e10c      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 80044dc:	4b6a      	ldr	r3, [pc, #424]	; (8004688 <HAL_RCC_OscConfig+0x474>)
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	d0f0      	beq.n	80044ca <HAL_RCC_OscConfig+0x2b6>
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	689b      	ldr	r3, [r3, #8]
 80044ec:	2b01      	cmp	r3, #1
 80044ee:	d106      	bne.n	80044fe <HAL_RCC_OscConfig+0x2ea>
 80044f0:	4b64      	ldr	r3, [pc, #400]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 80044f2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044f4:	4a63      	ldr	r2, [pc, #396]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 80044f6:	f043 0301 	orr.w	r3, r3, #1
 80044fa:	6713      	str	r3, [r2, #112]	; 0x70
 80044fc:	e01c      	b.n	8004538 <HAL_RCC_OscConfig+0x324>
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	689b      	ldr	r3, [r3, #8]
 8004502:	2b05      	cmp	r3, #5
 8004504:	d10c      	bne.n	8004520 <HAL_RCC_OscConfig+0x30c>
 8004506:	4b5f      	ldr	r3, [pc, #380]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004508:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800450a:	4a5e      	ldr	r2, [pc, #376]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800450c:	f043 0304 	orr.w	r3, r3, #4
 8004510:	6713      	str	r3, [r2, #112]	; 0x70
 8004512:	4b5c      	ldr	r3, [pc, #368]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004514:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004516:	4a5b      	ldr	r2, [pc, #364]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004518:	f043 0301 	orr.w	r3, r3, #1
 800451c:	6713      	str	r3, [r2, #112]	; 0x70
 800451e:	e00b      	b.n	8004538 <HAL_RCC_OscConfig+0x324>
 8004520:	4b58      	ldr	r3, [pc, #352]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004522:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004524:	4a57      	ldr	r2, [pc, #348]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004526:	f023 0301 	bic.w	r3, r3, #1
 800452a:	6713      	str	r3, [r2, #112]	; 0x70
 800452c:	4b55      	ldr	r3, [pc, #340]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800452e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004530:	4a54      	ldr	r2, [pc, #336]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004532:	f023 0304 	bic.w	r3, r3, #4
 8004536:	6713      	str	r3, [r2, #112]	; 0x70
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	689b      	ldr	r3, [r3, #8]
 800453c:	2b00      	cmp	r3, #0
 800453e:	d015      	beq.n	800456c <HAL_RCC_OscConfig+0x358>
 8004540:	f7fe fbe6 	bl	8002d10 <HAL_GetTick>
 8004544:	6138      	str	r0, [r7, #16]
 8004546:	e00a      	b.n	800455e <HAL_RCC_OscConfig+0x34a>
 8004548:	f7fe fbe2 	bl	8002d10 <HAL_GetTick>
 800454c:	4602      	mov	r2, r0
 800454e:	693b      	ldr	r3, [r7, #16]
 8004550:	1ad3      	subs	r3, r2, r3
 8004552:	f241 3288 	movw	r2, #5000	; 0x1388
 8004556:	4293      	cmp	r3, r2
 8004558:	d901      	bls.n	800455e <HAL_RCC_OscConfig+0x34a>
 800455a:	2303      	movs	r3, #3
 800455c:	e0cb      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 800455e:	4b49      	ldr	r3, [pc, #292]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004560:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004562:	f003 0302 	and.w	r3, r3, #2
 8004566:	2b00      	cmp	r3, #0
 8004568:	d0ee      	beq.n	8004548 <HAL_RCC_OscConfig+0x334>
 800456a:	e014      	b.n	8004596 <HAL_RCC_OscConfig+0x382>
 800456c:	f7fe fbd0 	bl	8002d10 <HAL_GetTick>
 8004570:	6138      	str	r0, [r7, #16]
 8004572:	e00a      	b.n	800458a <HAL_RCC_OscConfig+0x376>
 8004574:	f7fe fbcc 	bl	8002d10 <HAL_GetTick>
 8004578:	4602      	mov	r2, r0
 800457a:	693b      	ldr	r3, [r7, #16]
 800457c:	1ad3      	subs	r3, r2, r3
 800457e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004582:	4293      	cmp	r3, r2
 8004584:	d901      	bls.n	800458a <HAL_RCC_OscConfig+0x376>
 8004586:	2303      	movs	r3, #3
 8004588:	e0b5      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 800458a:	4b3e      	ldr	r3, [pc, #248]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800458c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800458e:	f003 0302 	and.w	r3, r3, #2
 8004592:	2b00      	cmp	r3, #0
 8004594:	d1ee      	bne.n	8004574 <HAL_RCC_OscConfig+0x360>
 8004596:	7dfb      	ldrb	r3, [r7, #23]
 8004598:	2b01      	cmp	r3, #1
 800459a:	d105      	bne.n	80045a8 <HAL_RCC_OscConfig+0x394>
 800459c:	4b39      	ldr	r3, [pc, #228]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800459e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045a0:	4a38      	ldr	r2, [pc, #224]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 80045a2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80045a6:	6413      	str	r3, [r2, #64]	; 0x40
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	699b      	ldr	r3, [r3, #24]
 80045ac:	2b00      	cmp	r3, #0
 80045ae:	f000 80a1 	beq.w	80046f4 <HAL_RCC_OscConfig+0x4e0>
 80045b2:	4b34      	ldr	r3, [pc, #208]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 80045b4:	689b      	ldr	r3, [r3, #8]
 80045b6:	f003 030c 	and.w	r3, r3, #12
 80045ba:	2b08      	cmp	r3, #8
 80045bc:	d05c      	beq.n	8004678 <HAL_RCC_OscConfig+0x464>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	699b      	ldr	r3, [r3, #24]
 80045c2:	2b02      	cmp	r3, #2
 80045c4:	d141      	bne.n	800464a <HAL_RCC_OscConfig+0x436>
 80045c6:	4b31      	ldr	r3, [pc, #196]	; (800468c <HAL_RCC_OscConfig+0x478>)
 80045c8:	2200      	movs	r2, #0
 80045ca:	601a      	str	r2, [r3, #0]
 80045cc:	f7fe fba0 	bl	8002d10 <HAL_GetTick>
 80045d0:	6138      	str	r0, [r7, #16]
 80045d2:	e008      	b.n	80045e6 <HAL_RCC_OscConfig+0x3d2>
 80045d4:	f7fe fb9c 	bl	8002d10 <HAL_GetTick>
 80045d8:	4602      	mov	r2, r0
 80045da:	693b      	ldr	r3, [r7, #16]
 80045dc:	1ad3      	subs	r3, r2, r3
 80045de:	2b02      	cmp	r3, #2
 80045e0:	d901      	bls.n	80045e6 <HAL_RCC_OscConfig+0x3d2>
 80045e2:	2303      	movs	r3, #3
 80045e4:	e087      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 80045e6:	4b27      	ldr	r3, [pc, #156]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d1f0      	bne.n	80045d4 <HAL_RCC_OscConfig+0x3c0>
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	69da      	ldr	r2, [r3, #28]
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	6a1b      	ldr	r3, [r3, #32]
 80045fa:	431a      	orrs	r2, r3
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004600:	019b      	lsls	r3, r3, #6
 8004602:	431a      	orrs	r2, r3
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004608:	085b      	lsrs	r3, r3, #1
 800460a:	3b01      	subs	r3, #1
 800460c:	041b      	lsls	r3, r3, #16
 800460e:	431a      	orrs	r2, r3
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004614:	061b      	lsls	r3, r3, #24
 8004616:	491b      	ldr	r1, [pc, #108]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 8004618:	4313      	orrs	r3, r2
 800461a:	604b      	str	r3, [r1, #4]
 800461c:	4b1b      	ldr	r3, [pc, #108]	; (800468c <HAL_RCC_OscConfig+0x478>)
 800461e:	2201      	movs	r2, #1
 8004620:	601a      	str	r2, [r3, #0]
 8004622:	f7fe fb75 	bl	8002d10 <HAL_GetTick>
 8004626:	6138      	str	r0, [r7, #16]
 8004628:	e008      	b.n	800463c <HAL_RCC_OscConfig+0x428>
 800462a:	f7fe fb71 	bl	8002d10 <HAL_GetTick>
 800462e:	4602      	mov	r2, r0
 8004630:	693b      	ldr	r3, [r7, #16]
 8004632:	1ad3      	subs	r3, r2, r3
 8004634:	2b02      	cmp	r3, #2
 8004636:	d901      	bls.n	800463c <HAL_RCC_OscConfig+0x428>
 8004638:	2303      	movs	r3, #3
 800463a:	e05c      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 800463c:	4b11      	ldr	r3, [pc, #68]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004644:	2b00      	cmp	r3, #0
 8004646:	d0f0      	beq.n	800462a <HAL_RCC_OscConfig+0x416>
 8004648:	e054      	b.n	80046f4 <HAL_RCC_OscConfig+0x4e0>
 800464a:	4b10      	ldr	r3, [pc, #64]	; (800468c <HAL_RCC_OscConfig+0x478>)
 800464c:	2200      	movs	r2, #0
 800464e:	601a      	str	r2, [r3, #0]
 8004650:	f7fe fb5e 	bl	8002d10 <HAL_GetTick>
 8004654:	6138      	str	r0, [r7, #16]
 8004656:	e008      	b.n	800466a <HAL_RCC_OscConfig+0x456>
 8004658:	f7fe fb5a 	bl	8002d10 <HAL_GetTick>
 800465c:	4602      	mov	r2, r0
 800465e:	693b      	ldr	r3, [r7, #16]
 8004660:	1ad3      	subs	r3, r2, r3
 8004662:	2b02      	cmp	r3, #2
 8004664:	d901      	bls.n	800466a <HAL_RCC_OscConfig+0x456>
 8004666:	2303      	movs	r3, #3
 8004668:	e045      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 800466a:	4b06      	ldr	r3, [pc, #24]	; (8004684 <HAL_RCC_OscConfig+0x470>)
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004672:	2b00      	cmp	r3, #0
 8004674:	d1f0      	bne.n	8004658 <HAL_RCC_OscConfig+0x444>
 8004676:	e03d      	b.n	80046f4 <HAL_RCC_OscConfig+0x4e0>
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	699b      	ldr	r3, [r3, #24]
 800467c:	2b01      	cmp	r3, #1
 800467e:	d107      	bne.n	8004690 <HAL_RCC_OscConfig+0x47c>
 8004680:	2301      	movs	r3, #1
 8004682:	e038      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 8004684:	40023800 	.word	0x40023800
 8004688:	40007000 	.word	0x40007000
 800468c:	42470060 	.word	0x42470060
 8004690:	4b1b      	ldr	r3, [pc, #108]	; (8004700 <HAL_RCC_OscConfig+0x4ec>)
 8004692:	685b      	ldr	r3, [r3, #4]
 8004694:	60fb      	str	r3, [r7, #12]
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	699b      	ldr	r3, [r3, #24]
 800469a:	2b01      	cmp	r3, #1
 800469c:	d028      	beq.n	80046f0 <HAL_RCC_OscConfig+0x4dc>
 800469e:	68fb      	ldr	r3, [r7, #12]
 80046a0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	69db      	ldr	r3, [r3, #28]
 80046a8:	429a      	cmp	r2, r3
 80046aa:	d121      	bne.n	80046f0 <HAL_RCC_OscConfig+0x4dc>
 80046ac:	68fb      	ldr	r3, [r7, #12]
 80046ae:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	6a1b      	ldr	r3, [r3, #32]
 80046b6:	429a      	cmp	r2, r3
 80046b8:	d11a      	bne.n	80046f0 <HAL_RCC_OscConfig+0x4dc>
 80046ba:	68fa      	ldr	r2, [r7, #12]
 80046bc:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80046c0:	4013      	ands	r3, r2
 80046c2:	687a      	ldr	r2, [r7, #4]
 80046c4:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80046c6:	0192      	lsls	r2, r2, #6
 80046c8:	4293      	cmp	r3, r2
 80046ca:	d111      	bne.n	80046f0 <HAL_RCC_OscConfig+0x4dc>
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80046d6:	085b      	lsrs	r3, r3, #1
 80046d8:	3b01      	subs	r3, #1
 80046da:	041b      	lsls	r3, r3, #16
 80046dc:	429a      	cmp	r2, r3
 80046de:	d107      	bne.n	80046f0 <HAL_RCC_OscConfig+0x4dc>
 80046e0:	68fb      	ldr	r3, [r7, #12]
 80046e2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80046ea:	061b      	lsls	r3, r3, #24
 80046ec:	429a      	cmp	r2, r3
 80046ee:	d001      	beq.n	80046f4 <HAL_RCC_OscConfig+0x4e0>
 80046f0:	2301      	movs	r3, #1
 80046f2:	e000      	b.n	80046f6 <HAL_RCC_OscConfig+0x4e2>
 80046f4:	2300      	movs	r3, #0
 80046f6:	4618      	mov	r0, r3
 80046f8:	3718      	adds	r7, #24
 80046fa:	46bd      	mov	sp, r7
 80046fc:	bd80      	pop	{r7, pc}
 80046fe:	bf00      	nop
 8004700:	40023800 	.word	0x40023800

08004704 <HAL_RCC_ClockConfig>:
 8004704:	b580      	push	{r7, lr}
 8004706:	b084      	sub	sp, #16
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	6039      	str	r1, [r7, #0]
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	2b00      	cmp	r3, #0
 8004712:	d101      	bne.n	8004718 <HAL_RCC_ClockConfig+0x14>
 8004714:	2301      	movs	r3, #1
 8004716:	e0cc      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 8004718:	4b68      	ldr	r3, [pc, #416]	; (80048bc <HAL_RCC_ClockConfig+0x1b8>)
 800471a:	681b      	ldr	r3, [r3, #0]
 800471c:	f003 0307 	and.w	r3, r3, #7
 8004720:	683a      	ldr	r2, [r7, #0]
 8004722:	429a      	cmp	r2, r3
 8004724:	d90c      	bls.n	8004740 <HAL_RCC_ClockConfig+0x3c>
 8004726:	4b65      	ldr	r3, [pc, #404]	; (80048bc <HAL_RCC_ClockConfig+0x1b8>)
 8004728:	683a      	ldr	r2, [r7, #0]
 800472a:	b2d2      	uxtb	r2, r2
 800472c:	701a      	strb	r2, [r3, #0]
 800472e:	4b63      	ldr	r3, [pc, #396]	; (80048bc <HAL_RCC_ClockConfig+0x1b8>)
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	f003 0307 	and.w	r3, r3, #7
 8004736:	683a      	ldr	r2, [r7, #0]
 8004738:	429a      	cmp	r2, r3
 800473a:	d001      	beq.n	8004740 <HAL_RCC_ClockConfig+0x3c>
 800473c:	2301      	movs	r3, #1
 800473e:	e0b8      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	f003 0302 	and.w	r3, r3, #2
 8004748:	2b00      	cmp	r3, #0
 800474a:	d020      	beq.n	800478e <HAL_RCC_ClockConfig+0x8a>
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	f003 0304 	and.w	r3, r3, #4
 8004754:	2b00      	cmp	r3, #0
 8004756:	d005      	beq.n	8004764 <HAL_RCC_ClockConfig+0x60>
 8004758:	4b59      	ldr	r3, [pc, #356]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 800475a:	689b      	ldr	r3, [r3, #8]
 800475c:	4a58      	ldr	r2, [pc, #352]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 800475e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8004762:	6093      	str	r3, [r2, #8]
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	f003 0308 	and.w	r3, r3, #8
 800476c:	2b00      	cmp	r3, #0
 800476e:	d005      	beq.n	800477c <HAL_RCC_ClockConfig+0x78>
 8004770:	4b53      	ldr	r3, [pc, #332]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004772:	689b      	ldr	r3, [r3, #8]
 8004774:	4a52      	ldr	r2, [pc, #328]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004776:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800477a:	6093      	str	r3, [r2, #8]
 800477c:	4b50      	ldr	r3, [pc, #320]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 800477e:	689b      	ldr	r3, [r3, #8]
 8004780:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	689b      	ldr	r3, [r3, #8]
 8004788:	494d      	ldr	r1, [pc, #308]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 800478a:	4313      	orrs	r3, r2
 800478c:	608b      	str	r3, [r1, #8]
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	f003 0301 	and.w	r3, r3, #1
 8004796:	2b00      	cmp	r3, #0
 8004798:	d044      	beq.n	8004824 <HAL_RCC_ClockConfig+0x120>
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	685b      	ldr	r3, [r3, #4]
 800479e:	2b01      	cmp	r3, #1
 80047a0:	d107      	bne.n	80047b2 <HAL_RCC_ClockConfig+0xae>
 80047a2:	4b47      	ldr	r3, [pc, #284]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d119      	bne.n	80047e2 <HAL_RCC_ClockConfig+0xde>
 80047ae:	2301      	movs	r3, #1
 80047b0:	e07f      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	685b      	ldr	r3, [r3, #4]
 80047b6:	2b02      	cmp	r3, #2
 80047b8:	d003      	beq.n	80047c2 <HAL_RCC_ClockConfig+0xbe>
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	685b      	ldr	r3, [r3, #4]
 80047be:	2b03      	cmp	r3, #3
 80047c0:	d107      	bne.n	80047d2 <HAL_RCC_ClockConfig+0xce>
 80047c2:	4b3f      	ldr	r3, [pc, #252]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	d109      	bne.n	80047e2 <HAL_RCC_ClockConfig+0xde>
 80047ce:	2301      	movs	r3, #1
 80047d0:	e06f      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 80047d2:	4b3b      	ldr	r3, [pc, #236]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	f003 0302 	and.w	r3, r3, #2
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d101      	bne.n	80047e2 <HAL_RCC_ClockConfig+0xde>
 80047de:	2301      	movs	r3, #1
 80047e0:	e067      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 80047e2:	4b37      	ldr	r3, [pc, #220]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 80047e4:	689b      	ldr	r3, [r3, #8]
 80047e6:	f023 0203 	bic.w	r2, r3, #3
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	685b      	ldr	r3, [r3, #4]
 80047ee:	4934      	ldr	r1, [pc, #208]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 80047f0:	4313      	orrs	r3, r2
 80047f2:	608b      	str	r3, [r1, #8]
 80047f4:	f7fe fa8c 	bl	8002d10 <HAL_GetTick>
 80047f8:	60f8      	str	r0, [r7, #12]
 80047fa:	e00a      	b.n	8004812 <HAL_RCC_ClockConfig+0x10e>
 80047fc:	f7fe fa88 	bl	8002d10 <HAL_GetTick>
 8004800:	4602      	mov	r2, r0
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	1ad3      	subs	r3, r2, r3
 8004806:	f241 3288 	movw	r2, #5000	; 0x1388
 800480a:	4293      	cmp	r3, r2
 800480c:	d901      	bls.n	8004812 <HAL_RCC_ClockConfig+0x10e>
 800480e:	2303      	movs	r3, #3
 8004810:	e04f      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 8004812:	4b2b      	ldr	r3, [pc, #172]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004814:	689b      	ldr	r3, [r3, #8]
 8004816:	f003 020c 	and.w	r2, r3, #12
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	009b      	lsls	r3, r3, #2
 8004820:	429a      	cmp	r2, r3
 8004822:	d1eb      	bne.n	80047fc <HAL_RCC_ClockConfig+0xf8>
 8004824:	4b25      	ldr	r3, [pc, #148]	; (80048bc <HAL_RCC_ClockConfig+0x1b8>)
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	f003 0307 	and.w	r3, r3, #7
 800482c:	683a      	ldr	r2, [r7, #0]
 800482e:	429a      	cmp	r2, r3
 8004830:	d20c      	bcs.n	800484c <HAL_RCC_ClockConfig+0x148>
 8004832:	4b22      	ldr	r3, [pc, #136]	; (80048bc <HAL_RCC_ClockConfig+0x1b8>)
 8004834:	683a      	ldr	r2, [r7, #0]
 8004836:	b2d2      	uxtb	r2, r2
 8004838:	701a      	strb	r2, [r3, #0]
 800483a:	4b20      	ldr	r3, [pc, #128]	; (80048bc <HAL_RCC_ClockConfig+0x1b8>)
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	f003 0307 	and.w	r3, r3, #7
 8004842:	683a      	ldr	r2, [r7, #0]
 8004844:	429a      	cmp	r2, r3
 8004846:	d001      	beq.n	800484c <HAL_RCC_ClockConfig+0x148>
 8004848:	2301      	movs	r3, #1
 800484a:	e032      	b.n	80048b2 <HAL_RCC_ClockConfig+0x1ae>
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f003 0304 	and.w	r3, r3, #4
 8004854:	2b00      	cmp	r3, #0
 8004856:	d008      	beq.n	800486a <HAL_RCC_ClockConfig+0x166>
 8004858:	4b19      	ldr	r3, [pc, #100]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 800485a:	689b      	ldr	r3, [r3, #8]
 800485c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	68db      	ldr	r3, [r3, #12]
 8004864:	4916      	ldr	r1, [pc, #88]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004866:	4313      	orrs	r3, r2
 8004868:	608b      	str	r3, [r1, #8]
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f003 0308 	and.w	r3, r3, #8
 8004872:	2b00      	cmp	r3, #0
 8004874:	d009      	beq.n	800488a <HAL_RCC_ClockConfig+0x186>
 8004876:	4b12      	ldr	r3, [pc, #72]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004878:	689b      	ldr	r3, [r3, #8]
 800487a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	691b      	ldr	r3, [r3, #16]
 8004882:	00db      	lsls	r3, r3, #3
 8004884:	490e      	ldr	r1, [pc, #56]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004886:	4313      	orrs	r3, r2
 8004888:	608b      	str	r3, [r1, #8]
 800488a:	f000 f821 	bl	80048d0 <HAL_RCC_GetSysClockFreq>
 800488e:	4602      	mov	r2, r0
 8004890:	4b0b      	ldr	r3, [pc, #44]	; (80048c0 <HAL_RCC_ClockConfig+0x1bc>)
 8004892:	689b      	ldr	r3, [r3, #8]
 8004894:	091b      	lsrs	r3, r3, #4
 8004896:	f003 030f 	and.w	r3, r3, #15
 800489a:	490a      	ldr	r1, [pc, #40]	; (80048c4 <HAL_RCC_ClockConfig+0x1c0>)
 800489c:	5ccb      	ldrb	r3, [r1, r3]
 800489e:	fa22 f303 	lsr.w	r3, r2, r3
 80048a2:	4a09      	ldr	r2, [pc, #36]	; (80048c8 <HAL_RCC_ClockConfig+0x1c4>)
 80048a4:	6013      	str	r3, [r2, #0]
 80048a6:	4b09      	ldr	r3, [pc, #36]	; (80048cc <HAL_RCC_ClockConfig+0x1c8>)
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	4618      	mov	r0, r3
 80048ac:	f7fc fd92 	bl	80013d4 <HAL_InitTick>
 80048b0:	2300      	movs	r3, #0
 80048b2:	4618      	mov	r0, r3
 80048b4:	3710      	adds	r7, #16
 80048b6:	46bd      	mov	sp, r7
 80048b8:	bd80      	pop	{r7, pc}
 80048ba:	bf00      	nop
 80048bc:	40023c00 	.word	0x40023c00
 80048c0:	40023800 	.word	0x40023800
 80048c4:	08009abc 	.word	0x08009abc
 80048c8:	20000000 	.word	0x20000000
 80048cc:	20000094 	.word	0x20000094

080048d0 <HAL_RCC_GetSysClockFreq>:
 80048d0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80048d4:	b094      	sub	sp, #80	; 0x50
 80048d6:	af00      	add	r7, sp, #0
 80048d8:	2300      	movs	r3, #0
 80048da:	647b      	str	r3, [r7, #68]	; 0x44
 80048dc:	2300      	movs	r3, #0
 80048de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80048e0:	2300      	movs	r3, #0
 80048e2:	643b      	str	r3, [r7, #64]	; 0x40
 80048e4:	2300      	movs	r3, #0
 80048e6:	64bb      	str	r3, [r7, #72]	; 0x48
 80048e8:	4b79      	ldr	r3, [pc, #484]	; (8004ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 80048ea:	689b      	ldr	r3, [r3, #8]
 80048ec:	f003 030c 	and.w	r3, r3, #12
 80048f0:	2b08      	cmp	r3, #8
 80048f2:	d00d      	beq.n	8004910 <HAL_RCC_GetSysClockFreq+0x40>
 80048f4:	2b08      	cmp	r3, #8
 80048f6:	f200 80e1 	bhi.w	8004abc <HAL_RCC_GetSysClockFreq+0x1ec>
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d002      	beq.n	8004904 <HAL_RCC_GetSysClockFreq+0x34>
 80048fe:	2b04      	cmp	r3, #4
 8004900:	d003      	beq.n	800490a <HAL_RCC_GetSysClockFreq+0x3a>
 8004902:	e0db      	b.n	8004abc <HAL_RCC_GetSysClockFreq+0x1ec>
 8004904:	4b73      	ldr	r3, [pc, #460]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x204>)
 8004906:	64bb      	str	r3, [r7, #72]	; 0x48
 8004908:	e0db      	b.n	8004ac2 <HAL_RCC_GetSysClockFreq+0x1f2>
 800490a:	4b73      	ldr	r3, [pc, #460]	; (8004ad8 <HAL_RCC_GetSysClockFreq+0x208>)
 800490c:	64bb      	str	r3, [r7, #72]	; 0x48
 800490e:	e0d8      	b.n	8004ac2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8004910:	4b6f      	ldr	r3, [pc, #444]	; (8004ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 8004912:	685b      	ldr	r3, [r3, #4]
 8004914:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004918:	647b      	str	r3, [r7, #68]	; 0x44
 800491a:	4b6d      	ldr	r3, [pc, #436]	; (8004ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 800491c:	685b      	ldr	r3, [r3, #4]
 800491e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004922:	2b00      	cmp	r3, #0
 8004924:	d063      	beq.n	80049ee <HAL_RCC_GetSysClockFreq+0x11e>
 8004926:	4b6a      	ldr	r3, [pc, #424]	; (8004ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	099b      	lsrs	r3, r3, #6
 800492c:	2200      	movs	r2, #0
 800492e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004930:	63fa      	str	r2, [r7, #60]	; 0x3c
 8004932:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004934:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004938:	633b      	str	r3, [r7, #48]	; 0x30
 800493a:	2300      	movs	r3, #0
 800493c:	637b      	str	r3, [r7, #52]	; 0x34
 800493e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8004942:	4622      	mov	r2, r4
 8004944:	462b      	mov	r3, r5
 8004946:	f04f 0000 	mov.w	r0, #0
 800494a:	f04f 0100 	mov.w	r1, #0
 800494e:	0159      	lsls	r1, r3, #5
 8004950:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004954:	0150      	lsls	r0, r2, #5
 8004956:	4602      	mov	r2, r0
 8004958:	460b      	mov	r3, r1
 800495a:	4621      	mov	r1, r4
 800495c:	1a51      	subs	r1, r2, r1
 800495e:	6139      	str	r1, [r7, #16]
 8004960:	4629      	mov	r1, r5
 8004962:	eb63 0301 	sbc.w	r3, r3, r1
 8004966:	617b      	str	r3, [r7, #20]
 8004968:	f04f 0200 	mov.w	r2, #0
 800496c:	f04f 0300 	mov.w	r3, #0
 8004970:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004974:	4659      	mov	r1, fp
 8004976:	018b      	lsls	r3, r1, #6
 8004978:	4651      	mov	r1, sl
 800497a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800497e:	4651      	mov	r1, sl
 8004980:	018a      	lsls	r2, r1, #6
 8004982:	4651      	mov	r1, sl
 8004984:	ebb2 0801 	subs.w	r8, r2, r1
 8004988:	4659      	mov	r1, fp
 800498a:	eb63 0901 	sbc.w	r9, r3, r1
 800498e:	f04f 0200 	mov.w	r2, #0
 8004992:	f04f 0300 	mov.w	r3, #0
 8004996:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800499a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800499e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80049a2:	4690      	mov	r8, r2
 80049a4:	4699      	mov	r9, r3
 80049a6:	4623      	mov	r3, r4
 80049a8:	eb18 0303 	adds.w	r3, r8, r3
 80049ac:	60bb      	str	r3, [r7, #8]
 80049ae:	462b      	mov	r3, r5
 80049b0:	eb49 0303 	adc.w	r3, r9, r3
 80049b4:	60fb      	str	r3, [r7, #12]
 80049b6:	f04f 0200 	mov.w	r2, #0
 80049ba:	f04f 0300 	mov.w	r3, #0
 80049be:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80049c2:	4629      	mov	r1, r5
 80049c4:	024b      	lsls	r3, r1, #9
 80049c6:	4621      	mov	r1, r4
 80049c8:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80049cc:	4621      	mov	r1, r4
 80049ce:	024a      	lsls	r2, r1, #9
 80049d0:	4610      	mov	r0, r2
 80049d2:	4619      	mov	r1, r3
 80049d4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80049d6:	2200      	movs	r2, #0
 80049d8:	62bb      	str	r3, [r7, #40]	; 0x28
 80049da:	62fa      	str	r2, [r7, #44]	; 0x2c
 80049dc:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80049e0:	f7fb fc4e 	bl	8000280 <__aeabi_uldivmod>
 80049e4:	4602      	mov	r2, r0
 80049e6:	460b      	mov	r3, r1
 80049e8:	4613      	mov	r3, r2
 80049ea:	64fb      	str	r3, [r7, #76]	; 0x4c
 80049ec:	e058      	b.n	8004aa0 <HAL_RCC_GetSysClockFreq+0x1d0>
 80049ee:	4b38      	ldr	r3, [pc, #224]	; (8004ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 80049f0:	685b      	ldr	r3, [r3, #4]
 80049f2:	099b      	lsrs	r3, r3, #6
 80049f4:	2200      	movs	r2, #0
 80049f6:	4618      	mov	r0, r3
 80049f8:	4611      	mov	r1, r2
 80049fa:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80049fe:	623b      	str	r3, [r7, #32]
 8004a00:	2300      	movs	r3, #0
 8004a02:	627b      	str	r3, [r7, #36]	; 0x24
 8004a04:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8004a08:	4642      	mov	r2, r8
 8004a0a:	464b      	mov	r3, r9
 8004a0c:	f04f 0000 	mov.w	r0, #0
 8004a10:	f04f 0100 	mov.w	r1, #0
 8004a14:	0159      	lsls	r1, r3, #5
 8004a16:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004a1a:	0150      	lsls	r0, r2, #5
 8004a1c:	4602      	mov	r2, r0
 8004a1e:	460b      	mov	r3, r1
 8004a20:	4641      	mov	r1, r8
 8004a22:	ebb2 0a01 	subs.w	sl, r2, r1
 8004a26:	4649      	mov	r1, r9
 8004a28:	eb63 0b01 	sbc.w	fp, r3, r1
 8004a2c:	f04f 0200 	mov.w	r2, #0
 8004a30:	f04f 0300 	mov.w	r3, #0
 8004a34:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8004a38:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8004a3c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8004a40:	ebb2 040a 	subs.w	r4, r2, sl
 8004a44:	eb63 050b 	sbc.w	r5, r3, fp
 8004a48:	f04f 0200 	mov.w	r2, #0
 8004a4c:	f04f 0300 	mov.w	r3, #0
 8004a50:	00eb      	lsls	r3, r5, #3
 8004a52:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004a56:	00e2      	lsls	r2, r4, #3
 8004a58:	4614      	mov	r4, r2
 8004a5a:	461d      	mov	r5, r3
 8004a5c:	4643      	mov	r3, r8
 8004a5e:	18e3      	adds	r3, r4, r3
 8004a60:	603b      	str	r3, [r7, #0]
 8004a62:	464b      	mov	r3, r9
 8004a64:	eb45 0303 	adc.w	r3, r5, r3
 8004a68:	607b      	str	r3, [r7, #4]
 8004a6a:	f04f 0200 	mov.w	r2, #0
 8004a6e:	f04f 0300 	mov.w	r3, #0
 8004a72:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004a76:	4629      	mov	r1, r5
 8004a78:	028b      	lsls	r3, r1, #10
 8004a7a:	4621      	mov	r1, r4
 8004a7c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004a80:	4621      	mov	r1, r4
 8004a82:	028a      	lsls	r2, r1, #10
 8004a84:	4610      	mov	r0, r2
 8004a86:	4619      	mov	r1, r3
 8004a88:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004a8a:	2200      	movs	r2, #0
 8004a8c:	61bb      	str	r3, [r7, #24]
 8004a8e:	61fa      	str	r2, [r7, #28]
 8004a90:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004a94:	f7fb fbf4 	bl	8000280 <__aeabi_uldivmod>
 8004a98:	4602      	mov	r2, r0
 8004a9a:	460b      	mov	r3, r1
 8004a9c:	4613      	mov	r3, r2
 8004a9e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004aa0:	4b0b      	ldr	r3, [pc, #44]	; (8004ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 8004aa2:	685b      	ldr	r3, [r3, #4]
 8004aa4:	0c1b      	lsrs	r3, r3, #16
 8004aa6:	f003 0303 	and.w	r3, r3, #3
 8004aaa:	3301      	adds	r3, #1
 8004aac:	005b      	lsls	r3, r3, #1
 8004aae:	643b      	str	r3, [r7, #64]	; 0x40
 8004ab0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8004ab2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004ab4:	fbb2 f3f3 	udiv	r3, r2, r3
 8004ab8:	64bb      	str	r3, [r7, #72]	; 0x48
 8004aba:	e002      	b.n	8004ac2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8004abc:	4b05      	ldr	r3, [pc, #20]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x204>)
 8004abe:	64bb      	str	r3, [r7, #72]	; 0x48
 8004ac0:	bf00      	nop
 8004ac2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004ac4:	4618      	mov	r0, r3
 8004ac6:	3750      	adds	r7, #80	; 0x50
 8004ac8:	46bd      	mov	sp, r7
 8004aca:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004ace:	bf00      	nop
 8004ad0:	40023800 	.word	0x40023800
 8004ad4:	00f42400 	.word	0x00f42400
 8004ad8:	007a1200 	.word	0x007a1200

08004adc <HAL_RCC_GetHCLKFreq>:
 8004adc:	b480      	push	{r7}
 8004ade:	af00      	add	r7, sp, #0
 8004ae0:	4b03      	ldr	r3, [pc, #12]	; (8004af0 <HAL_RCC_GetHCLKFreq+0x14>)
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	4618      	mov	r0, r3
 8004ae6:	46bd      	mov	sp, r7
 8004ae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aec:	4770      	bx	lr
 8004aee:	bf00      	nop
 8004af0:	20000000 	.word	0x20000000

08004af4 <HAL_RCC_GetPCLK1Freq>:
 8004af4:	b580      	push	{r7, lr}
 8004af6:	af00      	add	r7, sp, #0
 8004af8:	f7ff fff0 	bl	8004adc <HAL_RCC_GetHCLKFreq>
 8004afc:	4602      	mov	r2, r0
 8004afe:	4b05      	ldr	r3, [pc, #20]	; (8004b14 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004b00:	689b      	ldr	r3, [r3, #8]
 8004b02:	0a9b      	lsrs	r3, r3, #10
 8004b04:	f003 0307 	and.w	r3, r3, #7
 8004b08:	4903      	ldr	r1, [pc, #12]	; (8004b18 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004b0a:	5ccb      	ldrb	r3, [r1, r3]
 8004b0c:	fa22 f303 	lsr.w	r3, r2, r3
 8004b10:	4618      	mov	r0, r3
 8004b12:	bd80      	pop	{r7, pc}
 8004b14:	40023800 	.word	0x40023800
 8004b18:	08009acc 	.word	0x08009acc

08004b1c <HAL_RCC_GetClockConfig>:
 8004b1c:	b480      	push	{r7}
 8004b1e:	b083      	sub	sp, #12
 8004b20:	af00      	add	r7, sp, #0
 8004b22:	6078      	str	r0, [r7, #4]
 8004b24:	6039      	str	r1, [r7, #0]
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	220f      	movs	r2, #15
 8004b2a:	601a      	str	r2, [r3, #0]
 8004b2c:	4b12      	ldr	r3, [pc, #72]	; (8004b78 <HAL_RCC_GetClockConfig+0x5c>)
 8004b2e:	689b      	ldr	r3, [r3, #8]
 8004b30:	f003 0203 	and.w	r2, r3, #3
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	605a      	str	r2, [r3, #4]
 8004b38:	4b0f      	ldr	r3, [pc, #60]	; (8004b78 <HAL_RCC_GetClockConfig+0x5c>)
 8004b3a:	689b      	ldr	r3, [r3, #8]
 8004b3c:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	609a      	str	r2, [r3, #8]
 8004b44:	4b0c      	ldr	r3, [pc, #48]	; (8004b78 <HAL_RCC_GetClockConfig+0x5c>)
 8004b46:	689b      	ldr	r3, [r3, #8]
 8004b48:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	60da      	str	r2, [r3, #12]
 8004b50:	4b09      	ldr	r3, [pc, #36]	; (8004b78 <HAL_RCC_GetClockConfig+0x5c>)
 8004b52:	689b      	ldr	r3, [r3, #8]
 8004b54:	08db      	lsrs	r3, r3, #3
 8004b56:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	611a      	str	r2, [r3, #16]
 8004b5e:	4b07      	ldr	r3, [pc, #28]	; (8004b7c <HAL_RCC_GetClockConfig+0x60>)
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	f003 0207 	and.w	r2, r3, #7
 8004b66:	683b      	ldr	r3, [r7, #0]
 8004b68:	601a      	str	r2, [r3, #0]
 8004b6a:	bf00      	nop
 8004b6c:	370c      	adds	r7, #12
 8004b6e:	46bd      	mov	sp, r7
 8004b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b74:	4770      	bx	lr
 8004b76:	bf00      	nop
 8004b78:	40023800 	.word	0x40023800
 8004b7c:	40023c00 	.word	0x40023c00

08004b80 <HAL_TIM_Base_Init>:
 8004b80:	b580      	push	{r7, lr}
 8004b82:	b082      	sub	sp, #8
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	6078      	str	r0, [r7, #4]
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d101      	bne.n	8004b92 <HAL_TIM_Base_Init+0x12>
 8004b8e:	2301      	movs	r3, #1
 8004b90:	e041      	b.n	8004c16 <HAL_TIM_Base_Init+0x96>
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004b98:	b2db      	uxtb	r3, r3
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d106      	bne.n	8004bac <HAL_TIM_Base_Init+0x2c>
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	2200      	movs	r2, #0
 8004ba2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004ba6:	6878      	ldr	r0, [r7, #4]
 8004ba8:	f000 f839 	bl	8004c1e <HAL_TIM_Base_MspInit>
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	2202      	movs	r2, #2
 8004bb0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	681a      	ldr	r2, [r3, #0]
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	3304      	adds	r3, #4
 8004bbc:	4619      	mov	r1, r3
 8004bbe:	4610      	mov	r0, r2
 8004bc0:	f000 fe2e 	bl	8005820 <TIM_Base_SetConfig>
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2201      	movs	r2, #1
 8004bc8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	2201      	movs	r2, #1
 8004bd0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	2201      	movs	r2, #1
 8004bd8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	2201      	movs	r2, #1
 8004be0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	2201      	movs	r2, #1
 8004be8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	2201      	movs	r2, #1
 8004bf0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	2201      	movs	r2, #1
 8004bf8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	2201      	movs	r2, #1
 8004c00:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	2201      	movs	r2, #1
 8004c08:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	2201      	movs	r2, #1
 8004c10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c14:	2300      	movs	r3, #0
 8004c16:	4618      	mov	r0, r3
 8004c18:	3708      	adds	r7, #8
 8004c1a:	46bd      	mov	sp, r7
 8004c1c:	bd80      	pop	{r7, pc}

08004c1e <HAL_TIM_Base_MspInit>:
 8004c1e:	b480      	push	{r7}
 8004c20:	b083      	sub	sp, #12
 8004c22:	af00      	add	r7, sp, #0
 8004c24:	6078      	str	r0, [r7, #4]
 8004c26:	bf00      	nop
 8004c28:	370c      	adds	r7, #12
 8004c2a:	46bd      	mov	sp, r7
 8004c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c30:	4770      	bx	lr
	...

08004c34 <HAL_TIM_Base_Start_IT>:
 8004c34:	b480      	push	{r7}
 8004c36:	b085      	sub	sp, #20
 8004c38:	af00      	add	r7, sp, #0
 8004c3a:	6078      	str	r0, [r7, #4]
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004c42:	b2db      	uxtb	r3, r3
 8004c44:	2b01      	cmp	r3, #1
 8004c46:	d001      	beq.n	8004c4c <HAL_TIM_Base_Start_IT+0x18>
 8004c48:	2301      	movs	r3, #1
 8004c4a:	e044      	b.n	8004cd6 <HAL_TIM_Base_Start_IT+0xa2>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	2202      	movs	r2, #2
 8004c50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	68da      	ldr	r2, [r3, #12]
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	f042 0201 	orr.w	r2, r2, #1
 8004c62:	60da      	str	r2, [r3, #12]
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	4a1e      	ldr	r2, [pc, #120]	; (8004ce4 <HAL_TIM_Base_Start_IT+0xb0>)
 8004c6a:	4293      	cmp	r3, r2
 8004c6c:	d018      	beq.n	8004ca0 <HAL_TIM_Base_Start_IT+0x6c>
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004c76:	d013      	beq.n	8004ca0 <HAL_TIM_Base_Start_IT+0x6c>
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	4a1a      	ldr	r2, [pc, #104]	; (8004ce8 <HAL_TIM_Base_Start_IT+0xb4>)
 8004c7e:	4293      	cmp	r3, r2
 8004c80:	d00e      	beq.n	8004ca0 <HAL_TIM_Base_Start_IT+0x6c>
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	4a19      	ldr	r2, [pc, #100]	; (8004cec <HAL_TIM_Base_Start_IT+0xb8>)
 8004c88:	4293      	cmp	r3, r2
 8004c8a:	d009      	beq.n	8004ca0 <HAL_TIM_Base_Start_IT+0x6c>
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	4a17      	ldr	r2, [pc, #92]	; (8004cf0 <HAL_TIM_Base_Start_IT+0xbc>)
 8004c92:	4293      	cmp	r3, r2
 8004c94:	d004      	beq.n	8004ca0 <HAL_TIM_Base_Start_IT+0x6c>
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	4a16      	ldr	r2, [pc, #88]	; (8004cf4 <HAL_TIM_Base_Start_IT+0xc0>)
 8004c9c:	4293      	cmp	r3, r2
 8004c9e:	d111      	bne.n	8004cc4 <HAL_TIM_Base_Start_IT+0x90>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	689b      	ldr	r3, [r3, #8]
 8004ca6:	f003 0307 	and.w	r3, r3, #7
 8004caa:	60fb      	str	r3, [r7, #12]
 8004cac:	68fb      	ldr	r3, [r7, #12]
 8004cae:	2b06      	cmp	r3, #6
 8004cb0:	d010      	beq.n	8004cd4 <HAL_TIM_Base_Start_IT+0xa0>
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	681a      	ldr	r2, [r3, #0]
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	f042 0201 	orr.w	r2, r2, #1
 8004cc0:	601a      	str	r2, [r3, #0]
 8004cc2:	e007      	b.n	8004cd4 <HAL_TIM_Base_Start_IT+0xa0>
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	681a      	ldr	r2, [r3, #0]
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f042 0201 	orr.w	r2, r2, #1
 8004cd2:	601a      	str	r2, [r3, #0]
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	3714      	adds	r7, #20
 8004cda:	46bd      	mov	sp, r7
 8004cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ce0:	4770      	bx	lr
 8004ce2:	bf00      	nop
 8004ce4:	40010000 	.word	0x40010000
 8004ce8:	40000400 	.word	0x40000400
 8004cec:	40000800 	.word	0x40000800
 8004cf0:	40000c00 	.word	0x40000c00
 8004cf4:	40014000 	.word	0x40014000

08004cf8 <HAL_TIM_PWM_Init>:
 8004cf8:	b580      	push	{r7, lr}
 8004cfa:	b082      	sub	sp, #8
 8004cfc:	af00      	add	r7, sp, #0
 8004cfe:	6078      	str	r0, [r7, #4]
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d101      	bne.n	8004d0a <HAL_TIM_PWM_Init+0x12>
 8004d06:	2301      	movs	r3, #1
 8004d08:	e041      	b.n	8004d8e <HAL_TIM_PWM_Init+0x96>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004d10:	b2db      	uxtb	r3, r3
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d106      	bne.n	8004d24 <HAL_TIM_PWM_Init+0x2c>
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	2200      	movs	r2, #0
 8004d1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004d1e:	6878      	ldr	r0, [r7, #4]
 8004d20:	f7fc fab6 	bl	8001290 <HAL_TIM_PWM_MspInit>
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	2202      	movs	r2, #2
 8004d28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	681a      	ldr	r2, [r3, #0]
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	3304      	adds	r3, #4
 8004d34:	4619      	mov	r1, r3
 8004d36:	4610      	mov	r0, r2
 8004d38:	f000 fd72 	bl	8005820 <TIM_Base_SetConfig>
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	2201      	movs	r2, #1
 8004d40:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	2201      	movs	r2, #1
 8004d48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	2201      	movs	r2, #1
 8004d50:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	2201      	movs	r2, #1
 8004d58:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	2201      	movs	r2, #1
 8004d60:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	2201      	movs	r2, #1
 8004d68:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	2201      	movs	r2, #1
 8004d70:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	2201      	movs	r2, #1
 8004d78:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	2201      	movs	r2, #1
 8004d80:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	2201      	movs	r2, #1
 8004d88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d8c:	2300      	movs	r3, #0
 8004d8e:	4618      	mov	r0, r3
 8004d90:	3708      	adds	r7, #8
 8004d92:	46bd      	mov	sp, r7
 8004d94:	bd80      	pop	{r7, pc}
	...

08004d98 <HAL_TIM_PWM_Start_DMA>:
 8004d98:	b580      	push	{r7, lr}
 8004d9a:	b086      	sub	sp, #24
 8004d9c:	af00      	add	r7, sp, #0
 8004d9e:	60f8      	str	r0, [r7, #12]
 8004da0:	60b9      	str	r1, [r7, #8]
 8004da2:	607a      	str	r2, [r7, #4]
 8004da4:	807b      	strh	r3, [r7, #2]
 8004da6:	2300      	movs	r3, #0
 8004da8:	75fb      	strb	r3, [r7, #23]
 8004daa:	68bb      	ldr	r3, [r7, #8]
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d109      	bne.n	8004dc4 <HAL_TIM_PWM_Start_DMA+0x2c>
 8004db0:	68fb      	ldr	r3, [r7, #12]
 8004db2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004db6:	b2db      	uxtb	r3, r3
 8004db8:	2b02      	cmp	r3, #2
 8004dba:	bf0c      	ite	eq
 8004dbc:	2301      	moveq	r3, #1
 8004dbe:	2300      	movne	r3, #0
 8004dc0:	b2db      	uxtb	r3, r3
 8004dc2:	e022      	b.n	8004e0a <HAL_TIM_PWM_Start_DMA+0x72>
 8004dc4:	68bb      	ldr	r3, [r7, #8]
 8004dc6:	2b04      	cmp	r3, #4
 8004dc8:	d109      	bne.n	8004dde <HAL_TIM_PWM_Start_DMA+0x46>
 8004dca:	68fb      	ldr	r3, [r7, #12]
 8004dcc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8004dd0:	b2db      	uxtb	r3, r3
 8004dd2:	2b02      	cmp	r3, #2
 8004dd4:	bf0c      	ite	eq
 8004dd6:	2301      	moveq	r3, #1
 8004dd8:	2300      	movne	r3, #0
 8004dda:	b2db      	uxtb	r3, r3
 8004ddc:	e015      	b.n	8004e0a <HAL_TIM_PWM_Start_DMA+0x72>
 8004dde:	68bb      	ldr	r3, [r7, #8]
 8004de0:	2b08      	cmp	r3, #8
 8004de2:	d109      	bne.n	8004df8 <HAL_TIM_PWM_Start_DMA+0x60>
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004dea:	b2db      	uxtb	r3, r3
 8004dec:	2b02      	cmp	r3, #2
 8004dee:	bf0c      	ite	eq
 8004df0:	2301      	moveq	r3, #1
 8004df2:	2300      	movne	r3, #0
 8004df4:	b2db      	uxtb	r3, r3
 8004df6:	e008      	b.n	8004e0a <HAL_TIM_PWM_Start_DMA+0x72>
 8004df8:	68fb      	ldr	r3, [r7, #12]
 8004dfa:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004dfe:	b2db      	uxtb	r3, r3
 8004e00:	2b02      	cmp	r3, #2
 8004e02:	bf0c      	ite	eq
 8004e04:	2301      	moveq	r3, #1
 8004e06:	2300      	movne	r3, #0
 8004e08:	b2db      	uxtb	r3, r3
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d001      	beq.n	8004e12 <HAL_TIM_PWM_Start_DMA+0x7a>
 8004e0e:	2302      	movs	r3, #2
 8004e10:	e15d      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8004e12:	68bb      	ldr	r3, [r7, #8]
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	d109      	bne.n	8004e2c <HAL_TIM_PWM_Start_DMA+0x94>
 8004e18:	68fb      	ldr	r3, [r7, #12]
 8004e1a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004e1e:	b2db      	uxtb	r3, r3
 8004e20:	2b01      	cmp	r3, #1
 8004e22:	bf0c      	ite	eq
 8004e24:	2301      	moveq	r3, #1
 8004e26:	2300      	movne	r3, #0
 8004e28:	b2db      	uxtb	r3, r3
 8004e2a:	e022      	b.n	8004e72 <HAL_TIM_PWM_Start_DMA+0xda>
 8004e2c:	68bb      	ldr	r3, [r7, #8]
 8004e2e:	2b04      	cmp	r3, #4
 8004e30:	d109      	bne.n	8004e46 <HAL_TIM_PWM_Start_DMA+0xae>
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8004e38:	b2db      	uxtb	r3, r3
 8004e3a:	2b01      	cmp	r3, #1
 8004e3c:	bf0c      	ite	eq
 8004e3e:	2301      	moveq	r3, #1
 8004e40:	2300      	movne	r3, #0
 8004e42:	b2db      	uxtb	r3, r3
 8004e44:	e015      	b.n	8004e72 <HAL_TIM_PWM_Start_DMA+0xda>
 8004e46:	68bb      	ldr	r3, [r7, #8]
 8004e48:	2b08      	cmp	r3, #8
 8004e4a:	d109      	bne.n	8004e60 <HAL_TIM_PWM_Start_DMA+0xc8>
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004e52:	b2db      	uxtb	r3, r3
 8004e54:	2b01      	cmp	r3, #1
 8004e56:	bf0c      	ite	eq
 8004e58:	2301      	moveq	r3, #1
 8004e5a:	2300      	movne	r3, #0
 8004e5c:	b2db      	uxtb	r3, r3
 8004e5e:	e008      	b.n	8004e72 <HAL_TIM_PWM_Start_DMA+0xda>
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004e66:	b2db      	uxtb	r3, r3
 8004e68:	2b01      	cmp	r3, #1
 8004e6a:	bf0c      	ite	eq
 8004e6c:	2301      	moveq	r3, #1
 8004e6e:	2300      	movne	r3, #0
 8004e70:	b2db      	uxtb	r3, r3
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d024      	beq.n	8004ec0 <HAL_TIM_PWM_Start_DMA+0x128>
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	2b00      	cmp	r3, #0
 8004e7a:	d104      	bne.n	8004e86 <HAL_TIM_PWM_Start_DMA+0xee>
 8004e7c:	887b      	ldrh	r3, [r7, #2]
 8004e7e:	2b00      	cmp	r3, #0
 8004e80:	d001      	beq.n	8004e86 <HAL_TIM_PWM_Start_DMA+0xee>
 8004e82:	2301      	movs	r3, #1
 8004e84:	e123      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8004e86:	68bb      	ldr	r3, [r7, #8]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d104      	bne.n	8004e96 <HAL_TIM_PWM_Start_DMA+0xfe>
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	2202      	movs	r2, #2
 8004e90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004e94:	e016      	b.n	8004ec4 <HAL_TIM_PWM_Start_DMA+0x12c>
 8004e96:	68bb      	ldr	r3, [r7, #8]
 8004e98:	2b04      	cmp	r3, #4
 8004e9a:	d104      	bne.n	8004ea6 <HAL_TIM_PWM_Start_DMA+0x10e>
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	2202      	movs	r2, #2
 8004ea0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004ea4:	e00e      	b.n	8004ec4 <HAL_TIM_PWM_Start_DMA+0x12c>
 8004ea6:	68bb      	ldr	r3, [r7, #8]
 8004ea8:	2b08      	cmp	r3, #8
 8004eaa:	d104      	bne.n	8004eb6 <HAL_TIM_PWM_Start_DMA+0x11e>
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	2202      	movs	r2, #2
 8004eb0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004eb4:	e006      	b.n	8004ec4 <HAL_TIM_PWM_Start_DMA+0x12c>
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	2202      	movs	r2, #2
 8004eba:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004ebe:	e001      	b.n	8004ec4 <HAL_TIM_PWM_Start_DMA+0x12c>
 8004ec0:	2301      	movs	r3, #1
 8004ec2:	e104      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8004ec4:	68bb      	ldr	r3, [r7, #8]
 8004ec6:	2b0c      	cmp	r3, #12
 8004ec8:	f200 80ae 	bhi.w	8005028 <HAL_TIM_PWM_Start_DMA+0x290>
 8004ecc:	a201      	add	r2, pc, #4	; (adr r2, 8004ed4 <HAL_TIM_PWM_Start_DMA+0x13c>)
 8004ece:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004ed2:	bf00      	nop
 8004ed4:	08004f09 	.word	0x08004f09
 8004ed8:	08005029 	.word	0x08005029
 8004edc:	08005029 	.word	0x08005029
 8004ee0:	08005029 	.word	0x08005029
 8004ee4:	08004f51 	.word	0x08004f51
 8004ee8:	08005029 	.word	0x08005029
 8004eec:	08005029 	.word	0x08005029
 8004ef0:	08005029 	.word	0x08005029
 8004ef4:	08004f99 	.word	0x08004f99
 8004ef8:	08005029 	.word	0x08005029
 8004efc:	08005029 	.word	0x08005029
 8004f00:	08005029 	.word	0x08005029
 8004f04:	08004fe1 	.word	0x08004fe1
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f0c:	4a72      	ldr	r2, [pc, #456]	; (80050d8 <HAL_TIM_PWM_Start_DMA+0x340>)
 8004f0e:	63da      	str	r2, [r3, #60]	; 0x3c
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f14:	4a71      	ldr	r2, [pc, #452]	; (80050dc <HAL_TIM_PWM_Start_DMA+0x344>)
 8004f16:	641a      	str	r2, [r3, #64]	; 0x40
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f1c:	4a70      	ldr	r2, [pc, #448]	; (80050e0 <HAL_TIM_PWM_Start_DMA+0x348>)
 8004f1e:	64da      	str	r2, [r3, #76]	; 0x4c
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8004f24:	6879      	ldr	r1, [r7, #4]
 8004f26:	68fb      	ldr	r3, [r7, #12]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	3334      	adds	r3, #52	; 0x34
 8004f2c:	461a      	mov	r2, r3
 8004f2e:	887b      	ldrh	r3, [r7, #2]
 8004f30:	f7fe f88a 	bl	8003048 <HAL_DMA_Start_IT>
 8004f34:	4603      	mov	r3, r0
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	d001      	beq.n	8004f3e <HAL_TIM_PWM_Start_DMA+0x1a6>
 8004f3a:	2301      	movs	r3, #1
 8004f3c:	e0c7      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	68da      	ldr	r2, [r3, #12]
 8004f44:	68fb      	ldr	r3, [r7, #12]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004f4c:	60da      	str	r2, [r3, #12]
 8004f4e:	e06e      	b.n	800502e <HAL_TIM_PWM_Start_DMA+0x296>
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f54:	4a60      	ldr	r2, [pc, #384]	; (80050d8 <HAL_TIM_PWM_Start_DMA+0x340>)
 8004f56:	63da      	str	r2, [r3, #60]	; 0x3c
 8004f58:	68fb      	ldr	r3, [r7, #12]
 8004f5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f5c:	4a5f      	ldr	r2, [pc, #380]	; (80050dc <HAL_TIM_PWM_Start_DMA+0x344>)
 8004f5e:	641a      	str	r2, [r3, #64]	; 0x40
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f64:	4a5e      	ldr	r2, [pc, #376]	; (80050e0 <HAL_TIM_PWM_Start_DMA+0x348>)
 8004f66:	64da      	str	r2, [r3, #76]	; 0x4c
 8004f68:	68fb      	ldr	r3, [r7, #12]
 8004f6a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8004f6c:	6879      	ldr	r1, [r7, #4]
 8004f6e:	68fb      	ldr	r3, [r7, #12]
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	3338      	adds	r3, #56	; 0x38
 8004f74:	461a      	mov	r2, r3
 8004f76:	887b      	ldrh	r3, [r7, #2]
 8004f78:	f7fe f866 	bl	8003048 <HAL_DMA_Start_IT>
 8004f7c:	4603      	mov	r3, r0
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d001      	beq.n	8004f86 <HAL_TIM_PWM_Start_DMA+0x1ee>
 8004f82:	2301      	movs	r3, #1
 8004f84:	e0a3      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8004f86:	68fb      	ldr	r3, [r7, #12]
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	68da      	ldr	r2, [r3, #12]
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	681b      	ldr	r3, [r3, #0]
 8004f90:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004f94:	60da      	str	r2, [r3, #12]
 8004f96:	e04a      	b.n	800502e <HAL_TIM_PWM_Start_DMA+0x296>
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f9c:	4a4e      	ldr	r2, [pc, #312]	; (80050d8 <HAL_TIM_PWM_Start_DMA+0x340>)
 8004f9e:	63da      	str	r2, [r3, #60]	; 0x3c
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004fa4:	4a4d      	ldr	r2, [pc, #308]	; (80050dc <HAL_TIM_PWM_Start_DMA+0x344>)
 8004fa6:	641a      	str	r2, [r3, #64]	; 0x40
 8004fa8:	68fb      	ldr	r3, [r7, #12]
 8004faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004fac:	4a4c      	ldr	r2, [pc, #304]	; (80050e0 <HAL_TIM_PWM_Start_DMA+0x348>)
 8004fae:	64da      	str	r2, [r3, #76]	; 0x4c
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8004fb4:	6879      	ldr	r1, [r7, #4]
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	333c      	adds	r3, #60	; 0x3c
 8004fbc:	461a      	mov	r2, r3
 8004fbe:	887b      	ldrh	r3, [r7, #2]
 8004fc0:	f7fe f842 	bl	8003048 <HAL_DMA_Start_IT>
 8004fc4:	4603      	mov	r3, r0
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	d001      	beq.n	8004fce <HAL_TIM_PWM_Start_DMA+0x236>
 8004fca:	2301      	movs	r3, #1
 8004fcc:	e07f      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8004fce:	68fb      	ldr	r3, [r7, #12]
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	68da      	ldr	r2, [r3, #12]
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004fdc:	60da      	str	r2, [r3, #12]
 8004fde:	e026      	b.n	800502e <HAL_TIM_PWM_Start_DMA+0x296>
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fe4:	4a3c      	ldr	r2, [pc, #240]	; (80050d8 <HAL_TIM_PWM_Start_DMA+0x340>)
 8004fe6:	63da      	str	r2, [r3, #60]	; 0x3c
 8004fe8:	68fb      	ldr	r3, [r7, #12]
 8004fea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fec:	4a3b      	ldr	r2, [pc, #236]	; (80050dc <HAL_TIM_PWM_Start_DMA+0x344>)
 8004fee:	641a      	str	r2, [r3, #64]	; 0x40
 8004ff0:	68fb      	ldr	r3, [r7, #12]
 8004ff2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ff4:	4a3a      	ldr	r2, [pc, #232]	; (80050e0 <HAL_TIM_PWM_Start_DMA+0x348>)
 8004ff6:	64da      	str	r2, [r3, #76]	; 0x4c
 8004ff8:	68fb      	ldr	r3, [r7, #12]
 8004ffa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8004ffc:	6879      	ldr	r1, [r7, #4]
 8004ffe:	68fb      	ldr	r3, [r7, #12]
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	3340      	adds	r3, #64	; 0x40
 8005004:	461a      	mov	r2, r3
 8005006:	887b      	ldrh	r3, [r7, #2]
 8005008:	f7fe f81e 	bl	8003048 <HAL_DMA_Start_IT>
 800500c:	4603      	mov	r3, r0
 800500e:	2b00      	cmp	r3, #0
 8005010:	d001      	beq.n	8005016 <HAL_TIM_PWM_Start_DMA+0x27e>
 8005012:	2301      	movs	r3, #1
 8005014:	e05b      	b.n	80050ce <HAL_TIM_PWM_Start_DMA+0x336>
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	68da      	ldr	r2, [r3, #12]
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005024:	60da      	str	r2, [r3, #12]
 8005026:	e002      	b.n	800502e <HAL_TIM_PWM_Start_DMA+0x296>
 8005028:	2301      	movs	r3, #1
 800502a:	75fb      	strb	r3, [r7, #23]
 800502c:	bf00      	nop
 800502e:	7dfb      	ldrb	r3, [r7, #23]
 8005030:	2b00      	cmp	r3, #0
 8005032:	d14b      	bne.n	80050cc <HAL_TIM_PWM_Start_DMA+0x334>
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	681b      	ldr	r3, [r3, #0]
 8005038:	2201      	movs	r2, #1
 800503a:	68b9      	ldr	r1, [r7, #8]
 800503c:	4618      	mov	r0, r3
 800503e:	f000 fdfb 	bl	8005c38 <TIM_CCxChannelCmd>
 8005042:	68fb      	ldr	r3, [r7, #12]
 8005044:	681b      	ldr	r3, [r3, #0]
 8005046:	4a27      	ldr	r2, [pc, #156]	; (80050e4 <HAL_TIM_PWM_Start_DMA+0x34c>)
 8005048:	4293      	cmp	r3, r2
 800504a:	d107      	bne.n	800505c <HAL_TIM_PWM_Start_DMA+0x2c4>
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005052:	68fb      	ldr	r3, [r7, #12]
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800505a:	645a      	str	r2, [r3, #68]	; 0x44
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	4a20      	ldr	r2, [pc, #128]	; (80050e4 <HAL_TIM_PWM_Start_DMA+0x34c>)
 8005062:	4293      	cmp	r3, r2
 8005064:	d018      	beq.n	8005098 <HAL_TIM_PWM_Start_DMA+0x300>
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800506e:	d013      	beq.n	8005098 <HAL_TIM_PWM_Start_DMA+0x300>
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4a1c      	ldr	r2, [pc, #112]	; (80050e8 <HAL_TIM_PWM_Start_DMA+0x350>)
 8005076:	4293      	cmp	r3, r2
 8005078:	d00e      	beq.n	8005098 <HAL_TIM_PWM_Start_DMA+0x300>
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	4a1b      	ldr	r2, [pc, #108]	; (80050ec <HAL_TIM_PWM_Start_DMA+0x354>)
 8005080:	4293      	cmp	r3, r2
 8005082:	d009      	beq.n	8005098 <HAL_TIM_PWM_Start_DMA+0x300>
 8005084:	68fb      	ldr	r3, [r7, #12]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	4a19      	ldr	r2, [pc, #100]	; (80050f0 <HAL_TIM_PWM_Start_DMA+0x358>)
 800508a:	4293      	cmp	r3, r2
 800508c:	d004      	beq.n	8005098 <HAL_TIM_PWM_Start_DMA+0x300>
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	4a18      	ldr	r2, [pc, #96]	; (80050f4 <HAL_TIM_PWM_Start_DMA+0x35c>)
 8005094:	4293      	cmp	r3, r2
 8005096:	d111      	bne.n	80050bc <HAL_TIM_PWM_Start_DMA+0x324>
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	689b      	ldr	r3, [r3, #8]
 800509e:	f003 0307 	and.w	r3, r3, #7
 80050a2:	613b      	str	r3, [r7, #16]
 80050a4:	693b      	ldr	r3, [r7, #16]
 80050a6:	2b06      	cmp	r3, #6
 80050a8:	d010      	beq.n	80050cc <HAL_TIM_PWM_Start_DMA+0x334>
 80050aa:	68fb      	ldr	r3, [r7, #12]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	681a      	ldr	r2, [r3, #0]
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	f042 0201 	orr.w	r2, r2, #1
 80050b8:	601a      	str	r2, [r3, #0]
 80050ba:	e007      	b.n	80050cc <HAL_TIM_PWM_Start_DMA+0x334>
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	681a      	ldr	r2, [r3, #0]
 80050c2:	68fb      	ldr	r3, [r7, #12]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	f042 0201 	orr.w	r2, r2, #1
 80050ca:	601a      	str	r2, [r3, #0]
 80050cc:	7dfb      	ldrb	r3, [r7, #23]
 80050ce:	4618      	mov	r0, r3
 80050d0:	3718      	adds	r7, #24
 80050d2:	46bd      	mov	sp, r7
 80050d4:	bd80      	pop	{r7, pc}
 80050d6:	bf00      	nop
 80050d8:	0800570f 	.word	0x0800570f
 80050dc:	080057b7 	.word	0x080057b7
 80050e0:	0800567d 	.word	0x0800567d
 80050e4:	40010000 	.word	0x40010000
 80050e8:	40000400 	.word	0x40000400
 80050ec:	40000800 	.word	0x40000800
 80050f0:	40000c00 	.word	0x40000c00
 80050f4:	40014000 	.word	0x40014000

080050f8 <HAL_TIM_PWM_Stop_DMA>:
 80050f8:	b580      	push	{r7, lr}
 80050fa:	b084      	sub	sp, #16
 80050fc:	af00      	add	r7, sp, #0
 80050fe:	6078      	str	r0, [r7, #4]
 8005100:	6039      	str	r1, [r7, #0]
 8005102:	2300      	movs	r3, #0
 8005104:	73fb      	strb	r3, [r7, #15]
 8005106:	683b      	ldr	r3, [r7, #0]
 8005108:	2b0c      	cmp	r3, #12
 800510a:	d855      	bhi.n	80051b8 <HAL_TIM_PWM_Stop_DMA+0xc0>
 800510c:	a201      	add	r2, pc, #4	; (adr r2, 8005114 <HAL_TIM_PWM_Stop_DMA+0x1c>)
 800510e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005112:	bf00      	nop
 8005114:	08005149 	.word	0x08005149
 8005118:	080051b9 	.word	0x080051b9
 800511c:	080051b9 	.word	0x080051b9
 8005120:	080051b9 	.word	0x080051b9
 8005124:	08005165 	.word	0x08005165
 8005128:	080051b9 	.word	0x080051b9
 800512c:	080051b9 	.word	0x080051b9
 8005130:	080051b9 	.word	0x080051b9
 8005134:	08005181 	.word	0x08005181
 8005138:	080051b9 	.word	0x080051b9
 800513c:	080051b9 	.word	0x080051b9
 8005140:	080051b9 	.word	0x080051b9
 8005144:	0800519d 	.word	0x0800519d
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	68da      	ldr	r2, [r3, #12]
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005156:	60da      	str	r2, [r3, #12]
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800515c:	4618      	mov	r0, r3
 800515e:	f7fd ffcb 	bl	80030f8 <HAL_DMA_Abort_IT>
 8005162:	e02c      	b.n	80051be <HAL_TIM_PWM_Stop_DMA+0xc6>
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	68da      	ldr	r2, [r3, #12]
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005172:	60da      	str	r2, [r3, #12]
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005178:	4618      	mov	r0, r3
 800517a:	f7fd ffbd 	bl	80030f8 <HAL_DMA_Abort_IT>
 800517e:	e01e      	b.n	80051be <HAL_TIM_PWM_Stop_DMA+0xc6>
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	68da      	ldr	r2, [r3, #12]
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800518e:	60da      	str	r2, [r3, #12]
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005194:	4618      	mov	r0, r3
 8005196:	f7fd ffaf 	bl	80030f8 <HAL_DMA_Abort_IT>
 800519a:	e010      	b.n	80051be <HAL_TIM_PWM_Stop_DMA+0xc6>
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	68da      	ldr	r2, [r3, #12]
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80051aa:	60da      	str	r2, [r3, #12]
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051b0:	4618      	mov	r0, r3
 80051b2:	f7fd ffa1 	bl	80030f8 <HAL_DMA_Abort_IT>
 80051b6:	e002      	b.n	80051be <HAL_TIM_PWM_Stop_DMA+0xc6>
 80051b8:	2301      	movs	r3, #1
 80051ba:	73fb      	strb	r3, [r7, #15]
 80051bc:	bf00      	nop
 80051be:	7bfb      	ldrb	r3, [r7, #15]
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	d157      	bne.n	8005274 <HAL_TIM_PWM_Stop_DMA+0x17c>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	2200      	movs	r2, #0
 80051ca:	6839      	ldr	r1, [r7, #0]
 80051cc:	4618      	mov	r0, r3
 80051ce:	f000 fd33 	bl	8005c38 <TIM_CCxChannelCmd>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	4a2a      	ldr	r2, [pc, #168]	; (8005280 <HAL_TIM_PWM_Stop_DMA+0x188>)
 80051d8:	4293      	cmp	r3, r2
 80051da:	d117      	bne.n	800520c <HAL_TIM_PWM_Stop_DMA+0x114>
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	6a1a      	ldr	r2, [r3, #32]
 80051e2:	f241 1311 	movw	r3, #4369	; 0x1111
 80051e6:	4013      	ands	r3, r2
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	d10f      	bne.n	800520c <HAL_TIM_PWM_Stop_DMA+0x114>
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	6a1a      	ldr	r2, [r3, #32]
 80051f2:	f240 4344 	movw	r3, #1092	; 0x444
 80051f6:	4013      	ands	r3, r2
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d107      	bne.n	800520c <HAL_TIM_PWM_Stop_DMA+0x114>
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	681b      	ldr	r3, [r3, #0]
 8005200:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800520a:	645a      	str	r2, [r3, #68]	; 0x44
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	6a1a      	ldr	r2, [r3, #32]
 8005212:	f241 1311 	movw	r3, #4369	; 0x1111
 8005216:	4013      	ands	r3, r2
 8005218:	2b00      	cmp	r3, #0
 800521a:	d10f      	bne.n	800523c <HAL_TIM_PWM_Stop_DMA+0x144>
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	6a1a      	ldr	r2, [r3, #32]
 8005222:	f240 4344 	movw	r3, #1092	; 0x444
 8005226:	4013      	ands	r3, r2
 8005228:	2b00      	cmp	r3, #0
 800522a:	d107      	bne.n	800523c <HAL_TIM_PWM_Stop_DMA+0x144>
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	681a      	ldr	r2, [r3, #0]
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	681b      	ldr	r3, [r3, #0]
 8005236:	f022 0201 	bic.w	r2, r2, #1
 800523a:	601a      	str	r2, [r3, #0]
 800523c:	683b      	ldr	r3, [r7, #0]
 800523e:	2b00      	cmp	r3, #0
 8005240:	d104      	bne.n	800524c <HAL_TIM_PWM_Stop_DMA+0x154>
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	2201      	movs	r2, #1
 8005246:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800524a:	e013      	b.n	8005274 <HAL_TIM_PWM_Stop_DMA+0x17c>
 800524c:	683b      	ldr	r3, [r7, #0]
 800524e:	2b04      	cmp	r3, #4
 8005250:	d104      	bne.n	800525c <HAL_TIM_PWM_Stop_DMA+0x164>
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	2201      	movs	r2, #1
 8005256:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800525a:	e00b      	b.n	8005274 <HAL_TIM_PWM_Stop_DMA+0x17c>
 800525c:	683b      	ldr	r3, [r7, #0]
 800525e:	2b08      	cmp	r3, #8
 8005260:	d104      	bne.n	800526c <HAL_TIM_PWM_Stop_DMA+0x174>
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	2201      	movs	r2, #1
 8005266:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800526a:	e003      	b.n	8005274 <HAL_TIM_PWM_Stop_DMA+0x17c>
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	2201      	movs	r2, #1
 8005270:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005274:	7bfb      	ldrb	r3, [r7, #15]
 8005276:	4618      	mov	r0, r3
 8005278:	3710      	adds	r7, #16
 800527a:	46bd      	mov	sp, r7
 800527c:	bd80      	pop	{r7, pc}
 800527e:	bf00      	nop
 8005280:	40010000 	.word	0x40010000

08005284 <HAL_TIM_IRQHandler>:
 8005284:	b580      	push	{r7, lr}
 8005286:	b082      	sub	sp, #8
 8005288:	af00      	add	r7, sp, #0
 800528a:	6078      	str	r0, [r7, #4]
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	691b      	ldr	r3, [r3, #16]
 8005292:	f003 0302 	and.w	r3, r3, #2
 8005296:	2b02      	cmp	r3, #2
 8005298:	d122      	bne.n	80052e0 <HAL_TIM_IRQHandler+0x5c>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	68db      	ldr	r3, [r3, #12]
 80052a0:	f003 0302 	and.w	r3, r3, #2
 80052a4:	2b02      	cmp	r3, #2
 80052a6:	d11b      	bne.n	80052e0 <HAL_TIM_IRQHandler+0x5c>
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	f06f 0202 	mvn.w	r2, #2
 80052b0:	611a      	str	r2, [r3, #16]
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	2201      	movs	r2, #1
 80052b6:	771a      	strb	r2, [r3, #28]
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	699b      	ldr	r3, [r3, #24]
 80052be:	f003 0303 	and.w	r3, r3, #3
 80052c2:	2b00      	cmp	r3, #0
 80052c4:	d003      	beq.n	80052ce <HAL_TIM_IRQHandler+0x4a>
 80052c6:	6878      	ldr	r0, [r7, #4]
 80052c8:	f000 f9b0 	bl	800562c <HAL_TIM_IC_CaptureCallback>
 80052cc:	e005      	b.n	80052da <HAL_TIM_IRQHandler+0x56>
 80052ce:	6878      	ldr	r0, [r7, #4]
 80052d0:	f000 f9a2 	bl	8005618 <HAL_TIM_OC_DelayElapsedCallback>
 80052d4:	6878      	ldr	r0, [r7, #4]
 80052d6:	f7fd f91f 	bl	8002518 <HAL_TIM_PWM_PulseFinishedCallback>
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	2200      	movs	r2, #0
 80052de:	771a      	strb	r2, [r3, #28]
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	691b      	ldr	r3, [r3, #16]
 80052e6:	f003 0304 	and.w	r3, r3, #4
 80052ea:	2b04      	cmp	r3, #4
 80052ec:	d122      	bne.n	8005334 <HAL_TIM_IRQHandler+0xb0>
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	68db      	ldr	r3, [r3, #12]
 80052f4:	f003 0304 	and.w	r3, r3, #4
 80052f8:	2b04      	cmp	r3, #4
 80052fa:	d11b      	bne.n	8005334 <HAL_TIM_IRQHandler+0xb0>
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	f06f 0204 	mvn.w	r2, #4
 8005304:	611a      	str	r2, [r3, #16]
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	2202      	movs	r2, #2
 800530a:	771a      	strb	r2, [r3, #28]
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	699b      	ldr	r3, [r3, #24]
 8005312:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005316:	2b00      	cmp	r3, #0
 8005318:	d003      	beq.n	8005322 <HAL_TIM_IRQHandler+0x9e>
 800531a:	6878      	ldr	r0, [r7, #4]
 800531c:	f000 f986 	bl	800562c <HAL_TIM_IC_CaptureCallback>
 8005320:	e005      	b.n	800532e <HAL_TIM_IRQHandler+0xaa>
 8005322:	6878      	ldr	r0, [r7, #4]
 8005324:	f000 f978 	bl	8005618 <HAL_TIM_OC_DelayElapsedCallback>
 8005328:	6878      	ldr	r0, [r7, #4]
 800532a:	f7fd f8f5 	bl	8002518 <HAL_TIM_PWM_PulseFinishedCallback>
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	2200      	movs	r2, #0
 8005332:	771a      	strb	r2, [r3, #28]
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	691b      	ldr	r3, [r3, #16]
 800533a:	f003 0308 	and.w	r3, r3, #8
 800533e:	2b08      	cmp	r3, #8
 8005340:	d122      	bne.n	8005388 <HAL_TIM_IRQHandler+0x104>
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	68db      	ldr	r3, [r3, #12]
 8005348:	f003 0308 	and.w	r3, r3, #8
 800534c:	2b08      	cmp	r3, #8
 800534e:	d11b      	bne.n	8005388 <HAL_TIM_IRQHandler+0x104>
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	f06f 0208 	mvn.w	r2, #8
 8005358:	611a      	str	r2, [r3, #16]
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	2204      	movs	r2, #4
 800535e:	771a      	strb	r2, [r3, #28]
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	69db      	ldr	r3, [r3, #28]
 8005366:	f003 0303 	and.w	r3, r3, #3
 800536a:	2b00      	cmp	r3, #0
 800536c:	d003      	beq.n	8005376 <HAL_TIM_IRQHandler+0xf2>
 800536e:	6878      	ldr	r0, [r7, #4]
 8005370:	f000 f95c 	bl	800562c <HAL_TIM_IC_CaptureCallback>
 8005374:	e005      	b.n	8005382 <HAL_TIM_IRQHandler+0xfe>
 8005376:	6878      	ldr	r0, [r7, #4]
 8005378:	f000 f94e 	bl	8005618 <HAL_TIM_OC_DelayElapsedCallback>
 800537c:	6878      	ldr	r0, [r7, #4]
 800537e:	f7fd f8cb 	bl	8002518 <HAL_TIM_PWM_PulseFinishedCallback>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	2200      	movs	r2, #0
 8005386:	771a      	strb	r2, [r3, #28]
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	691b      	ldr	r3, [r3, #16]
 800538e:	f003 0310 	and.w	r3, r3, #16
 8005392:	2b10      	cmp	r3, #16
 8005394:	d122      	bne.n	80053dc <HAL_TIM_IRQHandler+0x158>
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	68db      	ldr	r3, [r3, #12]
 800539c:	f003 0310 	and.w	r3, r3, #16
 80053a0:	2b10      	cmp	r3, #16
 80053a2:	d11b      	bne.n	80053dc <HAL_TIM_IRQHandler+0x158>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	f06f 0210 	mvn.w	r2, #16
 80053ac:	611a      	str	r2, [r3, #16]
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	2208      	movs	r2, #8
 80053b2:	771a      	strb	r2, [r3, #28]
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	69db      	ldr	r3, [r3, #28]
 80053ba:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80053be:	2b00      	cmp	r3, #0
 80053c0:	d003      	beq.n	80053ca <HAL_TIM_IRQHandler+0x146>
 80053c2:	6878      	ldr	r0, [r7, #4]
 80053c4:	f000 f932 	bl	800562c <HAL_TIM_IC_CaptureCallback>
 80053c8:	e005      	b.n	80053d6 <HAL_TIM_IRQHandler+0x152>
 80053ca:	6878      	ldr	r0, [r7, #4]
 80053cc:	f000 f924 	bl	8005618 <HAL_TIM_OC_DelayElapsedCallback>
 80053d0:	6878      	ldr	r0, [r7, #4]
 80053d2:	f7fd f8a1 	bl	8002518 <HAL_TIM_PWM_PulseFinishedCallback>
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	2200      	movs	r2, #0
 80053da:	771a      	strb	r2, [r3, #28]
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	691b      	ldr	r3, [r3, #16]
 80053e2:	f003 0301 	and.w	r3, r3, #1
 80053e6:	2b01      	cmp	r3, #1
 80053e8:	d10e      	bne.n	8005408 <HAL_TIM_IRQHandler+0x184>
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	681b      	ldr	r3, [r3, #0]
 80053ee:	68db      	ldr	r3, [r3, #12]
 80053f0:	f003 0301 	and.w	r3, r3, #1
 80053f4:	2b01      	cmp	r3, #1
 80053f6:	d107      	bne.n	8005408 <HAL_TIM_IRQHandler+0x184>
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	f06f 0201 	mvn.w	r2, #1
 8005400:	611a      	str	r2, [r3, #16]
 8005402:	6878      	ldr	r0, [r7, #4]
 8005404:	f7fb fcd8 	bl	8000db8 <HAL_TIM_PeriodElapsedCallback>
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	691b      	ldr	r3, [r3, #16]
 800540e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005412:	2b80      	cmp	r3, #128	; 0x80
 8005414:	d10e      	bne.n	8005434 <HAL_TIM_IRQHandler+0x1b0>
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	68db      	ldr	r3, [r3, #12]
 800541c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005420:	2b80      	cmp	r3, #128	; 0x80
 8005422:	d107      	bne.n	8005434 <HAL_TIM_IRQHandler+0x1b0>
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800542c:	611a      	str	r2, [r3, #16]
 800542e:	6878      	ldr	r0, [r7, #4]
 8005430:	f000 fcf2 	bl	8005e18 <HAL_TIMEx_BreakCallback>
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	691b      	ldr	r3, [r3, #16]
 800543a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800543e:	2b40      	cmp	r3, #64	; 0x40
 8005440:	d10e      	bne.n	8005460 <HAL_TIM_IRQHandler+0x1dc>
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	68db      	ldr	r3, [r3, #12]
 8005448:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800544c:	2b40      	cmp	r3, #64	; 0x40
 800544e:	d107      	bne.n	8005460 <HAL_TIM_IRQHandler+0x1dc>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005458:	611a      	str	r2, [r3, #16]
 800545a:	6878      	ldr	r0, [r7, #4]
 800545c:	f000 f8fa 	bl	8005654 <HAL_TIM_TriggerCallback>
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	691b      	ldr	r3, [r3, #16]
 8005466:	f003 0320 	and.w	r3, r3, #32
 800546a:	2b20      	cmp	r3, #32
 800546c:	d10e      	bne.n	800548c <HAL_TIM_IRQHandler+0x208>
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	68db      	ldr	r3, [r3, #12]
 8005474:	f003 0320 	and.w	r3, r3, #32
 8005478:	2b20      	cmp	r3, #32
 800547a:	d107      	bne.n	800548c <HAL_TIM_IRQHandler+0x208>
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	f06f 0220 	mvn.w	r2, #32
 8005484:	611a      	str	r2, [r3, #16]
 8005486:	6878      	ldr	r0, [r7, #4]
 8005488:	f000 fcbc 	bl	8005e04 <HAL_TIMEx_CommutCallback>
 800548c:	bf00      	nop
 800548e:	3708      	adds	r7, #8
 8005490:	46bd      	mov	sp, r7
 8005492:	bd80      	pop	{r7, pc}

08005494 <HAL_TIM_PWM_ConfigChannel>:
 8005494:	b580      	push	{r7, lr}
 8005496:	b086      	sub	sp, #24
 8005498:	af00      	add	r7, sp, #0
 800549a:	60f8      	str	r0, [r7, #12]
 800549c:	60b9      	str	r1, [r7, #8]
 800549e:	607a      	str	r2, [r7, #4]
 80054a0:	2300      	movs	r3, #0
 80054a2:	75fb      	strb	r3, [r7, #23]
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80054aa:	2b01      	cmp	r3, #1
 80054ac:	d101      	bne.n	80054b2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80054ae:	2302      	movs	r3, #2
 80054b0:	e0ae      	b.n	8005610 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80054b2:	68fb      	ldr	r3, [r7, #12]
 80054b4:	2201      	movs	r2, #1
 80054b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	2b0c      	cmp	r3, #12
 80054be:	f200 809f 	bhi.w	8005600 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80054c2:	a201      	add	r2, pc, #4	; (adr r2, 80054c8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80054c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054c8:	080054fd 	.word	0x080054fd
 80054cc:	08005601 	.word	0x08005601
 80054d0:	08005601 	.word	0x08005601
 80054d4:	08005601 	.word	0x08005601
 80054d8:	0800553d 	.word	0x0800553d
 80054dc:	08005601 	.word	0x08005601
 80054e0:	08005601 	.word	0x08005601
 80054e4:	08005601 	.word	0x08005601
 80054e8:	0800557f 	.word	0x0800557f
 80054ec:	08005601 	.word	0x08005601
 80054f0:	08005601 	.word	0x08005601
 80054f4:	08005601 	.word	0x08005601
 80054f8:	080055bf 	.word	0x080055bf
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	68b9      	ldr	r1, [r7, #8]
 8005502:	4618      	mov	r0, r3
 8005504:	f000 fa0c 	bl	8005920 <TIM_OC1_SetConfig>
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	699a      	ldr	r2, [r3, #24]
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	f042 0208 	orr.w	r2, r2, #8
 8005516:	619a      	str	r2, [r3, #24]
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	699a      	ldr	r2, [r3, #24]
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	f022 0204 	bic.w	r2, r2, #4
 8005526:	619a      	str	r2, [r3, #24]
 8005528:	68fb      	ldr	r3, [r7, #12]
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	6999      	ldr	r1, [r3, #24]
 800552e:	68bb      	ldr	r3, [r7, #8]
 8005530:	691a      	ldr	r2, [r3, #16]
 8005532:	68fb      	ldr	r3, [r7, #12]
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	430a      	orrs	r2, r1
 8005538:	619a      	str	r2, [r3, #24]
 800553a:	e064      	b.n	8005606 <HAL_TIM_PWM_ConfigChannel+0x172>
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	68b9      	ldr	r1, [r7, #8]
 8005542:	4618      	mov	r0, r3
 8005544:	f000 fa52 	bl	80059ec <TIM_OC2_SetConfig>
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	699a      	ldr	r2, [r3, #24]
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005556:	619a      	str	r2, [r3, #24]
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	699a      	ldr	r2, [r3, #24]
 800555e:	68fb      	ldr	r3, [r7, #12]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005566:	619a      	str	r2, [r3, #24]
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	6999      	ldr	r1, [r3, #24]
 800556e:	68bb      	ldr	r3, [r7, #8]
 8005570:	691b      	ldr	r3, [r3, #16]
 8005572:	021a      	lsls	r2, r3, #8
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	430a      	orrs	r2, r1
 800557a:	619a      	str	r2, [r3, #24]
 800557c:	e043      	b.n	8005606 <HAL_TIM_PWM_ConfigChannel+0x172>
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	68b9      	ldr	r1, [r7, #8]
 8005584:	4618      	mov	r0, r3
 8005586:	f000 fa9d 	bl	8005ac4 <TIM_OC3_SetConfig>
 800558a:	68fb      	ldr	r3, [r7, #12]
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	69da      	ldr	r2, [r3, #28]
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	f042 0208 	orr.w	r2, r2, #8
 8005598:	61da      	str	r2, [r3, #28]
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	69da      	ldr	r2, [r3, #28]
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	f022 0204 	bic.w	r2, r2, #4
 80055a8:	61da      	str	r2, [r3, #28]
 80055aa:	68fb      	ldr	r3, [r7, #12]
 80055ac:	681b      	ldr	r3, [r3, #0]
 80055ae:	69d9      	ldr	r1, [r3, #28]
 80055b0:	68bb      	ldr	r3, [r7, #8]
 80055b2:	691a      	ldr	r2, [r3, #16]
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	430a      	orrs	r2, r1
 80055ba:	61da      	str	r2, [r3, #28]
 80055bc:	e023      	b.n	8005606 <HAL_TIM_PWM_ConfigChannel+0x172>
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	681b      	ldr	r3, [r3, #0]
 80055c2:	68b9      	ldr	r1, [r7, #8]
 80055c4:	4618      	mov	r0, r3
 80055c6:	f000 fae7 	bl	8005b98 <TIM_OC4_SetConfig>
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	69da      	ldr	r2, [r3, #28]
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	681b      	ldr	r3, [r3, #0]
 80055d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80055d8:	61da      	str	r2, [r3, #28]
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	681b      	ldr	r3, [r3, #0]
 80055de:	69da      	ldr	r2, [r3, #28]
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055e8:	61da      	str	r2, [r3, #28]
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	69d9      	ldr	r1, [r3, #28]
 80055f0:	68bb      	ldr	r3, [r7, #8]
 80055f2:	691b      	ldr	r3, [r3, #16]
 80055f4:	021a      	lsls	r2, r3, #8
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	430a      	orrs	r2, r1
 80055fc:	61da      	str	r2, [r3, #28]
 80055fe:	e002      	b.n	8005606 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005600:	2301      	movs	r3, #1
 8005602:	75fb      	strb	r3, [r7, #23]
 8005604:	bf00      	nop
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	2200      	movs	r2, #0
 800560a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800560e:	7dfb      	ldrb	r3, [r7, #23]
 8005610:	4618      	mov	r0, r3
 8005612:	3718      	adds	r7, #24
 8005614:	46bd      	mov	sp, r7
 8005616:	bd80      	pop	{r7, pc}

08005618 <HAL_TIM_OC_DelayElapsedCallback>:
 8005618:	b480      	push	{r7}
 800561a:	b083      	sub	sp, #12
 800561c:	af00      	add	r7, sp, #0
 800561e:	6078      	str	r0, [r7, #4]
 8005620:	bf00      	nop
 8005622:	370c      	adds	r7, #12
 8005624:	46bd      	mov	sp, r7
 8005626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800562a:	4770      	bx	lr

0800562c <HAL_TIM_IC_CaptureCallback>:
 800562c:	b480      	push	{r7}
 800562e:	b083      	sub	sp, #12
 8005630:	af00      	add	r7, sp, #0
 8005632:	6078      	str	r0, [r7, #4]
 8005634:	bf00      	nop
 8005636:	370c      	adds	r7, #12
 8005638:	46bd      	mov	sp, r7
 800563a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800563e:	4770      	bx	lr

08005640 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 8005640:	b480      	push	{r7}
 8005642:	b083      	sub	sp, #12
 8005644:	af00      	add	r7, sp, #0
 8005646:	6078      	str	r0, [r7, #4]
 8005648:	bf00      	nop
 800564a:	370c      	adds	r7, #12
 800564c:	46bd      	mov	sp, r7
 800564e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005652:	4770      	bx	lr

08005654 <HAL_TIM_TriggerCallback>:
 8005654:	b480      	push	{r7}
 8005656:	b083      	sub	sp, #12
 8005658:	af00      	add	r7, sp, #0
 800565a:	6078      	str	r0, [r7, #4]
 800565c:	bf00      	nop
 800565e:	370c      	adds	r7, #12
 8005660:	46bd      	mov	sp, r7
 8005662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005666:	4770      	bx	lr

08005668 <HAL_TIM_ErrorCallback>:
 8005668:	b480      	push	{r7}
 800566a:	b083      	sub	sp, #12
 800566c:	af00      	add	r7, sp, #0
 800566e:	6078      	str	r0, [r7, #4]
 8005670:	bf00      	nop
 8005672:	370c      	adds	r7, #12
 8005674:	46bd      	mov	sp, r7
 8005676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800567a:	4770      	bx	lr

0800567c <TIM_DMAError>:
 800567c:	b580      	push	{r7, lr}
 800567e:	b084      	sub	sp, #16
 8005680:	af00      	add	r7, sp, #0
 8005682:	6078      	str	r0, [r7, #4]
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005688:	60fb      	str	r3, [r7, #12]
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800568e:	687a      	ldr	r2, [r7, #4]
 8005690:	429a      	cmp	r2, r3
 8005692:	d107      	bne.n	80056a4 <TIM_DMAError+0x28>
 8005694:	68fb      	ldr	r3, [r7, #12]
 8005696:	2201      	movs	r2, #1
 8005698:	771a      	strb	r2, [r3, #28]
 800569a:	68fb      	ldr	r3, [r7, #12]
 800569c:	2201      	movs	r2, #1
 800569e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80056a2:	e02a      	b.n	80056fa <TIM_DMAError+0x7e>
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80056a8:	687a      	ldr	r2, [r7, #4]
 80056aa:	429a      	cmp	r2, r3
 80056ac:	d107      	bne.n	80056be <TIM_DMAError+0x42>
 80056ae:	68fb      	ldr	r3, [r7, #12]
 80056b0:	2202      	movs	r2, #2
 80056b2:	771a      	strb	r2, [r3, #28]
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	2201      	movs	r2, #1
 80056b8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80056bc:	e01d      	b.n	80056fa <TIM_DMAError+0x7e>
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80056c2:	687a      	ldr	r2, [r7, #4]
 80056c4:	429a      	cmp	r2, r3
 80056c6:	d107      	bne.n	80056d8 <TIM_DMAError+0x5c>
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	2204      	movs	r2, #4
 80056cc:	771a      	strb	r2, [r3, #28]
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	2201      	movs	r2, #1
 80056d2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80056d6:	e010      	b.n	80056fa <TIM_DMAError+0x7e>
 80056d8:	68fb      	ldr	r3, [r7, #12]
 80056da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056dc:	687a      	ldr	r2, [r7, #4]
 80056de:	429a      	cmp	r2, r3
 80056e0:	d107      	bne.n	80056f2 <TIM_DMAError+0x76>
 80056e2:	68fb      	ldr	r3, [r7, #12]
 80056e4:	2208      	movs	r2, #8
 80056e6:	771a      	strb	r2, [r3, #28]
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	2201      	movs	r2, #1
 80056ec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80056f0:	e003      	b.n	80056fa <TIM_DMAError+0x7e>
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	2201      	movs	r2, #1
 80056f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80056fa:	68f8      	ldr	r0, [r7, #12]
 80056fc:	f7ff ffb4 	bl	8005668 <HAL_TIM_ErrorCallback>
 8005700:	68fb      	ldr	r3, [r7, #12]
 8005702:	2200      	movs	r2, #0
 8005704:	771a      	strb	r2, [r3, #28]
 8005706:	bf00      	nop
 8005708:	3710      	adds	r7, #16
 800570a:	46bd      	mov	sp, r7
 800570c:	bd80      	pop	{r7, pc}

0800570e <TIM_DMADelayPulseCplt>:
 800570e:	b580      	push	{r7, lr}
 8005710:	b084      	sub	sp, #16
 8005712:	af00      	add	r7, sp, #0
 8005714:	6078      	str	r0, [r7, #4]
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800571a:	60fb      	str	r3, [r7, #12]
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005720:	687a      	ldr	r2, [r7, #4]
 8005722:	429a      	cmp	r2, r3
 8005724:	d10b      	bne.n	800573e <TIM_DMADelayPulseCplt+0x30>
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	2201      	movs	r2, #1
 800572a:	771a      	strb	r2, [r3, #28]
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	69db      	ldr	r3, [r3, #28]
 8005730:	2b00      	cmp	r3, #0
 8005732:	d136      	bne.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	2201      	movs	r2, #1
 8005738:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800573c:	e031      	b.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005742:	687a      	ldr	r2, [r7, #4]
 8005744:	429a      	cmp	r2, r3
 8005746:	d10b      	bne.n	8005760 <TIM_DMADelayPulseCplt+0x52>
 8005748:	68fb      	ldr	r3, [r7, #12]
 800574a:	2202      	movs	r2, #2
 800574c:	771a      	strb	r2, [r3, #28]
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	69db      	ldr	r3, [r3, #28]
 8005752:	2b00      	cmp	r3, #0
 8005754:	d125      	bne.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 8005756:	68fb      	ldr	r3, [r7, #12]
 8005758:	2201      	movs	r2, #1
 800575a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800575e:	e020      	b.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 8005760:	68fb      	ldr	r3, [r7, #12]
 8005762:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005764:	687a      	ldr	r2, [r7, #4]
 8005766:	429a      	cmp	r2, r3
 8005768:	d10b      	bne.n	8005782 <TIM_DMADelayPulseCplt+0x74>
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	2204      	movs	r2, #4
 800576e:	771a      	strb	r2, [r3, #28]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	69db      	ldr	r3, [r3, #28]
 8005774:	2b00      	cmp	r3, #0
 8005776:	d114      	bne.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	2201      	movs	r2, #1
 800577c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005780:	e00f      	b.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 8005782:	68fb      	ldr	r3, [r7, #12]
 8005784:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005786:	687a      	ldr	r2, [r7, #4]
 8005788:	429a      	cmp	r2, r3
 800578a:	d10a      	bne.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	2208      	movs	r2, #8
 8005790:	771a      	strb	r2, [r3, #28]
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	69db      	ldr	r3, [r3, #28]
 8005796:	2b00      	cmp	r3, #0
 8005798:	d103      	bne.n	80057a2 <TIM_DMADelayPulseCplt+0x94>
 800579a:	68fb      	ldr	r3, [r7, #12]
 800579c:	2201      	movs	r2, #1
 800579e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80057a2:	68f8      	ldr	r0, [r7, #12]
 80057a4:	f7fc feb8 	bl	8002518 <HAL_TIM_PWM_PulseFinishedCallback>
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	2200      	movs	r2, #0
 80057ac:	771a      	strb	r2, [r3, #28]
 80057ae:	bf00      	nop
 80057b0:	3710      	adds	r7, #16
 80057b2:	46bd      	mov	sp, r7
 80057b4:	bd80      	pop	{r7, pc}

080057b6 <TIM_DMADelayPulseHalfCplt>:
 80057b6:	b580      	push	{r7, lr}
 80057b8:	b084      	sub	sp, #16
 80057ba:	af00      	add	r7, sp, #0
 80057bc:	6078      	str	r0, [r7, #4]
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80057c2:	60fb      	str	r3, [r7, #12]
 80057c4:	68fb      	ldr	r3, [r7, #12]
 80057c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057c8:	687a      	ldr	r2, [r7, #4]
 80057ca:	429a      	cmp	r2, r3
 80057cc:	d103      	bne.n	80057d6 <TIM_DMADelayPulseHalfCplt+0x20>
 80057ce:	68fb      	ldr	r3, [r7, #12]
 80057d0:	2201      	movs	r2, #1
 80057d2:	771a      	strb	r2, [r3, #28]
 80057d4:	e019      	b.n	800580a <TIM_DMADelayPulseHalfCplt+0x54>
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057da:	687a      	ldr	r2, [r7, #4]
 80057dc:	429a      	cmp	r2, r3
 80057de:	d103      	bne.n	80057e8 <TIM_DMADelayPulseHalfCplt+0x32>
 80057e0:	68fb      	ldr	r3, [r7, #12]
 80057e2:	2202      	movs	r2, #2
 80057e4:	771a      	strb	r2, [r3, #28]
 80057e6:	e010      	b.n	800580a <TIM_DMADelayPulseHalfCplt+0x54>
 80057e8:	68fb      	ldr	r3, [r7, #12]
 80057ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057ec:	687a      	ldr	r2, [r7, #4]
 80057ee:	429a      	cmp	r2, r3
 80057f0:	d103      	bne.n	80057fa <TIM_DMADelayPulseHalfCplt+0x44>
 80057f2:	68fb      	ldr	r3, [r7, #12]
 80057f4:	2204      	movs	r2, #4
 80057f6:	771a      	strb	r2, [r3, #28]
 80057f8:	e007      	b.n	800580a <TIM_DMADelayPulseHalfCplt+0x54>
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80057fe:	687a      	ldr	r2, [r7, #4]
 8005800:	429a      	cmp	r2, r3
 8005802:	d102      	bne.n	800580a <TIM_DMADelayPulseHalfCplt+0x54>
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	2208      	movs	r2, #8
 8005808:	771a      	strb	r2, [r3, #28]
 800580a:	68f8      	ldr	r0, [r7, #12]
 800580c:	f7ff ff18 	bl	8005640 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	2200      	movs	r2, #0
 8005814:	771a      	strb	r2, [r3, #28]
 8005816:	bf00      	nop
 8005818:	3710      	adds	r7, #16
 800581a:	46bd      	mov	sp, r7
 800581c:	bd80      	pop	{r7, pc}
	...

08005820 <TIM_Base_SetConfig>:
 8005820:	b480      	push	{r7}
 8005822:	b085      	sub	sp, #20
 8005824:	af00      	add	r7, sp, #0
 8005826:	6078      	str	r0, [r7, #4]
 8005828:	6039      	str	r1, [r7, #0]
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	60fb      	str	r3, [r7, #12]
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	4a34      	ldr	r2, [pc, #208]	; (8005904 <TIM_Base_SetConfig+0xe4>)
 8005834:	4293      	cmp	r3, r2
 8005836:	d00f      	beq.n	8005858 <TIM_Base_SetConfig+0x38>
 8005838:	687b      	ldr	r3, [r7, #4]
 800583a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800583e:	d00b      	beq.n	8005858 <TIM_Base_SetConfig+0x38>
 8005840:	687b      	ldr	r3, [r7, #4]
 8005842:	4a31      	ldr	r2, [pc, #196]	; (8005908 <TIM_Base_SetConfig+0xe8>)
 8005844:	4293      	cmp	r3, r2
 8005846:	d007      	beq.n	8005858 <TIM_Base_SetConfig+0x38>
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	4a30      	ldr	r2, [pc, #192]	; (800590c <TIM_Base_SetConfig+0xec>)
 800584c:	4293      	cmp	r3, r2
 800584e:	d003      	beq.n	8005858 <TIM_Base_SetConfig+0x38>
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	4a2f      	ldr	r2, [pc, #188]	; (8005910 <TIM_Base_SetConfig+0xf0>)
 8005854:	4293      	cmp	r3, r2
 8005856:	d108      	bne.n	800586a <TIM_Base_SetConfig+0x4a>
 8005858:	68fb      	ldr	r3, [r7, #12]
 800585a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800585e:	60fb      	str	r3, [r7, #12]
 8005860:	683b      	ldr	r3, [r7, #0]
 8005862:	685b      	ldr	r3, [r3, #4]
 8005864:	68fa      	ldr	r2, [r7, #12]
 8005866:	4313      	orrs	r3, r2
 8005868:	60fb      	str	r3, [r7, #12]
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	4a25      	ldr	r2, [pc, #148]	; (8005904 <TIM_Base_SetConfig+0xe4>)
 800586e:	4293      	cmp	r3, r2
 8005870:	d01b      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005878:	d017      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	4a22      	ldr	r2, [pc, #136]	; (8005908 <TIM_Base_SetConfig+0xe8>)
 800587e:	4293      	cmp	r3, r2
 8005880:	d013      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	4a21      	ldr	r2, [pc, #132]	; (800590c <TIM_Base_SetConfig+0xec>)
 8005886:	4293      	cmp	r3, r2
 8005888:	d00f      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	4a20      	ldr	r2, [pc, #128]	; (8005910 <TIM_Base_SetConfig+0xf0>)
 800588e:	4293      	cmp	r3, r2
 8005890:	d00b      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 8005892:	687b      	ldr	r3, [r7, #4]
 8005894:	4a1f      	ldr	r2, [pc, #124]	; (8005914 <TIM_Base_SetConfig+0xf4>)
 8005896:	4293      	cmp	r3, r2
 8005898:	d007      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	4a1e      	ldr	r2, [pc, #120]	; (8005918 <TIM_Base_SetConfig+0xf8>)
 800589e:	4293      	cmp	r3, r2
 80058a0:	d003      	beq.n	80058aa <TIM_Base_SetConfig+0x8a>
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	4a1d      	ldr	r2, [pc, #116]	; (800591c <TIM_Base_SetConfig+0xfc>)
 80058a6:	4293      	cmp	r3, r2
 80058a8:	d108      	bne.n	80058bc <TIM_Base_SetConfig+0x9c>
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80058b0:	60fb      	str	r3, [r7, #12]
 80058b2:	683b      	ldr	r3, [r7, #0]
 80058b4:	68db      	ldr	r3, [r3, #12]
 80058b6:	68fa      	ldr	r2, [r7, #12]
 80058b8:	4313      	orrs	r3, r2
 80058ba:	60fb      	str	r3, [r7, #12]
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80058c2:	683b      	ldr	r3, [r7, #0]
 80058c4:	695b      	ldr	r3, [r3, #20]
 80058c6:	4313      	orrs	r3, r2
 80058c8:	60fb      	str	r3, [r7, #12]
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	68fa      	ldr	r2, [r7, #12]
 80058ce:	601a      	str	r2, [r3, #0]
 80058d0:	683b      	ldr	r3, [r7, #0]
 80058d2:	689a      	ldr	r2, [r3, #8]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	62da      	str	r2, [r3, #44]	; 0x2c
 80058d8:	683b      	ldr	r3, [r7, #0]
 80058da:	681a      	ldr	r2, [r3, #0]
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	629a      	str	r2, [r3, #40]	; 0x28
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	4a08      	ldr	r2, [pc, #32]	; (8005904 <TIM_Base_SetConfig+0xe4>)
 80058e4:	4293      	cmp	r3, r2
 80058e6:	d103      	bne.n	80058f0 <TIM_Base_SetConfig+0xd0>
 80058e8:	683b      	ldr	r3, [r7, #0]
 80058ea:	691a      	ldr	r2, [r3, #16]
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	631a      	str	r2, [r3, #48]	; 0x30
 80058f0:	687b      	ldr	r3, [r7, #4]
 80058f2:	2201      	movs	r2, #1
 80058f4:	615a      	str	r2, [r3, #20]
 80058f6:	bf00      	nop
 80058f8:	3714      	adds	r7, #20
 80058fa:	46bd      	mov	sp, r7
 80058fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005900:	4770      	bx	lr
 8005902:	bf00      	nop
 8005904:	40010000 	.word	0x40010000
 8005908:	40000400 	.word	0x40000400
 800590c:	40000800 	.word	0x40000800
 8005910:	40000c00 	.word	0x40000c00
 8005914:	40014000 	.word	0x40014000
 8005918:	40014400 	.word	0x40014400
 800591c:	40014800 	.word	0x40014800

08005920 <TIM_OC1_SetConfig>:
 8005920:	b480      	push	{r7}
 8005922:	b087      	sub	sp, #28
 8005924:	af00      	add	r7, sp, #0
 8005926:	6078      	str	r0, [r7, #4]
 8005928:	6039      	str	r1, [r7, #0]
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	6a1b      	ldr	r3, [r3, #32]
 800592e:	f023 0201 	bic.w	r2, r3, #1
 8005932:	687b      	ldr	r3, [r7, #4]
 8005934:	621a      	str	r2, [r3, #32]
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	6a1b      	ldr	r3, [r3, #32]
 800593a:	617b      	str	r3, [r7, #20]
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	685b      	ldr	r3, [r3, #4]
 8005940:	613b      	str	r3, [r7, #16]
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	699b      	ldr	r3, [r3, #24]
 8005946:	60fb      	str	r3, [r7, #12]
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800594e:	60fb      	str	r3, [r7, #12]
 8005950:	68fb      	ldr	r3, [r7, #12]
 8005952:	f023 0303 	bic.w	r3, r3, #3
 8005956:	60fb      	str	r3, [r7, #12]
 8005958:	683b      	ldr	r3, [r7, #0]
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	68fa      	ldr	r2, [r7, #12]
 800595e:	4313      	orrs	r3, r2
 8005960:	60fb      	str	r3, [r7, #12]
 8005962:	697b      	ldr	r3, [r7, #20]
 8005964:	f023 0302 	bic.w	r3, r3, #2
 8005968:	617b      	str	r3, [r7, #20]
 800596a:	683b      	ldr	r3, [r7, #0]
 800596c:	689b      	ldr	r3, [r3, #8]
 800596e:	697a      	ldr	r2, [r7, #20]
 8005970:	4313      	orrs	r3, r2
 8005972:	617b      	str	r3, [r7, #20]
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	4a1c      	ldr	r2, [pc, #112]	; (80059e8 <TIM_OC1_SetConfig+0xc8>)
 8005978:	4293      	cmp	r3, r2
 800597a:	d10c      	bne.n	8005996 <TIM_OC1_SetConfig+0x76>
 800597c:	697b      	ldr	r3, [r7, #20]
 800597e:	f023 0308 	bic.w	r3, r3, #8
 8005982:	617b      	str	r3, [r7, #20]
 8005984:	683b      	ldr	r3, [r7, #0]
 8005986:	68db      	ldr	r3, [r3, #12]
 8005988:	697a      	ldr	r2, [r7, #20]
 800598a:	4313      	orrs	r3, r2
 800598c:	617b      	str	r3, [r7, #20]
 800598e:	697b      	ldr	r3, [r7, #20]
 8005990:	f023 0304 	bic.w	r3, r3, #4
 8005994:	617b      	str	r3, [r7, #20]
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	4a13      	ldr	r2, [pc, #76]	; (80059e8 <TIM_OC1_SetConfig+0xc8>)
 800599a:	4293      	cmp	r3, r2
 800599c:	d111      	bne.n	80059c2 <TIM_OC1_SetConfig+0xa2>
 800599e:	693b      	ldr	r3, [r7, #16]
 80059a0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80059a4:	613b      	str	r3, [r7, #16]
 80059a6:	693b      	ldr	r3, [r7, #16]
 80059a8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80059ac:	613b      	str	r3, [r7, #16]
 80059ae:	683b      	ldr	r3, [r7, #0]
 80059b0:	695b      	ldr	r3, [r3, #20]
 80059b2:	693a      	ldr	r2, [r7, #16]
 80059b4:	4313      	orrs	r3, r2
 80059b6:	613b      	str	r3, [r7, #16]
 80059b8:	683b      	ldr	r3, [r7, #0]
 80059ba:	699b      	ldr	r3, [r3, #24]
 80059bc:	693a      	ldr	r2, [r7, #16]
 80059be:	4313      	orrs	r3, r2
 80059c0:	613b      	str	r3, [r7, #16]
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	693a      	ldr	r2, [r7, #16]
 80059c6:	605a      	str	r2, [r3, #4]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	68fa      	ldr	r2, [r7, #12]
 80059cc:	619a      	str	r2, [r3, #24]
 80059ce:	683b      	ldr	r3, [r7, #0]
 80059d0:	685a      	ldr	r2, [r3, #4]
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	635a      	str	r2, [r3, #52]	; 0x34
 80059d6:	687b      	ldr	r3, [r7, #4]
 80059d8:	697a      	ldr	r2, [r7, #20]
 80059da:	621a      	str	r2, [r3, #32]
 80059dc:	bf00      	nop
 80059de:	371c      	adds	r7, #28
 80059e0:	46bd      	mov	sp, r7
 80059e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059e6:	4770      	bx	lr
 80059e8:	40010000 	.word	0x40010000

080059ec <TIM_OC2_SetConfig>:
 80059ec:	b480      	push	{r7}
 80059ee:	b087      	sub	sp, #28
 80059f0:	af00      	add	r7, sp, #0
 80059f2:	6078      	str	r0, [r7, #4]
 80059f4:	6039      	str	r1, [r7, #0]
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	6a1b      	ldr	r3, [r3, #32]
 80059fa:	f023 0210 	bic.w	r2, r3, #16
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	621a      	str	r2, [r3, #32]
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	6a1b      	ldr	r3, [r3, #32]
 8005a06:	617b      	str	r3, [r7, #20]
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	685b      	ldr	r3, [r3, #4]
 8005a0c:	613b      	str	r3, [r7, #16]
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	699b      	ldr	r3, [r3, #24]
 8005a12:	60fb      	str	r3, [r7, #12]
 8005a14:	68fb      	ldr	r3, [r7, #12]
 8005a16:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005a1a:	60fb      	str	r3, [r7, #12]
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005a22:	60fb      	str	r3, [r7, #12]
 8005a24:	683b      	ldr	r3, [r7, #0]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	021b      	lsls	r3, r3, #8
 8005a2a:	68fa      	ldr	r2, [r7, #12]
 8005a2c:	4313      	orrs	r3, r2
 8005a2e:	60fb      	str	r3, [r7, #12]
 8005a30:	697b      	ldr	r3, [r7, #20]
 8005a32:	f023 0320 	bic.w	r3, r3, #32
 8005a36:	617b      	str	r3, [r7, #20]
 8005a38:	683b      	ldr	r3, [r7, #0]
 8005a3a:	689b      	ldr	r3, [r3, #8]
 8005a3c:	011b      	lsls	r3, r3, #4
 8005a3e:	697a      	ldr	r2, [r7, #20]
 8005a40:	4313      	orrs	r3, r2
 8005a42:	617b      	str	r3, [r7, #20]
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	4a1e      	ldr	r2, [pc, #120]	; (8005ac0 <TIM_OC2_SetConfig+0xd4>)
 8005a48:	4293      	cmp	r3, r2
 8005a4a:	d10d      	bne.n	8005a68 <TIM_OC2_SetConfig+0x7c>
 8005a4c:	697b      	ldr	r3, [r7, #20]
 8005a4e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005a52:	617b      	str	r3, [r7, #20]
 8005a54:	683b      	ldr	r3, [r7, #0]
 8005a56:	68db      	ldr	r3, [r3, #12]
 8005a58:	011b      	lsls	r3, r3, #4
 8005a5a:	697a      	ldr	r2, [r7, #20]
 8005a5c:	4313      	orrs	r3, r2
 8005a5e:	617b      	str	r3, [r7, #20]
 8005a60:	697b      	ldr	r3, [r7, #20]
 8005a62:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005a66:	617b      	str	r3, [r7, #20]
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	4a15      	ldr	r2, [pc, #84]	; (8005ac0 <TIM_OC2_SetConfig+0xd4>)
 8005a6c:	4293      	cmp	r3, r2
 8005a6e:	d113      	bne.n	8005a98 <TIM_OC2_SetConfig+0xac>
 8005a70:	693b      	ldr	r3, [r7, #16]
 8005a72:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005a76:	613b      	str	r3, [r7, #16]
 8005a78:	693b      	ldr	r3, [r7, #16]
 8005a7a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005a7e:	613b      	str	r3, [r7, #16]
 8005a80:	683b      	ldr	r3, [r7, #0]
 8005a82:	695b      	ldr	r3, [r3, #20]
 8005a84:	009b      	lsls	r3, r3, #2
 8005a86:	693a      	ldr	r2, [r7, #16]
 8005a88:	4313      	orrs	r3, r2
 8005a8a:	613b      	str	r3, [r7, #16]
 8005a8c:	683b      	ldr	r3, [r7, #0]
 8005a8e:	699b      	ldr	r3, [r3, #24]
 8005a90:	009b      	lsls	r3, r3, #2
 8005a92:	693a      	ldr	r2, [r7, #16]
 8005a94:	4313      	orrs	r3, r2
 8005a96:	613b      	str	r3, [r7, #16]
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	693a      	ldr	r2, [r7, #16]
 8005a9c:	605a      	str	r2, [r3, #4]
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	68fa      	ldr	r2, [r7, #12]
 8005aa2:	619a      	str	r2, [r3, #24]
 8005aa4:	683b      	ldr	r3, [r7, #0]
 8005aa6:	685a      	ldr	r2, [r3, #4]
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	639a      	str	r2, [r3, #56]	; 0x38
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	697a      	ldr	r2, [r7, #20]
 8005ab0:	621a      	str	r2, [r3, #32]
 8005ab2:	bf00      	nop
 8005ab4:	371c      	adds	r7, #28
 8005ab6:	46bd      	mov	sp, r7
 8005ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005abc:	4770      	bx	lr
 8005abe:	bf00      	nop
 8005ac0:	40010000 	.word	0x40010000

08005ac4 <TIM_OC3_SetConfig>:
 8005ac4:	b480      	push	{r7}
 8005ac6:	b087      	sub	sp, #28
 8005ac8:	af00      	add	r7, sp, #0
 8005aca:	6078      	str	r0, [r7, #4]
 8005acc:	6039      	str	r1, [r7, #0]
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	6a1b      	ldr	r3, [r3, #32]
 8005ad2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	621a      	str	r2, [r3, #32]
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	6a1b      	ldr	r3, [r3, #32]
 8005ade:	617b      	str	r3, [r7, #20]
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	685b      	ldr	r3, [r3, #4]
 8005ae4:	613b      	str	r3, [r7, #16]
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	69db      	ldr	r3, [r3, #28]
 8005aea:	60fb      	str	r3, [r7, #12]
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005af2:	60fb      	str	r3, [r7, #12]
 8005af4:	68fb      	ldr	r3, [r7, #12]
 8005af6:	f023 0303 	bic.w	r3, r3, #3
 8005afa:	60fb      	str	r3, [r7, #12]
 8005afc:	683b      	ldr	r3, [r7, #0]
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	68fa      	ldr	r2, [r7, #12]
 8005b02:	4313      	orrs	r3, r2
 8005b04:	60fb      	str	r3, [r7, #12]
 8005b06:	697b      	ldr	r3, [r7, #20]
 8005b08:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005b0c:	617b      	str	r3, [r7, #20]
 8005b0e:	683b      	ldr	r3, [r7, #0]
 8005b10:	689b      	ldr	r3, [r3, #8]
 8005b12:	021b      	lsls	r3, r3, #8
 8005b14:	697a      	ldr	r2, [r7, #20]
 8005b16:	4313      	orrs	r3, r2
 8005b18:	617b      	str	r3, [r7, #20]
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	4a1d      	ldr	r2, [pc, #116]	; (8005b94 <TIM_OC3_SetConfig+0xd0>)
 8005b1e:	4293      	cmp	r3, r2
 8005b20:	d10d      	bne.n	8005b3e <TIM_OC3_SetConfig+0x7a>
 8005b22:	697b      	ldr	r3, [r7, #20]
 8005b24:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005b28:	617b      	str	r3, [r7, #20]
 8005b2a:	683b      	ldr	r3, [r7, #0]
 8005b2c:	68db      	ldr	r3, [r3, #12]
 8005b2e:	021b      	lsls	r3, r3, #8
 8005b30:	697a      	ldr	r2, [r7, #20]
 8005b32:	4313      	orrs	r3, r2
 8005b34:	617b      	str	r3, [r7, #20]
 8005b36:	697b      	ldr	r3, [r7, #20]
 8005b38:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005b3c:	617b      	str	r3, [r7, #20]
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	4a14      	ldr	r2, [pc, #80]	; (8005b94 <TIM_OC3_SetConfig+0xd0>)
 8005b42:	4293      	cmp	r3, r2
 8005b44:	d113      	bne.n	8005b6e <TIM_OC3_SetConfig+0xaa>
 8005b46:	693b      	ldr	r3, [r7, #16]
 8005b48:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005b4c:	613b      	str	r3, [r7, #16]
 8005b4e:	693b      	ldr	r3, [r7, #16]
 8005b50:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005b54:	613b      	str	r3, [r7, #16]
 8005b56:	683b      	ldr	r3, [r7, #0]
 8005b58:	695b      	ldr	r3, [r3, #20]
 8005b5a:	011b      	lsls	r3, r3, #4
 8005b5c:	693a      	ldr	r2, [r7, #16]
 8005b5e:	4313      	orrs	r3, r2
 8005b60:	613b      	str	r3, [r7, #16]
 8005b62:	683b      	ldr	r3, [r7, #0]
 8005b64:	699b      	ldr	r3, [r3, #24]
 8005b66:	011b      	lsls	r3, r3, #4
 8005b68:	693a      	ldr	r2, [r7, #16]
 8005b6a:	4313      	orrs	r3, r2
 8005b6c:	613b      	str	r3, [r7, #16]
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	693a      	ldr	r2, [r7, #16]
 8005b72:	605a      	str	r2, [r3, #4]
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	68fa      	ldr	r2, [r7, #12]
 8005b78:	61da      	str	r2, [r3, #28]
 8005b7a:	683b      	ldr	r3, [r7, #0]
 8005b7c:	685a      	ldr	r2, [r3, #4]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	63da      	str	r2, [r3, #60]	; 0x3c
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	697a      	ldr	r2, [r7, #20]
 8005b86:	621a      	str	r2, [r3, #32]
 8005b88:	bf00      	nop
 8005b8a:	371c      	adds	r7, #28
 8005b8c:	46bd      	mov	sp, r7
 8005b8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b92:	4770      	bx	lr
 8005b94:	40010000 	.word	0x40010000

08005b98 <TIM_OC4_SetConfig>:
 8005b98:	b480      	push	{r7}
 8005b9a:	b087      	sub	sp, #28
 8005b9c:	af00      	add	r7, sp, #0
 8005b9e:	6078      	str	r0, [r7, #4]
 8005ba0:	6039      	str	r1, [r7, #0]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	6a1b      	ldr	r3, [r3, #32]
 8005ba6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	621a      	str	r2, [r3, #32]
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	6a1b      	ldr	r3, [r3, #32]
 8005bb2:	613b      	str	r3, [r7, #16]
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	685b      	ldr	r3, [r3, #4]
 8005bb8:	617b      	str	r3, [r7, #20]
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	69db      	ldr	r3, [r3, #28]
 8005bbe:	60fb      	str	r3, [r7, #12]
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005bc6:	60fb      	str	r3, [r7, #12]
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005bce:	60fb      	str	r3, [r7, #12]
 8005bd0:	683b      	ldr	r3, [r7, #0]
 8005bd2:	681b      	ldr	r3, [r3, #0]
 8005bd4:	021b      	lsls	r3, r3, #8
 8005bd6:	68fa      	ldr	r2, [r7, #12]
 8005bd8:	4313      	orrs	r3, r2
 8005bda:	60fb      	str	r3, [r7, #12]
 8005bdc:	693b      	ldr	r3, [r7, #16]
 8005bde:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005be2:	613b      	str	r3, [r7, #16]
 8005be4:	683b      	ldr	r3, [r7, #0]
 8005be6:	689b      	ldr	r3, [r3, #8]
 8005be8:	031b      	lsls	r3, r3, #12
 8005bea:	693a      	ldr	r2, [r7, #16]
 8005bec:	4313      	orrs	r3, r2
 8005bee:	613b      	str	r3, [r7, #16]
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	4a10      	ldr	r2, [pc, #64]	; (8005c34 <TIM_OC4_SetConfig+0x9c>)
 8005bf4:	4293      	cmp	r3, r2
 8005bf6:	d109      	bne.n	8005c0c <TIM_OC4_SetConfig+0x74>
 8005bf8:	697b      	ldr	r3, [r7, #20]
 8005bfa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005bfe:	617b      	str	r3, [r7, #20]
 8005c00:	683b      	ldr	r3, [r7, #0]
 8005c02:	695b      	ldr	r3, [r3, #20]
 8005c04:	019b      	lsls	r3, r3, #6
 8005c06:	697a      	ldr	r2, [r7, #20]
 8005c08:	4313      	orrs	r3, r2
 8005c0a:	617b      	str	r3, [r7, #20]
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	697a      	ldr	r2, [r7, #20]
 8005c10:	605a      	str	r2, [r3, #4]
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	68fa      	ldr	r2, [r7, #12]
 8005c16:	61da      	str	r2, [r3, #28]
 8005c18:	683b      	ldr	r3, [r7, #0]
 8005c1a:	685a      	ldr	r2, [r3, #4]
 8005c1c:	687b      	ldr	r3, [r7, #4]
 8005c1e:	641a      	str	r2, [r3, #64]	; 0x40
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	693a      	ldr	r2, [r7, #16]
 8005c24:	621a      	str	r2, [r3, #32]
 8005c26:	bf00      	nop
 8005c28:	371c      	adds	r7, #28
 8005c2a:	46bd      	mov	sp, r7
 8005c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c30:	4770      	bx	lr
 8005c32:	bf00      	nop
 8005c34:	40010000 	.word	0x40010000

08005c38 <TIM_CCxChannelCmd>:
 8005c38:	b480      	push	{r7}
 8005c3a:	b087      	sub	sp, #28
 8005c3c:	af00      	add	r7, sp, #0
 8005c3e:	60f8      	str	r0, [r7, #12]
 8005c40:	60b9      	str	r1, [r7, #8]
 8005c42:	607a      	str	r2, [r7, #4]
 8005c44:	68bb      	ldr	r3, [r7, #8]
 8005c46:	f003 031f 	and.w	r3, r3, #31
 8005c4a:	2201      	movs	r2, #1
 8005c4c:	fa02 f303 	lsl.w	r3, r2, r3
 8005c50:	617b      	str	r3, [r7, #20]
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	6a1a      	ldr	r2, [r3, #32]
 8005c56:	697b      	ldr	r3, [r7, #20]
 8005c58:	43db      	mvns	r3, r3
 8005c5a:	401a      	ands	r2, r3
 8005c5c:	68fb      	ldr	r3, [r7, #12]
 8005c5e:	621a      	str	r2, [r3, #32]
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	6a1a      	ldr	r2, [r3, #32]
 8005c64:	68bb      	ldr	r3, [r7, #8]
 8005c66:	f003 031f 	and.w	r3, r3, #31
 8005c6a:	6879      	ldr	r1, [r7, #4]
 8005c6c:	fa01 f303 	lsl.w	r3, r1, r3
 8005c70:	431a      	orrs	r2, r3
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	621a      	str	r2, [r3, #32]
 8005c76:	bf00      	nop
 8005c78:	371c      	adds	r7, #28
 8005c7a:	46bd      	mov	sp, r7
 8005c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c80:	4770      	bx	lr
	...

08005c84 <HAL_TIMEx_MasterConfigSynchronization>:
 8005c84:	b480      	push	{r7}
 8005c86:	b085      	sub	sp, #20
 8005c88:	af00      	add	r7, sp, #0
 8005c8a:	6078      	str	r0, [r7, #4]
 8005c8c:	6039      	str	r1, [r7, #0]
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005c94:	2b01      	cmp	r3, #1
 8005c96:	d101      	bne.n	8005c9c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005c98:	2302      	movs	r3, #2
 8005c9a:	e050      	b.n	8005d3e <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	2201      	movs	r2, #1
 8005ca0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	2202      	movs	r2, #2
 8005ca8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	685b      	ldr	r3, [r3, #4]
 8005cb2:	60fb      	str	r3, [r7, #12]
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	689b      	ldr	r3, [r3, #8]
 8005cba:	60bb      	str	r3, [r7, #8]
 8005cbc:	68fb      	ldr	r3, [r7, #12]
 8005cbe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005cc2:	60fb      	str	r3, [r7, #12]
 8005cc4:	683b      	ldr	r3, [r7, #0]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	68fa      	ldr	r2, [r7, #12]
 8005cca:	4313      	orrs	r3, r2
 8005ccc:	60fb      	str	r3, [r7, #12]
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	68fa      	ldr	r2, [r7, #12]
 8005cd4:	605a      	str	r2, [r3, #4]
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	4a1c      	ldr	r2, [pc, #112]	; (8005d4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8005cdc:	4293      	cmp	r3, r2
 8005cde:	d018      	beq.n	8005d12 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005ce8:	d013      	beq.n	8005d12 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	4a18      	ldr	r2, [pc, #96]	; (8005d50 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8005cf0:	4293      	cmp	r3, r2
 8005cf2:	d00e      	beq.n	8005d12 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	681b      	ldr	r3, [r3, #0]
 8005cf8:	4a16      	ldr	r2, [pc, #88]	; (8005d54 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8005cfa:	4293      	cmp	r3, r2
 8005cfc:	d009      	beq.n	8005d12 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	4a15      	ldr	r2, [pc, #84]	; (8005d58 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8005d04:	4293      	cmp	r3, r2
 8005d06:	d004      	beq.n	8005d12 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	4a13      	ldr	r2, [pc, #76]	; (8005d5c <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8005d0e:	4293      	cmp	r3, r2
 8005d10:	d10c      	bne.n	8005d2c <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8005d12:	68bb      	ldr	r3, [r7, #8]
 8005d14:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005d18:	60bb      	str	r3, [r7, #8]
 8005d1a:	683b      	ldr	r3, [r7, #0]
 8005d1c:	685b      	ldr	r3, [r3, #4]
 8005d1e:	68ba      	ldr	r2, [r7, #8]
 8005d20:	4313      	orrs	r3, r2
 8005d22:	60bb      	str	r3, [r7, #8]
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	68ba      	ldr	r2, [r7, #8]
 8005d2a:	609a      	str	r2, [r3, #8]
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	2201      	movs	r2, #1
 8005d30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	2200      	movs	r2, #0
 8005d38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d3c:	2300      	movs	r3, #0
 8005d3e:	4618      	mov	r0, r3
 8005d40:	3714      	adds	r7, #20
 8005d42:	46bd      	mov	sp, r7
 8005d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d48:	4770      	bx	lr
 8005d4a:	bf00      	nop
 8005d4c:	40010000 	.word	0x40010000
 8005d50:	40000400 	.word	0x40000400
 8005d54:	40000800 	.word	0x40000800
 8005d58:	40000c00 	.word	0x40000c00
 8005d5c:	40014000 	.word	0x40014000

08005d60 <HAL_TIMEx_ConfigBreakDeadTime>:
 8005d60:	b480      	push	{r7}
 8005d62:	b085      	sub	sp, #20
 8005d64:	af00      	add	r7, sp, #0
 8005d66:	6078      	str	r0, [r7, #4]
 8005d68:	6039      	str	r1, [r7, #0]
 8005d6a:	2300      	movs	r3, #0
 8005d6c:	60fb      	str	r3, [r7, #12]
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005d74:	2b01      	cmp	r3, #1
 8005d76:	d101      	bne.n	8005d7c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8005d78:	2302      	movs	r3, #2
 8005d7a:	e03d      	b.n	8005df8 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	2201      	movs	r2, #1
 8005d80:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8005d8a:	683b      	ldr	r3, [r7, #0]
 8005d8c:	68db      	ldr	r3, [r3, #12]
 8005d8e:	4313      	orrs	r3, r2
 8005d90:	60fb      	str	r3, [r7, #12]
 8005d92:	68fb      	ldr	r3, [r7, #12]
 8005d94:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005d98:	683b      	ldr	r3, [r7, #0]
 8005d9a:	689b      	ldr	r3, [r3, #8]
 8005d9c:	4313      	orrs	r3, r2
 8005d9e:	60fb      	str	r3, [r7, #12]
 8005da0:	68fb      	ldr	r3, [r7, #12]
 8005da2:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8005da6:	683b      	ldr	r3, [r7, #0]
 8005da8:	685b      	ldr	r3, [r3, #4]
 8005daa:	4313      	orrs	r3, r2
 8005dac:	60fb      	str	r3, [r7, #12]
 8005dae:	68fb      	ldr	r3, [r7, #12]
 8005db0:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8005db4:	683b      	ldr	r3, [r7, #0]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	4313      	orrs	r3, r2
 8005dba:	60fb      	str	r3, [r7, #12]
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005dc2:	683b      	ldr	r3, [r7, #0]
 8005dc4:	691b      	ldr	r3, [r3, #16]
 8005dc6:	4313      	orrs	r3, r2
 8005dc8:	60fb      	str	r3, [r7, #12]
 8005dca:	68fb      	ldr	r3, [r7, #12]
 8005dcc:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8005dd0:	683b      	ldr	r3, [r7, #0]
 8005dd2:	695b      	ldr	r3, [r3, #20]
 8005dd4:	4313      	orrs	r3, r2
 8005dd6:	60fb      	str	r3, [r7, #12]
 8005dd8:	68fb      	ldr	r3, [r7, #12]
 8005dda:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8005dde:	683b      	ldr	r3, [r7, #0]
 8005de0:	69db      	ldr	r3, [r3, #28]
 8005de2:	4313      	orrs	r3, r2
 8005de4:	60fb      	str	r3, [r7, #12]
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	681b      	ldr	r3, [r3, #0]
 8005dea:	68fa      	ldr	r2, [r7, #12]
 8005dec:	645a      	str	r2, [r3, #68]	; 0x44
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	2200      	movs	r2, #0
 8005df2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005df6:	2300      	movs	r3, #0
 8005df8:	4618      	mov	r0, r3
 8005dfa:	3714      	adds	r7, #20
 8005dfc:	46bd      	mov	sp, r7
 8005dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e02:	4770      	bx	lr

08005e04 <HAL_TIMEx_CommutCallback>:
 8005e04:	b480      	push	{r7}
 8005e06:	b083      	sub	sp, #12
 8005e08:	af00      	add	r7, sp, #0
 8005e0a:	6078      	str	r0, [r7, #4]
 8005e0c:	bf00      	nop
 8005e0e:	370c      	adds	r7, #12
 8005e10:	46bd      	mov	sp, r7
 8005e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e16:	4770      	bx	lr

08005e18 <HAL_TIMEx_BreakCallback>:
 8005e18:	b480      	push	{r7}
 8005e1a:	b083      	sub	sp, #12
 8005e1c:	af00      	add	r7, sp, #0
 8005e1e:	6078      	str	r0, [r7, #4]
 8005e20:	bf00      	nop
 8005e22:	370c      	adds	r7, #12
 8005e24:	46bd      	mov	sp, r7
 8005e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e2a:	4770      	bx	lr

08005e2c <makeFreeRtosPriority>:
 8005e2c:	b480      	push	{r7}
 8005e2e:	b085      	sub	sp, #20
 8005e30:	af00      	add	r7, sp, #0
 8005e32:	4603      	mov	r3, r0
 8005e34:	80fb      	strh	r3, [r7, #6]
 8005e36:	2300      	movs	r3, #0
 8005e38:	60fb      	str	r3, [r7, #12]
 8005e3a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005e3e:	2b84      	cmp	r3, #132	; 0x84
 8005e40:	d005      	beq.n	8005e4e <makeFreeRtosPriority+0x22>
 8005e42:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	4413      	add	r3, r2
 8005e4a:	3303      	adds	r3, #3
 8005e4c:	60fb      	str	r3, [r7, #12]
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	4618      	mov	r0, r3
 8005e52:	3714      	adds	r7, #20
 8005e54:	46bd      	mov	sp, r7
 8005e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e5a:	4770      	bx	lr

08005e5c <osKernelStart>:
 8005e5c:	b580      	push	{r7, lr}
 8005e5e:	af00      	add	r7, sp, #0
 8005e60:	f000 fec4 	bl	8006bec <vTaskStartScheduler>
 8005e64:	2300      	movs	r3, #0
 8005e66:	4618      	mov	r0, r3
 8005e68:	bd80      	pop	{r7, pc}

08005e6a <osThreadCreate>:
 8005e6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e6c:	b089      	sub	sp, #36	; 0x24
 8005e6e:	af04      	add	r7, sp, #16
 8005e70:	6078      	str	r0, [r7, #4]
 8005e72:	6039      	str	r1, [r7, #0]
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	695b      	ldr	r3, [r3, #20]
 8005e78:	2b00      	cmp	r3, #0
 8005e7a:	d020      	beq.n	8005ebe <osThreadCreate+0x54>
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	699b      	ldr	r3, [r3, #24]
 8005e80:	2b00      	cmp	r3, #0
 8005e82:	d01c      	beq.n	8005ebe <osThreadCreate+0x54>
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	685c      	ldr	r4, [r3, #4]
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	681d      	ldr	r5, [r3, #0]
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	691e      	ldr	r6, [r3, #16]
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8005e96:	4618      	mov	r0, r3
 8005e98:	f7ff ffc8 	bl	8005e2c <makeFreeRtosPriority>
 8005e9c:	4601      	mov	r1, r0
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	695b      	ldr	r3, [r3, #20]
 8005ea2:	687a      	ldr	r2, [r7, #4]
 8005ea4:	6992      	ldr	r2, [r2, #24]
 8005ea6:	9202      	str	r2, [sp, #8]
 8005ea8:	9301      	str	r3, [sp, #4]
 8005eaa:	9100      	str	r1, [sp, #0]
 8005eac:	683b      	ldr	r3, [r7, #0]
 8005eae:	4632      	mov	r2, r6
 8005eb0:	4629      	mov	r1, r5
 8005eb2:	4620      	mov	r0, r4
 8005eb4:	f000 fcbc 	bl	8006830 <xTaskCreateStatic>
 8005eb8:	4603      	mov	r3, r0
 8005eba:	60fb      	str	r3, [r7, #12]
 8005ebc:	e01c      	b.n	8005ef8 <osThreadCreate+0x8e>
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	685c      	ldr	r4, [r3, #4]
 8005ec2:	687b      	ldr	r3, [r7, #4]
 8005ec4:	681d      	ldr	r5, [r3, #0]
 8005ec6:	687b      	ldr	r3, [r7, #4]
 8005ec8:	691b      	ldr	r3, [r3, #16]
 8005eca:	b29e      	uxth	r6, r3
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8005ed2:	4618      	mov	r0, r3
 8005ed4:	f7ff ffaa 	bl	8005e2c <makeFreeRtosPriority>
 8005ed8:	4602      	mov	r2, r0
 8005eda:	f107 030c 	add.w	r3, r7, #12
 8005ede:	9301      	str	r3, [sp, #4]
 8005ee0:	9200      	str	r2, [sp, #0]
 8005ee2:	683b      	ldr	r3, [r7, #0]
 8005ee4:	4632      	mov	r2, r6
 8005ee6:	4629      	mov	r1, r5
 8005ee8:	4620      	mov	r0, r4
 8005eea:	f000 fcfe 	bl	80068ea <xTaskCreate>
 8005eee:	4603      	mov	r3, r0
 8005ef0:	2b01      	cmp	r3, #1
 8005ef2:	d001      	beq.n	8005ef8 <osThreadCreate+0x8e>
 8005ef4:	2300      	movs	r3, #0
 8005ef6:	e000      	b.n	8005efa <osThreadCreate+0x90>
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	4618      	mov	r0, r3
 8005efc:	3714      	adds	r7, #20
 8005efe:	46bd      	mov	sp, r7
 8005f00:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005f02 <osDelay>:
 8005f02:	b580      	push	{r7, lr}
 8005f04:	b084      	sub	sp, #16
 8005f06:	af00      	add	r7, sp, #0
 8005f08:	6078      	str	r0, [r7, #4]
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	60fb      	str	r3, [r7, #12]
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d001      	beq.n	8005f18 <osDelay+0x16>
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	e000      	b.n	8005f1a <osDelay+0x18>
 8005f18:	2301      	movs	r3, #1
 8005f1a:	4618      	mov	r0, r3
 8005f1c:	f000 fe32 	bl	8006b84 <vTaskDelay>
 8005f20:	2300      	movs	r3, #0
 8005f22:	4618      	mov	r0, r3
 8005f24:	3710      	adds	r7, #16
 8005f26:	46bd      	mov	sp, r7
 8005f28:	bd80      	pop	{r7, pc}

08005f2a <vListInitialise>:
 8005f2a:	b480      	push	{r7}
 8005f2c:	b083      	sub	sp, #12
 8005f2e:	af00      	add	r7, sp, #0
 8005f30:	6078      	str	r0, [r7, #4]
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	f103 0208 	add.w	r2, r3, #8
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	605a      	str	r2, [r3, #4]
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	f04f 32ff 	mov.w	r2, #4294967295
 8005f42:	609a      	str	r2, [r3, #8]
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	f103 0208 	add.w	r2, r3, #8
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	60da      	str	r2, [r3, #12]
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	f103 0208 	add.w	r2, r3, #8
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	611a      	str	r2, [r3, #16]
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	2200      	movs	r2, #0
 8005f5c:	601a      	str	r2, [r3, #0]
 8005f5e:	bf00      	nop
 8005f60:	370c      	adds	r7, #12
 8005f62:	46bd      	mov	sp, r7
 8005f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f68:	4770      	bx	lr

08005f6a <vListInitialiseItem>:
 8005f6a:	b480      	push	{r7}
 8005f6c:	b083      	sub	sp, #12
 8005f6e:	af00      	add	r7, sp, #0
 8005f70:	6078      	str	r0, [r7, #4]
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	2200      	movs	r2, #0
 8005f76:	611a      	str	r2, [r3, #16]
 8005f78:	bf00      	nop
 8005f7a:	370c      	adds	r7, #12
 8005f7c:	46bd      	mov	sp, r7
 8005f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f82:	4770      	bx	lr

08005f84 <vListInsertEnd>:
 8005f84:	b480      	push	{r7}
 8005f86:	b085      	sub	sp, #20
 8005f88:	af00      	add	r7, sp, #0
 8005f8a:	6078      	str	r0, [r7, #4]
 8005f8c:	6039      	str	r1, [r7, #0]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	685b      	ldr	r3, [r3, #4]
 8005f92:	60fb      	str	r3, [r7, #12]
 8005f94:	683b      	ldr	r3, [r7, #0]
 8005f96:	68fa      	ldr	r2, [r7, #12]
 8005f98:	605a      	str	r2, [r3, #4]
 8005f9a:	68fb      	ldr	r3, [r7, #12]
 8005f9c:	689a      	ldr	r2, [r3, #8]
 8005f9e:	683b      	ldr	r3, [r7, #0]
 8005fa0:	609a      	str	r2, [r3, #8]
 8005fa2:	68fb      	ldr	r3, [r7, #12]
 8005fa4:	689b      	ldr	r3, [r3, #8]
 8005fa6:	683a      	ldr	r2, [r7, #0]
 8005fa8:	605a      	str	r2, [r3, #4]
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	683a      	ldr	r2, [r7, #0]
 8005fae:	609a      	str	r2, [r3, #8]
 8005fb0:	683b      	ldr	r3, [r7, #0]
 8005fb2:	687a      	ldr	r2, [r7, #4]
 8005fb4:	611a      	str	r2, [r3, #16]
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	1c5a      	adds	r2, r3, #1
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	601a      	str	r2, [r3, #0]
 8005fc0:	bf00      	nop
 8005fc2:	3714      	adds	r7, #20
 8005fc4:	46bd      	mov	sp, r7
 8005fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fca:	4770      	bx	lr

08005fcc <vListInsert>:
 8005fcc:	b480      	push	{r7}
 8005fce:	b085      	sub	sp, #20
 8005fd0:	af00      	add	r7, sp, #0
 8005fd2:	6078      	str	r0, [r7, #4]
 8005fd4:	6039      	str	r1, [r7, #0]
 8005fd6:	683b      	ldr	r3, [r7, #0]
 8005fd8:	681b      	ldr	r3, [r3, #0]
 8005fda:	60bb      	str	r3, [r7, #8]
 8005fdc:	68bb      	ldr	r3, [r7, #8]
 8005fde:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fe2:	d103      	bne.n	8005fec <vListInsert+0x20>
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	691b      	ldr	r3, [r3, #16]
 8005fe8:	60fb      	str	r3, [r7, #12]
 8005fea:	e00c      	b.n	8006006 <vListInsert+0x3a>
 8005fec:	687b      	ldr	r3, [r7, #4]
 8005fee:	3308      	adds	r3, #8
 8005ff0:	60fb      	str	r3, [r7, #12]
 8005ff2:	e002      	b.n	8005ffa <vListInsert+0x2e>
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	685b      	ldr	r3, [r3, #4]
 8005ff8:	60fb      	str	r3, [r7, #12]
 8005ffa:	68fb      	ldr	r3, [r7, #12]
 8005ffc:	685b      	ldr	r3, [r3, #4]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	68ba      	ldr	r2, [r7, #8]
 8006002:	429a      	cmp	r2, r3
 8006004:	d2f6      	bcs.n	8005ff4 <vListInsert+0x28>
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	685a      	ldr	r2, [r3, #4]
 800600a:	683b      	ldr	r3, [r7, #0]
 800600c:	605a      	str	r2, [r3, #4]
 800600e:	683b      	ldr	r3, [r7, #0]
 8006010:	685b      	ldr	r3, [r3, #4]
 8006012:	683a      	ldr	r2, [r7, #0]
 8006014:	609a      	str	r2, [r3, #8]
 8006016:	683b      	ldr	r3, [r7, #0]
 8006018:	68fa      	ldr	r2, [r7, #12]
 800601a:	609a      	str	r2, [r3, #8]
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	683a      	ldr	r2, [r7, #0]
 8006020:	605a      	str	r2, [r3, #4]
 8006022:	683b      	ldr	r3, [r7, #0]
 8006024:	687a      	ldr	r2, [r7, #4]
 8006026:	611a      	str	r2, [r3, #16]
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	1c5a      	adds	r2, r3, #1
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	601a      	str	r2, [r3, #0]
 8006032:	bf00      	nop
 8006034:	3714      	adds	r7, #20
 8006036:	46bd      	mov	sp, r7
 8006038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800603c:	4770      	bx	lr

0800603e <uxListRemove>:
 800603e:	b480      	push	{r7}
 8006040:	b085      	sub	sp, #20
 8006042:	af00      	add	r7, sp, #0
 8006044:	6078      	str	r0, [r7, #4]
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	691b      	ldr	r3, [r3, #16]
 800604a:	60fb      	str	r3, [r7, #12]
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	685b      	ldr	r3, [r3, #4]
 8006050:	687a      	ldr	r2, [r7, #4]
 8006052:	6892      	ldr	r2, [r2, #8]
 8006054:	609a      	str	r2, [r3, #8]
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	689b      	ldr	r3, [r3, #8]
 800605a:	687a      	ldr	r2, [r7, #4]
 800605c:	6852      	ldr	r2, [r2, #4]
 800605e:	605a      	str	r2, [r3, #4]
 8006060:	68fb      	ldr	r3, [r7, #12]
 8006062:	685b      	ldr	r3, [r3, #4]
 8006064:	687a      	ldr	r2, [r7, #4]
 8006066:	429a      	cmp	r2, r3
 8006068:	d103      	bne.n	8006072 <uxListRemove+0x34>
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	689a      	ldr	r2, [r3, #8]
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	605a      	str	r2, [r3, #4]
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	2200      	movs	r2, #0
 8006076:	611a      	str	r2, [r3, #16]
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	681b      	ldr	r3, [r3, #0]
 800607c:	1e5a      	subs	r2, r3, #1
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	601a      	str	r2, [r3, #0]
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	4618      	mov	r0, r3
 8006088:	3714      	adds	r7, #20
 800608a:	46bd      	mov	sp, r7
 800608c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006090:	4770      	bx	lr
	...

08006094 <xQueueGenericReset>:
 8006094:	b580      	push	{r7, lr}
 8006096:	b084      	sub	sp, #16
 8006098:	af00      	add	r7, sp, #0
 800609a:	6078      	str	r0, [r7, #4]
 800609c:	6039      	str	r1, [r7, #0]
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	60fb      	str	r3, [r7, #12]
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	2b00      	cmp	r3, #0
 80060a6:	d10a      	bne.n	80060be <xQueueGenericReset+0x2a>
 80060a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80060ac:	f383 8811 	msr	BASEPRI, r3
 80060b0:	f3bf 8f6f 	isb	sy
 80060b4:	f3bf 8f4f 	dsb	sy
 80060b8:	60bb      	str	r3, [r7, #8]
 80060ba:	bf00      	nop
 80060bc:	e7fe      	b.n	80060bc <xQueueGenericReset+0x28>
 80060be:	f001 fbe1 	bl	8007884 <vPortEnterCritical>
 80060c2:	68fb      	ldr	r3, [r7, #12]
 80060c4:	681a      	ldr	r2, [r3, #0]
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80060ca:	68f9      	ldr	r1, [r7, #12]
 80060cc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80060ce:	fb01 f303 	mul.w	r3, r1, r3
 80060d2:	441a      	add	r2, r3
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	609a      	str	r2, [r3, #8]
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	2200      	movs	r2, #0
 80060dc:	639a      	str	r2, [r3, #56]	; 0x38
 80060de:	68fb      	ldr	r3, [r7, #12]
 80060e0:	681a      	ldr	r2, [r3, #0]
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	605a      	str	r2, [r3, #4]
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	681a      	ldr	r2, [r3, #0]
 80060ea:	68fb      	ldr	r3, [r7, #12]
 80060ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80060ee:	3b01      	subs	r3, #1
 80060f0:	68f9      	ldr	r1, [r7, #12]
 80060f2:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80060f4:	fb01 f303 	mul.w	r3, r1, r3
 80060f8:	441a      	add	r2, r3
 80060fa:	68fb      	ldr	r3, [r7, #12]
 80060fc:	60da      	str	r2, [r3, #12]
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	22ff      	movs	r2, #255	; 0xff
 8006102:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	22ff      	movs	r2, #255	; 0xff
 800610a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800610e:	683b      	ldr	r3, [r7, #0]
 8006110:	2b00      	cmp	r3, #0
 8006112:	d114      	bne.n	800613e <xQueueGenericReset+0xaa>
 8006114:	68fb      	ldr	r3, [r7, #12]
 8006116:	691b      	ldr	r3, [r3, #16]
 8006118:	2b00      	cmp	r3, #0
 800611a:	d01a      	beq.n	8006152 <xQueueGenericReset+0xbe>
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	3310      	adds	r3, #16
 8006120:	4618      	mov	r0, r3
 8006122:	f000 ffb5 	bl	8007090 <xTaskRemoveFromEventList>
 8006126:	4603      	mov	r3, r0
 8006128:	2b00      	cmp	r3, #0
 800612a:	d012      	beq.n	8006152 <xQueueGenericReset+0xbe>
 800612c:	4b0c      	ldr	r3, [pc, #48]	; (8006160 <xQueueGenericReset+0xcc>)
 800612e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006132:	601a      	str	r2, [r3, #0]
 8006134:	f3bf 8f4f 	dsb	sy
 8006138:	f3bf 8f6f 	isb	sy
 800613c:	e009      	b.n	8006152 <xQueueGenericReset+0xbe>
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	3310      	adds	r3, #16
 8006142:	4618      	mov	r0, r3
 8006144:	f7ff fef1 	bl	8005f2a <vListInitialise>
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	3324      	adds	r3, #36	; 0x24
 800614c:	4618      	mov	r0, r3
 800614e:	f7ff feec 	bl	8005f2a <vListInitialise>
 8006152:	f001 fbc7 	bl	80078e4 <vPortExitCritical>
 8006156:	2301      	movs	r3, #1
 8006158:	4618      	mov	r0, r3
 800615a:	3710      	adds	r7, #16
 800615c:	46bd      	mov	sp, r7
 800615e:	bd80      	pop	{r7, pc}
 8006160:	e000ed04 	.word	0xe000ed04

08006164 <xQueueGenericCreate>:
 8006164:	b580      	push	{r7, lr}
 8006166:	b08a      	sub	sp, #40	; 0x28
 8006168:	af02      	add	r7, sp, #8
 800616a:	60f8      	str	r0, [r7, #12]
 800616c:	60b9      	str	r1, [r7, #8]
 800616e:	4613      	mov	r3, r2
 8006170:	71fb      	strb	r3, [r7, #7]
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	2b00      	cmp	r3, #0
 8006176:	d10a      	bne.n	800618e <xQueueGenericCreate+0x2a>
 8006178:	f04f 0350 	mov.w	r3, #80	; 0x50
 800617c:	f383 8811 	msr	BASEPRI, r3
 8006180:	f3bf 8f6f 	isb	sy
 8006184:	f3bf 8f4f 	dsb	sy
 8006188:	613b      	str	r3, [r7, #16]
 800618a:	bf00      	nop
 800618c:	e7fe      	b.n	800618c <xQueueGenericCreate+0x28>
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	68ba      	ldr	r2, [r7, #8]
 8006192:	fb02 f303 	mul.w	r3, r2, r3
 8006196:	61fb      	str	r3, [r7, #28]
 8006198:	69fb      	ldr	r3, [r7, #28]
 800619a:	3348      	adds	r3, #72	; 0x48
 800619c:	4618      	mov	r0, r3
 800619e:	f001 fc53 	bl	8007a48 <pvPortMalloc>
 80061a2:	61b8      	str	r0, [r7, #24]
 80061a4:	69bb      	ldr	r3, [r7, #24]
 80061a6:	2b00      	cmp	r3, #0
 80061a8:	d011      	beq.n	80061ce <xQueueGenericCreate+0x6a>
 80061aa:	69bb      	ldr	r3, [r7, #24]
 80061ac:	617b      	str	r3, [r7, #20]
 80061ae:	697b      	ldr	r3, [r7, #20]
 80061b0:	3348      	adds	r3, #72	; 0x48
 80061b2:	617b      	str	r3, [r7, #20]
 80061b4:	69bb      	ldr	r3, [r7, #24]
 80061b6:	2200      	movs	r2, #0
 80061b8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80061bc:	79fa      	ldrb	r2, [r7, #7]
 80061be:	69bb      	ldr	r3, [r7, #24]
 80061c0:	9300      	str	r3, [sp, #0]
 80061c2:	4613      	mov	r3, r2
 80061c4:	697a      	ldr	r2, [r7, #20]
 80061c6:	68b9      	ldr	r1, [r7, #8]
 80061c8:	68f8      	ldr	r0, [r7, #12]
 80061ca:	f000 f805 	bl	80061d8 <prvInitialiseNewQueue>
 80061ce:	69bb      	ldr	r3, [r7, #24]
 80061d0:	4618      	mov	r0, r3
 80061d2:	3720      	adds	r7, #32
 80061d4:	46bd      	mov	sp, r7
 80061d6:	bd80      	pop	{r7, pc}

080061d8 <prvInitialiseNewQueue>:
 80061d8:	b580      	push	{r7, lr}
 80061da:	b084      	sub	sp, #16
 80061dc:	af00      	add	r7, sp, #0
 80061de:	60f8      	str	r0, [r7, #12]
 80061e0:	60b9      	str	r1, [r7, #8]
 80061e2:	607a      	str	r2, [r7, #4]
 80061e4:	70fb      	strb	r3, [r7, #3]
 80061e6:	68bb      	ldr	r3, [r7, #8]
 80061e8:	2b00      	cmp	r3, #0
 80061ea:	d103      	bne.n	80061f4 <prvInitialiseNewQueue+0x1c>
 80061ec:	69bb      	ldr	r3, [r7, #24]
 80061ee:	69ba      	ldr	r2, [r7, #24]
 80061f0:	601a      	str	r2, [r3, #0]
 80061f2:	e002      	b.n	80061fa <prvInitialiseNewQueue+0x22>
 80061f4:	69bb      	ldr	r3, [r7, #24]
 80061f6:	687a      	ldr	r2, [r7, #4]
 80061f8:	601a      	str	r2, [r3, #0]
 80061fa:	69bb      	ldr	r3, [r7, #24]
 80061fc:	68fa      	ldr	r2, [r7, #12]
 80061fe:	63da      	str	r2, [r3, #60]	; 0x3c
 8006200:	69bb      	ldr	r3, [r7, #24]
 8006202:	68ba      	ldr	r2, [r7, #8]
 8006204:	641a      	str	r2, [r3, #64]	; 0x40
 8006206:	2101      	movs	r1, #1
 8006208:	69b8      	ldr	r0, [r7, #24]
 800620a:	f7ff ff43 	bl	8006094 <xQueueGenericReset>
 800620e:	bf00      	nop
 8006210:	3710      	adds	r7, #16
 8006212:	46bd      	mov	sp, r7
 8006214:	bd80      	pop	{r7, pc}
	...

08006218 <xQueueGenericSend>:
 8006218:	b580      	push	{r7, lr}
 800621a:	b08e      	sub	sp, #56	; 0x38
 800621c:	af00      	add	r7, sp, #0
 800621e:	60f8      	str	r0, [r7, #12]
 8006220:	60b9      	str	r1, [r7, #8]
 8006222:	607a      	str	r2, [r7, #4]
 8006224:	603b      	str	r3, [r7, #0]
 8006226:	2300      	movs	r3, #0
 8006228:	637b      	str	r3, [r7, #52]	; 0x34
 800622a:	68fb      	ldr	r3, [r7, #12]
 800622c:	633b      	str	r3, [r7, #48]	; 0x30
 800622e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006230:	2b00      	cmp	r3, #0
 8006232:	d10a      	bne.n	800624a <xQueueGenericSend+0x32>
 8006234:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006238:	f383 8811 	msr	BASEPRI, r3
 800623c:	f3bf 8f6f 	isb	sy
 8006240:	f3bf 8f4f 	dsb	sy
 8006244:	62bb      	str	r3, [r7, #40]	; 0x28
 8006246:	bf00      	nop
 8006248:	e7fe      	b.n	8006248 <xQueueGenericSend+0x30>
 800624a:	68bb      	ldr	r3, [r7, #8]
 800624c:	2b00      	cmp	r3, #0
 800624e:	d103      	bne.n	8006258 <xQueueGenericSend+0x40>
 8006250:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006252:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006254:	2b00      	cmp	r3, #0
 8006256:	d101      	bne.n	800625c <xQueueGenericSend+0x44>
 8006258:	2301      	movs	r3, #1
 800625a:	e000      	b.n	800625e <xQueueGenericSend+0x46>
 800625c:	2300      	movs	r3, #0
 800625e:	2b00      	cmp	r3, #0
 8006260:	d10a      	bne.n	8006278 <xQueueGenericSend+0x60>
 8006262:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006266:	f383 8811 	msr	BASEPRI, r3
 800626a:	f3bf 8f6f 	isb	sy
 800626e:	f3bf 8f4f 	dsb	sy
 8006272:	627b      	str	r3, [r7, #36]	; 0x24
 8006274:	bf00      	nop
 8006276:	e7fe      	b.n	8006276 <xQueueGenericSend+0x5e>
 8006278:	683b      	ldr	r3, [r7, #0]
 800627a:	2b02      	cmp	r3, #2
 800627c:	d103      	bne.n	8006286 <xQueueGenericSend+0x6e>
 800627e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006280:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006282:	2b01      	cmp	r3, #1
 8006284:	d101      	bne.n	800628a <xQueueGenericSend+0x72>
 8006286:	2301      	movs	r3, #1
 8006288:	e000      	b.n	800628c <xQueueGenericSend+0x74>
 800628a:	2300      	movs	r3, #0
 800628c:	2b00      	cmp	r3, #0
 800628e:	d10a      	bne.n	80062a6 <xQueueGenericSend+0x8e>
 8006290:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006294:	f383 8811 	msr	BASEPRI, r3
 8006298:	f3bf 8f6f 	isb	sy
 800629c:	f3bf 8f4f 	dsb	sy
 80062a0:	623b      	str	r3, [r7, #32]
 80062a2:	bf00      	nop
 80062a4:	e7fe      	b.n	80062a4 <xQueueGenericSend+0x8c>
 80062a6:	f001 f8b3 	bl	8007410 <xTaskGetSchedulerState>
 80062aa:	4603      	mov	r3, r0
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	d102      	bne.n	80062b6 <xQueueGenericSend+0x9e>
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d101      	bne.n	80062ba <xQueueGenericSend+0xa2>
 80062b6:	2301      	movs	r3, #1
 80062b8:	e000      	b.n	80062bc <xQueueGenericSend+0xa4>
 80062ba:	2300      	movs	r3, #0
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d10a      	bne.n	80062d6 <xQueueGenericSend+0xbe>
 80062c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80062c4:	f383 8811 	msr	BASEPRI, r3
 80062c8:	f3bf 8f6f 	isb	sy
 80062cc:	f3bf 8f4f 	dsb	sy
 80062d0:	61fb      	str	r3, [r7, #28]
 80062d2:	bf00      	nop
 80062d4:	e7fe      	b.n	80062d4 <xQueueGenericSend+0xbc>
 80062d6:	f001 fad5 	bl	8007884 <vPortEnterCritical>
 80062da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80062dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80062de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80062e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80062e2:	429a      	cmp	r2, r3
 80062e4:	d302      	bcc.n	80062ec <xQueueGenericSend+0xd4>
 80062e6:	683b      	ldr	r3, [r7, #0]
 80062e8:	2b02      	cmp	r3, #2
 80062ea:	d129      	bne.n	8006340 <xQueueGenericSend+0x128>
 80062ec:	683a      	ldr	r2, [r7, #0]
 80062ee:	68b9      	ldr	r1, [r7, #8]
 80062f0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80062f2:	f000 f98d 	bl	8006610 <prvCopyDataToQueue>
 80062f6:	62f8      	str	r0, [r7, #44]	; 0x2c
 80062f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80062fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062fc:	2b00      	cmp	r3, #0
 80062fe:	d010      	beq.n	8006322 <xQueueGenericSend+0x10a>
 8006300:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006302:	3324      	adds	r3, #36	; 0x24
 8006304:	4618      	mov	r0, r3
 8006306:	f000 fec3 	bl	8007090 <xTaskRemoveFromEventList>
 800630a:	4603      	mov	r3, r0
 800630c:	2b00      	cmp	r3, #0
 800630e:	d013      	beq.n	8006338 <xQueueGenericSend+0x120>
 8006310:	4b3f      	ldr	r3, [pc, #252]	; (8006410 <xQueueGenericSend+0x1f8>)
 8006312:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006316:	601a      	str	r2, [r3, #0]
 8006318:	f3bf 8f4f 	dsb	sy
 800631c:	f3bf 8f6f 	isb	sy
 8006320:	e00a      	b.n	8006338 <xQueueGenericSend+0x120>
 8006322:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006324:	2b00      	cmp	r3, #0
 8006326:	d007      	beq.n	8006338 <xQueueGenericSend+0x120>
 8006328:	4b39      	ldr	r3, [pc, #228]	; (8006410 <xQueueGenericSend+0x1f8>)
 800632a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800632e:	601a      	str	r2, [r3, #0]
 8006330:	f3bf 8f4f 	dsb	sy
 8006334:	f3bf 8f6f 	isb	sy
 8006338:	f001 fad4 	bl	80078e4 <vPortExitCritical>
 800633c:	2301      	movs	r3, #1
 800633e:	e063      	b.n	8006408 <xQueueGenericSend+0x1f0>
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	2b00      	cmp	r3, #0
 8006344:	d103      	bne.n	800634e <xQueueGenericSend+0x136>
 8006346:	f001 facd 	bl	80078e4 <vPortExitCritical>
 800634a:	2300      	movs	r3, #0
 800634c:	e05c      	b.n	8006408 <xQueueGenericSend+0x1f0>
 800634e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006350:	2b00      	cmp	r3, #0
 8006352:	d106      	bne.n	8006362 <xQueueGenericSend+0x14a>
 8006354:	f107 0314 	add.w	r3, r7, #20
 8006358:	4618      	mov	r0, r3
 800635a:	f000 fefb 	bl	8007154 <vTaskInternalSetTimeOutState>
 800635e:	2301      	movs	r3, #1
 8006360:	637b      	str	r3, [r7, #52]	; 0x34
 8006362:	f001 fabf 	bl	80078e4 <vPortExitCritical>
 8006366:	f000 fcab 	bl	8006cc0 <vTaskSuspendAll>
 800636a:	f001 fa8b 	bl	8007884 <vPortEnterCritical>
 800636e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006370:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8006374:	b25b      	sxtb	r3, r3
 8006376:	f1b3 3fff 	cmp.w	r3, #4294967295
 800637a:	d103      	bne.n	8006384 <xQueueGenericSend+0x16c>
 800637c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800637e:	2200      	movs	r2, #0
 8006380:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006384:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006386:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800638a:	b25b      	sxtb	r3, r3
 800638c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006390:	d103      	bne.n	800639a <xQueueGenericSend+0x182>
 8006392:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006394:	2200      	movs	r2, #0
 8006396:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800639a:	f001 faa3 	bl	80078e4 <vPortExitCritical>
 800639e:	1d3a      	adds	r2, r7, #4
 80063a0:	f107 0314 	add.w	r3, r7, #20
 80063a4:	4611      	mov	r1, r2
 80063a6:	4618      	mov	r0, r3
 80063a8:	f000 feea 	bl	8007180 <xTaskCheckForTimeOut>
 80063ac:	4603      	mov	r3, r0
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	d124      	bne.n	80063fc <xQueueGenericSend+0x1e4>
 80063b2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80063b4:	f000 fa24 	bl	8006800 <prvIsQueueFull>
 80063b8:	4603      	mov	r3, r0
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d018      	beq.n	80063f0 <xQueueGenericSend+0x1d8>
 80063be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80063c0:	3310      	adds	r3, #16
 80063c2:	687a      	ldr	r2, [r7, #4]
 80063c4:	4611      	mov	r1, r2
 80063c6:	4618      	mov	r0, r3
 80063c8:	f000 fe3e 	bl	8007048 <vTaskPlaceOnEventList>
 80063cc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80063ce:	f000 f9af 	bl	8006730 <prvUnlockQueue>
 80063d2:	f000 fc83 	bl	8006cdc <xTaskResumeAll>
 80063d6:	4603      	mov	r3, r0
 80063d8:	2b00      	cmp	r3, #0
 80063da:	f47f af7c 	bne.w	80062d6 <xQueueGenericSend+0xbe>
 80063de:	4b0c      	ldr	r3, [pc, #48]	; (8006410 <xQueueGenericSend+0x1f8>)
 80063e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80063e4:	601a      	str	r2, [r3, #0]
 80063e6:	f3bf 8f4f 	dsb	sy
 80063ea:	f3bf 8f6f 	isb	sy
 80063ee:	e772      	b.n	80062d6 <xQueueGenericSend+0xbe>
 80063f0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80063f2:	f000 f99d 	bl	8006730 <prvUnlockQueue>
 80063f6:	f000 fc71 	bl	8006cdc <xTaskResumeAll>
 80063fa:	e76c      	b.n	80062d6 <xQueueGenericSend+0xbe>
 80063fc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80063fe:	f000 f997 	bl	8006730 <prvUnlockQueue>
 8006402:	f000 fc6b 	bl	8006cdc <xTaskResumeAll>
 8006406:	2300      	movs	r3, #0
 8006408:	4618      	mov	r0, r3
 800640a:	3738      	adds	r7, #56	; 0x38
 800640c:	46bd      	mov	sp, r7
 800640e:	bd80      	pop	{r7, pc}
 8006410:	e000ed04 	.word	0xe000ed04

08006414 <xQueueReceive>:
 8006414:	b580      	push	{r7, lr}
 8006416:	b08c      	sub	sp, #48	; 0x30
 8006418:	af00      	add	r7, sp, #0
 800641a:	60f8      	str	r0, [r7, #12]
 800641c:	60b9      	str	r1, [r7, #8]
 800641e:	607a      	str	r2, [r7, #4]
 8006420:	2300      	movs	r3, #0
 8006422:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006424:	68fb      	ldr	r3, [r7, #12]
 8006426:	62bb      	str	r3, [r7, #40]	; 0x28
 8006428:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800642a:	2b00      	cmp	r3, #0
 800642c:	d10a      	bne.n	8006444 <xQueueReceive+0x30>
 800642e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006432:	f383 8811 	msr	BASEPRI, r3
 8006436:	f3bf 8f6f 	isb	sy
 800643a:	f3bf 8f4f 	dsb	sy
 800643e:	623b      	str	r3, [r7, #32]
 8006440:	bf00      	nop
 8006442:	e7fe      	b.n	8006442 <xQueueReceive+0x2e>
 8006444:	68bb      	ldr	r3, [r7, #8]
 8006446:	2b00      	cmp	r3, #0
 8006448:	d103      	bne.n	8006452 <xQueueReceive+0x3e>
 800644a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800644c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800644e:	2b00      	cmp	r3, #0
 8006450:	d101      	bne.n	8006456 <xQueueReceive+0x42>
 8006452:	2301      	movs	r3, #1
 8006454:	e000      	b.n	8006458 <xQueueReceive+0x44>
 8006456:	2300      	movs	r3, #0
 8006458:	2b00      	cmp	r3, #0
 800645a:	d10a      	bne.n	8006472 <xQueueReceive+0x5e>
 800645c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006460:	f383 8811 	msr	BASEPRI, r3
 8006464:	f3bf 8f6f 	isb	sy
 8006468:	f3bf 8f4f 	dsb	sy
 800646c:	61fb      	str	r3, [r7, #28]
 800646e:	bf00      	nop
 8006470:	e7fe      	b.n	8006470 <xQueueReceive+0x5c>
 8006472:	f000 ffcd 	bl	8007410 <xTaskGetSchedulerState>
 8006476:	4603      	mov	r3, r0
 8006478:	2b00      	cmp	r3, #0
 800647a:	d102      	bne.n	8006482 <xQueueReceive+0x6e>
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	2b00      	cmp	r3, #0
 8006480:	d101      	bne.n	8006486 <xQueueReceive+0x72>
 8006482:	2301      	movs	r3, #1
 8006484:	e000      	b.n	8006488 <xQueueReceive+0x74>
 8006486:	2300      	movs	r3, #0
 8006488:	2b00      	cmp	r3, #0
 800648a:	d10a      	bne.n	80064a2 <xQueueReceive+0x8e>
 800648c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006490:	f383 8811 	msr	BASEPRI, r3
 8006494:	f3bf 8f6f 	isb	sy
 8006498:	f3bf 8f4f 	dsb	sy
 800649c:	61bb      	str	r3, [r7, #24]
 800649e:	bf00      	nop
 80064a0:	e7fe      	b.n	80064a0 <xQueueReceive+0x8c>
 80064a2:	f001 f9ef 	bl	8007884 <vPortEnterCritical>
 80064a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80064aa:	627b      	str	r3, [r7, #36]	; 0x24
 80064ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064ae:	2b00      	cmp	r3, #0
 80064b0:	d01f      	beq.n	80064f2 <xQueueReceive+0xde>
 80064b2:	68b9      	ldr	r1, [r7, #8]
 80064b4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80064b6:	f000 f915 	bl	80066e4 <prvCopyDataFromQueue>
 80064ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064bc:	1e5a      	subs	r2, r3, #1
 80064be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064c0:	639a      	str	r2, [r3, #56]	; 0x38
 80064c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064c4:	691b      	ldr	r3, [r3, #16]
 80064c6:	2b00      	cmp	r3, #0
 80064c8:	d00f      	beq.n	80064ea <xQueueReceive+0xd6>
 80064ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80064cc:	3310      	adds	r3, #16
 80064ce:	4618      	mov	r0, r3
 80064d0:	f000 fdde 	bl	8007090 <xTaskRemoveFromEventList>
 80064d4:	4603      	mov	r3, r0
 80064d6:	2b00      	cmp	r3, #0
 80064d8:	d007      	beq.n	80064ea <xQueueReceive+0xd6>
 80064da:	4b3d      	ldr	r3, [pc, #244]	; (80065d0 <xQueueReceive+0x1bc>)
 80064dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80064e0:	601a      	str	r2, [r3, #0]
 80064e2:	f3bf 8f4f 	dsb	sy
 80064e6:	f3bf 8f6f 	isb	sy
 80064ea:	f001 f9fb 	bl	80078e4 <vPortExitCritical>
 80064ee:	2301      	movs	r3, #1
 80064f0:	e069      	b.n	80065c6 <xQueueReceive+0x1b2>
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	2b00      	cmp	r3, #0
 80064f6:	d103      	bne.n	8006500 <xQueueReceive+0xec>
 80064f8:	f001 f9f4 	bl	80078e4 <vPortExitCritical>
 80064fc:	2300      	movs	r3, #0
 80064fe:	e062      	b.n	80065c6 <xQueueReceive+0x1b2>
 8006500:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006502:	2b00      	cmp	r3, #0
 8006504:	d106      	bne.n	8006514 <xQueueReceive+0x100>
 8006506:	f107 0310 	add.w	r3, r7, #16
 800650a:	4618      	mov	r0, r3
 800650c:	f000 fe22 	bl	8007154 <vTaskInternalSetTimeOutState>
 8006510:	2301      	movs	r3, #1
 8006512:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006514:	f001 f9e6 	bl	80078e4 <vPortExitCritical>
 8006518:	f000 fbd2 	bl	8006cc0 <vTaskSuspendAll>
 800651c:	f001 f9b2 	bl	8007884 <vPortEnterCritical>
 8006520:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006522:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8006526:	b25b      	sxtb	r3, r3
 8006528:	f1b3 3fff 	cmp.w	r3, #4294967295
 800652c:	d103      	bne.n	8006536 <xQueueReceive+0x122>
 800652e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006530:	2200      	movs	r2, #0
 8006532:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006536:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006538:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800653c:	b25b      	sxtb	r3, r3
 800653e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006542:	d103      	bne.n	800654c <xQueueReceive+0x138>
 8006544:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006546:	2200      	movs	r2, #0
 8006548:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800654c:	f001 f9ca 	bl	80078e4 <vPortExitCritical>
 8006550:	1d3a      	adds	r2, r7, #4
 8006552:	f107 0310 	add.w	r3, r7, #16
 8006556:	4611      	mov	r1, r2
 8006558:	4618      	mov	r0, r3
 800655a:	f000 fe11 	bl	8007180 <xTaskCheckForTimeOut>
 800655e:	4603      	mov	r3, r0
 8006560:	2b00      	cmp	r3, #0
 8006562:	d123      	bne.n	80065ac <xQueueReceive+0x198>
 8006564:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006566:	f000 f935 	bl	80067d4 <prvIsQueueEmpty>
 800656a:	4603      	mov	r3, r0
 800656c:	2b00      	cmp	r3, #0
 800656e:	d017      	beq.n	80065a0 <xQueueReceive+0x18c>
 8006570:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006572:	3324      	adds	r3, #36	; 0x24
 8006574:	687a      	ldr	r2, [r7, #4]
 8006576:	4611      	mov	r1, r2
 8006578:	4618      	mov	r0, r3
 800657a:	f000 fd65 	bl	8007048 <vTaskPlaceOnEventList>
 800657e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006580:	f000 f8d6 	bl	8006730 <prvUnlockQueue>
 8006584:	f000 fbaa 	bl	8006cdc <xTaskResumeAll>
 8006588:	4603      	mov	r3, r0
 800658a:	2b00      	cmp	r3, #0
 800658c:	d189      	bne.n	80064a2 <xQueueReceive+0x8e>
 800658e:	4b10      	ldr	r3, [pc, #64]	; (80065d0 <xQueueReceive+0x1bc>)
 8006590:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006594:	601a      	str	r2, [r3, #0]
 8006596:	f3bf 8f4f 	dsb	sy
 800659a:	f3bf 8f6f 	isb	sy
 800659e:	e780      	b.n	80064a2 <xQueueReceive+0x8e>
 80065a0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80065a2:	f000 f8c5 	bl	8006730 <prvUnlockQueue>
 80065a6:	f000 fb99 	bl	8006cdc <xTaskResumeAll>
 80065aa:	e77a      	b.n	80064a2 <xQueueReceive+0x8e>
 80065ac:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80065ae:	f000 f8bf 	bl	8006730 <prvUnlockQueue>
 80065b2:	f000 fb93 	bl	8006cdc <xTaskResumeAll>
 80065b6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80065b8:	f000 f90c 	bl	80067d4 <prvIsQueueEmpty>
 80065bc:	4603      	mov	r3, r0
 80065be:	2b00      	cmp	r3, #0
 80065c0:	f43f af6f 	beq.w	80064a2 <xQueueReceive+0x8e>
 80065c4:	2300      	movs	r3, #0
 80065c6:	4618      	mov	r0, r3
 80065c8:	3730      	adds	r7, #48	; 0x30
 80065ca:	46bd      	mov	sp, r7
 80065cc:	bd80      	pop	{r7, pc}
 80065ce:	bf00      	nop
 80065d0:	e000ed04 	.word	0xe000ed04

080065d4 <uxQueueMessagesWaiting>:
 80065d4:	b580      	push	{r7, lr}
 80065d6:	b084      	sub	sp, #16
 80065d8:	af00      	add	r7, sp, #0
 80065da:	6078      	str	r0, [r7, #4]
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	2b00      	cmp	r3, #0
 80065e0:	d10a      	bne.n	80065f8 <uxQueueMessagesWaiting+0x24>
 80065e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80065e6:	f383 8811 	msr	BASEPRI, r3
 80065ea:	f3bf 8f6f 	isb	sy
 80065ee:	f3bf 8f4f 	dsb	sy
 80065f2:	60bb      	str	r3, [r7, #8]
 80065f4:	bf00      	nop
 80065f6:	e7fe      	b.n	80065f6 <uxQueueMessagesWaiting+0x22>
 80065f8:	f001 f944 	bl	8007884 <vPortEnterCritical>
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006600:	60fb      	str	r3, [r7, #12]
 8006602:	f001 f96f 	bl	80078e4 <vPortExitCritical>
 8006606:	68fb      	ldr	r3, [r7, #12]
 8006608:	4618      	mov	r0, r3
 800660a:	3710      	adds	r7, #16
 800660c:	46bd      	mov	sp, r7
 800660e:	bd80      	pop	{r7, pc}

08006610 <prvCopyDataToQueue>:
 8006610:	b580      	push	{r7, lr}
 8006612:	b086      	sub	sp, #24
 8006614:	af00      	add	r7, sp, #0
 8006616:	60f8      	str	r0, [r7, #12]
 8006618:	60b9      	str	r1, [r7, #8]
 800661a:	607a      	str	r2, [r7, #4]
 800661c:	2300      	movs	r3, #0
 800661e:	617b      	str	r3, [r7, #20]
 8006620:	68fb      	ldr	r3, [r7, #12]
 8006622:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006624:	613b      	str	r3, [r7, #16]
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800662a:	2b00      	cmp	r3, #0
 800662c:	d10d      	bne.n	800664a <prvCopyDataToQueue+0x3a>
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	2b00      	cmp	r3, #0
 8006634:	d14d      	bne.n	80066d2 <prvCopyDataToQueue+0xc2>
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	689b      	ldr	r3, [r3, #8]
 800663a:	4618      	mov	r0, r3
 800663c:	f000 ff06 	bl	800744c <xTaskPriorityDisinherit>
 8006640:	6178      	str	r0, [r7, #20]
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	2200      	movs	r2, #0
 8006646:	609a      	str	r2, [r3, #8]
 8006648:	e043      	b.n	80066d2 <prvCopyDataToQueue+0xc2>
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	2b00      	cmp	r3, #0
 800664e:	d119      	bne.n	8006684 <prvCopyDataToQueue+0x74>
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	6858      	ldr	r0, [r3, #4]
 8006654:	68fb      	ldr	r3, [r7, #12]
 8006656:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006658:	461a      	mov	r2, r3
 800665a:	68b9      	ldr	r1, [r7, #8]
 800665c:	f001 fec9 	bl	80083f2 <memcpy>
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	685a      	ldr	r2, [r3, #4]
 8006664:	68fb      	ldr	r3, [r7, #12]
 8006666:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006668:	441a      	add	r2, r3
 800666a:	68fb      	ldr	r3, [r7, #12]
 800666c:	605a      	str	r2, [r3, #4]
 800666e:	68fb      	ldr	r3, [r7, #12]
 8006670:	685a      	ldr	r2, [r3, #4]
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	689b      	ldr	r3, [r3, #8]
 8006676:	429a      	cmp	r2, r3
 8006678:	d32b      	bcc.n	80066d2 <prvCopyDataToQueue+0xc2>
 800667a:	68fb      	ldr	r3, [r7, #12]
 800667c:	681a      	ldr	r2, [r3, #0]
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	605a      	str	r2, [r3, #4]
 8006682:	e026      	b.n	80066d2 <prvCopyDataToQueue+0xc2>
 8006684:	68fb      	ldr	r3, [r7, #12]
 8006686:	68d8      	ldr	r0, [r3, #12]
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800668c:	461a      	mov	r2, r3
 800668e:	68b9      	ldr	r1, [r7, #8]
 8006690:	f001 feaf 	bl	80083f2 <memcpy>
 8006694:	68fb      	ldr	r3, [r7, #12]
 8006696:	68da      	ldr	r2, [r3, #12]
 8006698:	68fb      	ldr	r3, [r7, #12]
 800669a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800669c:	425b      	negs	r3, r3
 800669e:	441a      	add	r2, r3
 80066a0:	68fb      	ldr	r3, [r7, #12]
 80066a2:	60da      	str	r2, [r3, #12]
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	68da      	ldr	r2, [r3, #12]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	429a      	cmp	r2, r3
 80066ae:	d207      	bcs.n	80066c0 <prvCopyDataToQueue+0xb0>
 80066b0:	68fb      	ldr	r3, [r7, #12]
 80066b2:	689a      	ldr	r2, [r3, #8]
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066b8:	425b      	negs	r3, r3
 80066ba:	441a      	add	r2, r3
 80066bc:	68fb      	ldr	r3, [r7, #12]
 80066be:	60da      	str	r2, [r3, #12]
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	2b02      	cmp	r3, #2
 80066c4:	d105      	bne.n	80066d2 <prvCopyDataToQueue+0xc2>
 80066c6:	693b      	ldr	r3, [r7, #16]
 80066c8:	2b00      	cmp	r3, #0
 80066ca:	d002      	beq.n	80066d2 <prvCopyDataToQueue+0xc2>
 80066cc:	693b      	ldr	r3, [r7, #16]
 80066ce:	3b01      	subs	r3, #1
 80066d0:	613b      	str	r3, [r7, #16]
 80066d2:	693b      	ldr	r3, [r7, #16]
 80066d4:	1c5a      	adds	r2, r3, #1
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	639a      	str	r2, [r3, #56]	; 0x38
 80066da:	697b      	ldr	r3, [r7, #20]
 80066dc:	4618      	mov	r0, r3
 80066de:	3718      	adds	r7, #24
 80066e0:	46bd      	mov	sp, r7
 80066e2:	bd80      	pop	{r7, pc}

080066e4 <prvCopyDataFromQueue>:
 80066e4:	b580      	push	{r7, lr}
 80066e6:	b082      	sub	sp, #8
 80066e8:	af00      	add	r7, sp, #0
 80066ea:	6078      	str	r0, [r7, #4]
 80066ec:	6039      	str	r1, [r7, #0]
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d018      	beq.n	8006728 <prvCopyDataFromQueue+0x44>
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	68da      	ldr	r2, [r3, #12]
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066fe:	441a      	add	r2, r3
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	60da      	str	r2, [r3, #12]
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	68da      	ldr	r2, [r3, #12]
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	689b      	ldr	r3, [r3, #8]
 800670c:	429a      	cmp	r2, r3
 800670e:	d303      	bcc.n	8006718 <prvCopyDataFromQueue+0x34>
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	681a      	ldr	r2, [r3, #0]
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	60da      	str	r2, [r3, #12]
 8006718:	687b      	ldr	r3, [r7, #4]
 800671a:	68d9      	ldr	r1, [r3, #12]
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006720:	461a      	mov	r2, r3
 8006722:	6838      	ldr	r0, [r7, #0]
 8006724:	f001 fe65 	bl	80083f2 <memcpy>
 8006728:	bf00      	nop
 800672a:	3708      	adds	r7, #8
 800672c:	46bd      	mov	sp, r7
 800672e:	bd80      	pop	{r7, pc}

08006730 <prvUnlockQueue>:
 8006730:	b580      	push	{r7, lr}
 8006732:	b084      	sub	sp, #16
 8006734:	af00      	add	r7, sp, #0
 8006736:	6078      	str	r0, [r7, #4]
 8006738:	f001 f8a4 	bl	8007884 <vPortEnterCritical>
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8006742:	73fb      	strb	r3, [r7, #15]
 8006744:	e011      	b.n	800676a <prvUnlockQueue+0x3a>
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800674a:	2b00      	cmp	r3, #0
 800674c:	d012      	beq.n	8006774 <prvUnlockQueue+0x44>
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	3324      	adds	r3, #36	; 0x24
 8006752:	4618      	mov	r0, r3
 8006754:	f000 fc9c 	bl	8007090 <xTaskRemoveFromEventList>
 8006758:	4603      	mov	r3, r0
 800675a:	2b00      	cmp	r3, #0
 800675c:	d001      	beq.n	8006762 <prvUnlockQueue+0x32>
 800675e:	f000 fd71 	bl	8007244 <vTaskMissedYield>
 8006762:	7bfb      	ldrb	r3, [r7, #15]
 8006764:	3b01      	subs	r3, #1
 8006766:	b2db      	uxtb	r3, r3
 8006768:	73fb      	strb	r3, [r7, #15]
 800676a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800676e:	2b00      	cmp	r3, #0
 8006770:	dce9      	bgt.n	8006746 <prvUnlockQueue+0x16>
 8006772:	e000      	b.n	8006776 <prvUnlockQueue+0x46>
 8006774:	bf00      	nop
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	22ff      	movs	r2, #255	; 0xff
 800677a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800677e:	f001 f8b1 	bl	80078e4 <vPortExitCritical>
 8006782:	f001 f87f 	bl	8007884 <vPortEnterCritical>
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800678c:	73bb      	strb	r3, [r7, #14]
 800678e:	e011      	b.n	80067b4 <prvUnlockQueue+0x84>
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	691b      	ldr	r3, [r3, #16]
 8006794:	2b00      	cmp	r3, #0
 8006796:	d012      	beq.n	80067be <prvUnlockQueue+0x8e>
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	3310      	adds	r3, #16
 800679c:	4618      	mov	r0, r3
 800679e:	f000 fc77 	bl	8007090 <xTaskRemoveFromEventList>
 80067a2:	4603      	mov	r3, r0
 80067a4:	2b00      	cmp	r3, #0
 80067a6:	d001      	beq.n	80067ac <prvUnlockQueue+0x7c>
 80067a8:	f000 fd4c 	bl	8007244 <vTaskMissedYield>
 80067ac:	7bbb      	ldrb	r3, [r7, #14]
 80067ae:	3b01      	subs	r3, #1
 80067b0:	b2db      	uxtb	r3, r3
 80067b2:	73bb      	strb	r3, [r7, #14]
 80067b4:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	dce9      	bgt.n	8006790 <prvUnlockQueue+0x60>
 80067bc:	e000      	b.n	80067c0 <prvUnlockQueue+0x90>
 80067be:	bf00      	nop
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	22ff      	movs	r2, #255	; 0xff
 80067c4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80067c8:	f001 f88c 	bl	80078e4 <vPortExitCritical>
 80067cc:	bf00      	nop
 80067ce:	3710      	adds	r7, #16
 80067d0:	46bd      	mov	sp, r7
 80067d2:	bd80      	pop	{r7, pc}

080067d4 <prvIsQueueEmpty>:
 80067d4:	b580      	push	{r7, lr}
 80067d6:	b084      	sub	sp, #16
 80067d8:	af00      	add	r7, sp, #0
 80067da:	6078      	str	r0, [r7, #4]
 80067dc:	f001 f852 	bl	8007884 <vPortEnterCritical>
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	d102      	bne.n	80067ee <prvIsQueueEmpty+0x1a>
 80067e8:	2301      	movs	r3, #1
 80067ea:	60fb      	str	r3, [r7, #12]
 80067ec:	e001      	b.n	80067f2 <prvIsQueueEmpty+0x1e>
 80067ee:	2300      	movs	r3, #0
 80067f0:	60fb      	str	r3, [r7, #12]
 80067f2:	f001 f877 	bl	80078e4 <vPortExitCritical>
 80067f6:	68fb      	ldr	r3, [r7, #12]
 80067f8:	4618      	mov	r0, r3
 80067fa:	3710      	adds	r7, #16
 80067fc:	46bd      	mov	sp, r7
 80067fe:	bd80      	pop	{r7, pc}

08006800 <prvIsQueueFull>:
 8006800:	b580      	push	{r7, lr}
 8006802:	b084      	sub	sp, #16
 8006804:	af00      	add	r7, sp, #0
 8006806:	6078      	str	r0, [r7, #4]
 8006808:	f001 f83c 	bl	8007884 <vPortEnterCritical>
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006814:	429a      	cmp	r2, r3
 8006816:	d102      	bne.n	800681e <prvIsQueueFull+0x1e>
 8006818:	2301      	movs	r3, #1
 800681a:	60fb      	str	r3, [r7, #12]
 800681c:	e001      	b.n	8006822 <prvIsQueueFull+0x22>
 800681e:	2300      	movs	r3, #0
 8006820:	60fb      	str	r3, [r7, #12]
 8006822:	f001 f85f 	bl	80078e4 <vPortExitCritical>
 8006826:	68fb      	ldr	r3, [r7, #12]
 8006828:	4618      	mov	r0, r3
 800682a:	3710      	adds	r7, #16
 800682c:	46bd      	mov	sp, r7
 800682e:	bd80      	pop	{r7, pc}

08006830 <xTaskCreateStatic>:
 8006830:	b580      	push	{r7, lr}
 8006832:	b08e      	sub	sp, #56	; 0x38
 8006834:	af04      	add	r7, sp, #16
 8006836:	60f8      	str	r0, [r7, #12]
 8006838:	60b9      	str	r1, [r7, #8]
 800683a:	607a      	str	r2, [r7, #4]
 800683c:	603b      	str	r3, [r7, #0]
 800683e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006840:	2b00      	cmp	r3, #0
 8006842:	d10a      	bne.n	800685a <xTaskCreateStatic+0x2a>
 8006844:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006848:	f383 8811 	msr	BASEPRI, r3
 800684c:	f3bf 8f6f 	isb	sy
 8006850:	f3bf 8f4f 	dsb	sy
 8006854:	623b      	str	r3, [r7, #32]
 8006856:	bf00      	nop
 8006858:	e7fe      	b.n	8006858 <xTaskCreateStatic+0x28>
 800685a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800685c:	2b00      	cmp	r3, #0
 800685e:	d10a      	bne.n	8006876 <xTaskCreateStatic+0x46>
 8006860:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006864:	f383 8811 	msr	BASEPRI, r3
 8006868:	f3bf 8f6f 	isb	sy
 800686c:	f3bf 8f4f 	dsb	sy
 8006870:	61fb      	str	r3, [r7, #28]
 8006872:	bf00      	nop
 8006874:	e7fe      	b.n	8006874 <xTaskCreateStatic+0x44>
 8006876:	23a0      	movs	r3, #160	; 0xa0
 8006878:	613b      	str	r3, [r7, #16]
 800687a:	693b      	ldr	r3, [r7, #16]
 800687c:	2ba0      	cmp	r3, #160	; 0xa0
 800687e:	d00a      	beq.n	8006896 <xTaskCreateStatic+0x66>
 8006880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006884:	f383 8811 	msr	BASEPRI, r3
 8006888:	f3bf 8f6f 	isb	sy
 800688c:	f3bf 8f4f 	dsb	sy
 8006890:	61bb      	str	r3, [r7, #24]
 8006892:	bf00      	nop
 8006894:	e7fe      	b.n	8006894 <xTaskCreateStatic+0x64>
 8006896:	693b      	ldr	r3, [r7, #16]
 8006898:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800689a:	2b00      	cmp	r3, #0
 800689c:	d01e      	beq.n	80068dc <xTaskCreateStatic+0xac>
 800689e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80068a0:	2b00      	cmp	r3, #0
 80068a2:	d01b      	beq.n	80068dc <xTaskCreateStatic+0xac>
 80068a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80068a6:	627b      	str	r3, [r7, #36]	; 0x24
 80068a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068aa:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80068ac:	631a      	str	r2, [r3, #48]	; 0x30
 80068ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068b0:	2202      	movs	r2, #2
 80068b2:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 80068b6:	2300      	movs	r3, #0
 80068b8:	9303      	str	r3, [sp, #12]
 80068ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068bc:	9302      	str	r3, [sp, #8]
 80068be:	f107 0314 	add.w	r3, r7, #20
 80068c2:	9301      	str	r3, [sp, #4]
 80068c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80068c6:	9300      	str	r3, [sp, #0]
 80068c8:	683b      	ldr	r3, [r7, #0]
 80068ca:	687a      	ldr	r2, [r7, #4]
 80068cc:	68b9      	ldr	r1, [r7, #8]
 80068ce:	68f8      	ldr	r0, [r7, #12]
 80068d0:	f000 f850 	bl	8006974 <prvInitialiseNewTask>
 80068d4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80068d6:	f000 f8eb 	bl	8006ab0 <prvAddNewTaskToReadyList>
 80068da:	e001      	b.n	80068e0 <xTaskCreateStatic+0xb0>
 80068dc:	2300      	movs	r3, #0
 80068de:	617b      	str	r3, [r7, #20]
 80068e0:	697b      	ldr	r3, [r7, #20]
 80068e2:	4618      	mov	r0, r3
 80068e4:	3728      	adds	r7, #40	; 0x28
 80068e6:	46bd      	mov	sp, r7
 80068e8:	bd80      	pop	{r7, pc}

080068ea <xTaskCreate>:
 80068ea:	b580      	push	{r7, lr}
 80068ec:	b08c      	sub	sp, #48	; 0x30
 80068ee:	af04      	add	r7, sp, #16
 80068f0:	60f8      	str	r0, [r7, #12]
 80068f2:	60b9      	str	r1, [r7, #8]
 80068f4:	603b      	str	r3, [r7, #0]
 80068f6:	4613      	mov	r3, r2
 80068f8:	80fb      	strh	r3, [r7, #6]
 80068fa:	88fb      	ldrh	r3, [r7, #6]
 80068fc:	009b      	lsls	r3, r3, #2
 80068fe:	4618      	mov	r0, r3
 8006900:	f001 f8a2 	bl	8007a48 <pvPortMalloc>
 8006904:	6178      	str	r0, [r7, #20]
 8006906:	697b      	ldr	r3, [r7, #20]
 8006908:	2b00      	cmp	r3, #0
 800690a:	d00e      	beq.n	800692a <xTaskCreate+0x40>
 800690c:	20a0      	movs	r0, #160	; 0xa0
 800690e:	f001 f89b 	bl	8007a48 <pvPortMalloc>
 8006912:	61f8      	str	r0, [r7, #28]
 8006914:	69fb      	ldr	r3, [r7, #28]
 8006916:	2b00      	cmp	r3, #0
 8006918:	d003      	beq.n	8006922 <xTaskCreate+0x38>
 800691a:	69fb      	ldr	r3, [r7, #28]
 800691c:	697a      	ldr	r2, [r7, #20]
 800691e:	631a      	str	r2, [r3, #48]	; 0x30
 8006920:	e005      	b.n	800692e <xTaskCreate+0x44>
 8006922:	6978      	ldr	r0, [r7, #20]
 8006924:	f001 f95c 	bl	8007be0 <vPortFree>
 8006928:	e001      	b.n	800692e <xTaskCreate+0x44>
 800692a:	2300      	movs	r3, #0
 800692c:	61fb      	str	r3, [r7, #28]
 800692e:	69fb      	ldr	r3, [r7, #28]
 8006930:	2b00      	cmp	r3, #0
 8006932:	d017      	beq.n	8006964 <xTaskCreate+0x7a>
 8006934:	69fb      	ldr	r3, [r7, #28]
 8006936:	2200      	movs	r2, #0
 8006938:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 800693c:	88fa      	ldrh	r2, [r7, #6]
 800693e:	2300      	movs	r3, #0
 8006940:	9303      	str	r3, [sp, #12]
 8006942:	69fb      	ldr	r3, [r7, #28]
 8006944:	9302      	str	r3, [sp, #8]
 8006946:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006948:	9301      	str	r3, [sp, #4]
 800694a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800694c:	9300      	str	r3, [sp, #0]
 800694e:	683b      	ldr	r3, [r7, #0]
 8006950:	68b9      	ldr	r1, [r7, #8]
 8006952:	68f8      	ldr	r0, [r7, #12]
 8006954:	f000 f80e 	bl	8006974 <prvInitialiseNewTask>
 8006958:	69f8      	ldr	r0, [r7, #28]
 800695a:	f000 f8a9 	bl	8006ab0 <prvAddNewTaskToReadyList>
 800695e:	2301      	movs	r3, #1
 8006960:	61bb      	str	r3, [r7, #24]
 8006962:	e002      	b.n	800696a <xTaskCreate+0x80>
 8006964:	f04f 33ff 	mov.w	r3, #4294967295
 8006968:	61bb      	str	r3, [r7, #24]
 800696a:	69bb      	ldr	r3, [r7, #24]
 800696c:	4618      	mov	r0, r3
 800696e:	3720      	adds	r7, #32
 8006970:	46bd      	mov	sp, r7
 8006972:	bd80      	pop	{r7, pc}

08006974 <prvInitialiseNewTask>:
 8006974:	b580      	push	{r7, lr}
 8006976:	b088      	sub	sp, #32
 8006978:	af00      	add	r7, sp, #0
 800697a:	60f8      	str	r0, [r7, #12]
 800697c:	60b9      	str	r1, [r7, #8]
 800697e:	607a      	str	r2, [r7, #4]
 8006980:	603b      	str	r3, [r7, #0]
 8006982:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006984:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800698c:	3b01      	subs	r3, #1
 800698e:	009b      	lsls	r3, r3, #2
 8006990:	4413      	add	r3, r2
 8006992:	61bb      	str	r3, [r7, #24]
 8006994:	69bb      	ldr	r3, [r7, #24]
 8006996:	f023 0307 	bic.w	r3, r3, #7
 800699a:	61bb      	str	r3, [r7, #24]
 800699c:	69bb      	ldr	r3, [r7, #24]
 800699e:	f003 0307 	and.w	r3, r3, #7
 80069a2:	2b00      	cmp	r3, #0
 80069a4:	d00a      	beq.n	80069bc <prvInitialiseNewTask+0x48>
 80069a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069aa:	f383 8811 	msr	BASEPRI, r3
 80069ae:	f3bf 8f6f 	isb	sy
 80069b2:	f3bf 8f4f 	dsb	sy
 80069b6:	617b      	str	r3, [r7, #20]
 80069b8:	bf00      	nop
 80069ba:	e7fe      	b.n	80069ba <prvInitialiseNewTask+0x46>
 80069bc:	68bb      	ldr	r3, [r7, #8]
 80069be:	2b00      	cmp	r3, #0
 80069c0:	d01f      	beq.n	8006a02 <prvInitialiseNewTask+0x8e>
 80069c2:	2300      	movs	r3, #0
 80069c4:	61fb      	str	r3, [r7, #28]
 80069c6:	e012      	b.n	80069ee <prvInitialiseNewTask+0x7a>
 80069c8:	68ba      	ldr	r2, [r7, #8]
 80069ca:	69fb      	ldr	r3, [r7, #28]
 80069cc:	4413      	add	r3, r2
 80069ce:	7819      	ldrb	r1, [r3, #0]
 80069d0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80069d2:	69fb      	ldr	r3, [r7, #28]
 80069d4:	4413      	add	r3, r2
 80069d6:	3334      	adds	r3, #52	; 0x34
 80069d8:	460a      	mov	r2, r1
 80069da:	701a      	strb	r2, [r3, #0]
 80069dc:	68ba      	ldr	r2, [r7, #8]
 80069de:	69fb      	ldr	r3, [r7, #28]
 80069e0:	4413      	add	r3, r2
 80069e2:	781b      	ldrb	r3, [r3, #0]
 80069e4:	2b00      	cmp	r3, #0
 80069e6:	d006      	beq.n	80069f6 <prvInitialiseNewTask+0x82>
 80069e8:	69fb      	ldr	r3, [r7, #28]
 80069ea:	3301      	adds	r3, #1
 80069ec:	61fb      	str	r3, [r7, #28]
 80069ee:	69fb      	ldr	r3, [r7, #28]
 80069f0:	2b0f      	cmp	r3, #15
 80069f2:	d9e9      	bls.n	80069c8 <prvInitialiseNewTask+0x54>
 80069f4:	e000      	b.n	80069f8 <prvInitialiseNewTask+0x84>
 80069f6:	bf00      	nop
 80069f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80069fa:	2200      	movs	r2, #0
 80069fc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006a00:	e003      	b.n	8006a0a <prvInitialiseNewTask+0x96>
 8006a02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a04:	2200      	movs	r2, #0
 8006a06:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006a0a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006a0c:	2b06      	cmp	r3, #6
 8006a0e:	d901      	bls.n	8006a14 <prvInitialiseNewTask+0xa0>
 8006a10:	2306      	movs	r3, #6
 8006a12:	62bb      	str	r3, [r7, #40]	; 0x28
 8006a14:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a16:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006a18:	62da      	str	r2, [r3, #44]	; 0x2c
 8006a1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a1c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8006a1e:	645a      	str	r2, [r3, #68]	; 0x44
 8006a20:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a22:	2200      	movs	r2, #0
 8006a24:	649a      	str	r2, [r3, #72]	; 0x48
 8006a26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a28:	3304      	adds	r3, #4
 8006a2a:	4618      	mov	r0, r3
 8006a2c:	f7ff fa9d 	bl	8005f6a <vListInitialiseItem>
 8006a30:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a32:	3318      	adds	r3, #24
 8006a34:	4618      	mov	r0, r3
 8006a36:	f7ff fa98 	bl	8005f6a <vListInitialiseItem>
 8006a3a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a3c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006a3e:	611a      	str	r2, [r3, #16]
 8006a40:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006a42:	f1c3 0207 	rsb	r2, r3, #7
 8006a46:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a48:	619a      	str	r2, [r3, #24]
 8006a4a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a4c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006a4e:	625a      	str	r2, [r3, #36]	; 0x24
 8006a50:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a52:	2200      	movs	r2, #0
 8006a54:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8006a58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a5a:	2200      	movs	r2, #0
 8006a5c:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8006a60:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a62:	334c      	adds	r3, #76	; 0x4c
 8006a64:	224c      	movs	r2, #76	; 0x4c
 8006a66:	2100      	movs	r1, #0
 8006a68:	4618      	mov	r0, r3
 8006a6a:	f001 fbf1 	bl	8008250 <memset>
 8006a6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a70:	4a0c      	ldr	r2, [pc, #48]	; (8006aa4 <prvInitialiseNewTask+0x130>)
 8006a72:	651a      	str	r2, [r3, #80]	; 0x50
 8006a74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a76:	4a0c      	ldr	r2, [pc, #48]	; (8006aa8 <prvInitialiseNewTask+0x134>)
 8006a78:	655a      	str	r2, [r3, #84]	; 0x54
 8006a7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a7c:	4a0b      	ldr	r2, [pc, #44]	; (8006aac <prvInitialiseNewTask+0x138>)
 8006a7e:	659a      	str	r2, [r3, #88]	; 0x58
 8006a80:	683a      	ldr	r2, [r7, #0]
 8006a82:	68f9      	ldr	r1, [r7, #12]
 8006a84:	69b8      	ldr	r0, [r7, #24]
 8006a86:	f000 fdcd 	bl	8007624 <pxPortInitialiseStack>
 8006a8a:	4602      	mov	r2, r0
 8006a8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a8e:	601a      	str	r2, [r3, #0]
 8006a90:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d002      	beq.n	8006a9c <prvInitialiseNewTask+0x128>
 8006a96:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006a98:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006a9a:	601a      	str	r2, [r3, #0]
 8006a9c:	bf00      	nop
 8006a9e:	3720      	adds	r7, #32
 8006aa0:	46bd      	mov	sp, r7
 8006aa2:	bd80      	pop	{r7, pc}
 8006aa4:	20005418 	.word	0x20005418
 8006aa8:	20005480 	.word	0x20005480
 8006aac:	200054e8 	.word	0x200054e8

08006ab0 <prvAddNewTaskToReadyList>:
 8006ab0:	b580      	push	{r7, lr}
 8006ab2:	b082      	sub	sp, #8
 8006ab4:	af00      	add	r7, sp, #0
 8006ab6:	6078      	str	r0, [r7, #4]
 8006ab8:	f000 fee4 	bl	8007884 <vPortEnterCritical>
 8006abc:	4b2a      	ldr	r3, [pc, #168]	; (8006b68 <prvAddNewTaskToReadyList+0xb8>)
 8006abe:	681b      	ldr	r3, [r3, #0]
 8006ac0:	3301      	adds	r3, #1
 8006ac2:	4a29      	ldr	r2, [pc, #164]	; (8006b68 <prvAddNewTaskToReadyList+0xb8>)
 8006ac4:	6013      	str	r3, [r2, #0]
 8006ac6:	4b29      	ldr	r3, [pc, #164]	; (8006b6c <prvAddNewTaskToReadyList+0xbc>)
 8006ac8:	681b      	ldr	r3, [r3, #0]
 8006aca:	2b00      	cmp	r3, #0
 8006acc:	d109      	bne.n	8006ae2 <prvAddNewTaskToReadyList+0x32>
 8006ace:	4a27      	ldr	r2, [pc, #156]	; (8006b6c <prvAddNewTaskToReadyList+0xbc>)
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	6013      	str	r3, [r2, #0]
 8006ad4:	4b24      	ldr	r3, [pc, #144]	; (8006b68 <prvAddNewTaskToReadyList+0xb8>)
 8006ad6:	681b      	ldr	r3, [r3, #0]
 8006ad8:	2b01      	cmp	r3, #1
 8006ada:	d110      	bne.n	8006afe <prvAddNewTaskToReadyList+0x4e>
 8006adc:	f000 fbd6 	bl	800728c <prvInitialiseTaskLists>
 8006ae0:	e00d      	b.n	8006afe <prvAddNewTaskToReadyList+0x4e>
 8006ae2:	4b23      	ldr	r3, [pc, #140]	; (8006b70 <prvAddNewTaskToReadyList+0xc0>)
 8006ae4:	681b      	ldr	r3, [r3, #0]
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	d109      	bne.n	8006afe <prvAddNewTaskToReadyList+0x4e>
 8006aea:	4b20      	ldr	r3, [pc, #128]	; (8006b6c <prvAddNewTaskToReadyList+0xbc>)
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006af4:	429a      	cmp	r2, r3
 8006af6:	d802      	bhi.n	8006afe <prvAddNewTaskToReadyList+0x4e>
 8006af8:	4a1c      	ldr	r2, [pc, #112]	; (8006b6c <prvAddNewTaskToReadyList+0xbc>)
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	6013      	str	r3, [r2, #0]
 8006afe:	4b1d      	ldr	r3, [pc, #116]	; (8006b74 <prvAddNewTaskToReadyList+0xc4>)
 8006b00:	681b      	ldr	r3, [r3, #0]
 8006b02:	3301      	adds	r3, #1
 8006b04:	4a1b      	ldr	r2, [pc, #108]	; (8006b74 <prvAddNewTaskToReadyList+0xc4>)
 8006b06:	6013      	str	r3, [r2, #0]
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b0c:	2201      	movs	r2, #1
 8006b0e:	409a      	lsls	r2, r3
 8006b10:	4b19      	ldr	r3, [pc, #100]	; (8006b78 <prvAddNewTaskToReadyList+0xc8>)
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	4313      	orrs	r3, r2
 8006b16:	4a18      	ldr	r2, [pc, #96]	; (8006b78 <prvAddNewTaskToReadyList+0xc8>)
 8006b18:	6013      	str	r3, [r2, #0]
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006b1e:	4613      	mov	r3, r2
 8006b20:	009b      	lsls	r3, r3, #2
 8006b22:	4413      	add	r3, r2
 8006b24:	009b      	lsls	r3, r3, #2
 8006b26:	4a15      	ldr	r2, [pc, #84]	; (8006b7c <prvAddNewTaskToReadyList+0xcc>)
 8006b28:	441a      	add	r2, r3
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	3304      	adds	r3, #4
 8006b2e:	4619      	mov	r1, r3
 8006b30:	4610      	mov	r0, r2
 8006b32:	f7ff fa27 	bl	8005f84 <vListInsertEnd>
 8006b36:	f000 fed5 	bl	80078e4 <vPortExitCritical>
 8006b3a:	4b0d      	ldr	r3, [pc, #52]	; (8006b70 <prvAddNewTaskToReadyList+0xc0>)
 8006b3c:	681b      	ldr	r3, [r3, #0]
 8006b3e:	2b00      	cmp	r3, #0
 8006b40:	d00e      	beq.n	8006b60 <prvAddNewTaskToReadyList+0xb0>
 8006b42:	4b0a      	ldr	r3, [pc, #40]	; (8006b6c <prvAddNewTaskToReadyList+0xbc>)
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b4c:	429a      	cmp	r2, r3
 8006b4e:	d207      	bcs.n	8006b60 <prvAddNewTaskToReadyList+0xb0>
 8006b50:	4b0b      	ldr	r3, [pc, #44]	; (8006b80 <prvAddNewTaskToReadyList+0xd0>)
 8006b52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006b56:	601a      	str	r2, [r3, #0]
 8006b58:	f3bf 8f4f 	dsb	sy
 8006b5c:	f3bf 8f6f 	isb	sy
 8006b60:	bf00      	nop
 8006b62:	3708      	adds	r7, #8
 8006b64:	46bd      	mov	sp, r7
 8006b66:	bd80      	pop	{r7, pc}
 8006b68:	200017c4 	.word	0x200017c4
 8006b6c:	200016c4 	.word	0x200016c4
 8006b70:	200017d0 	.word	0x200017d0
 8006b74:	200017e0 	.word	0x200017e0
 8006b78:	200017cc 	.word	0x200017cc
 8006b7c:	200016c8 	.word	0x200016c8
 8006b80:	e000ed04 	.word	0xe000ed04

08006b84 <vTaskDelay>:
 8006b84:	b580      	push	{r7, lr}
 8006b86:	b084      	sub	sp, #16
 8006b88:	af00      	add	r7, sp, #0
 8006b8a:	6078      	str	r0, [r7, #4]
 8006b8c:	2300      	movs	r3, #0
 8006b8e:	60fb      	str	r3, [r7, #12]
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	2b00      	cmp	r3, #0
 8006b94:	d017      	beq.n	8006bc6 <vTaskDelay+0x42>
 8006b96:	4b13      	ldr	r3, [pc, #76]	; (8006be4 <vTaskDelay+0x60>)
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	2b00      	cmp	r3, #0
 8006b9c:	d00a      	beq.n	8006bb4 <vTaskDelay+0x30>
 8006b9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ba2:	f383 8811 	msr	BASEPRI, r3
 8006ba6:	f3bf 8f6f 	isb	sy
 8006baa:	f3bf 8f4f 	dsb	sy
 8006bae:	60bb      	str	r3, [r7, #8]
 8006bb0:	bf00      	nop
 8006bb2:	e7fe      	b.n	8006bb2 <vTaskDelay+0x2e>
 8006bb4:	f000 f884 	bl	8006cc0 <vTaskSuspendAll>
 8006bb8:	2100      	movs	r1, #0
 8006bba:	6878      	ldr	r0, [r7, #4]
 8006bbc:	f000 fccc 	bl	8007558 <prvAddCurrentTaskToDelayedList>
 8006bc0:	f000 f88c 	bl	8006cdc <xTaskResumeAll>
 8006bc4:	60f8      	str	r0, [r7, #12]
 8006bc6:	68fb      	ldr	r3, [r7, #12]
 8006bc8:	2b00      	cmp	r3, #0
 8006bca:	d107      	bne.n	8006bdc <vTaskDelay+0x58>
 8006bcc:	4b06      	ldr	r3, [pc, #24]	; (8006be8 <vTaskDelay+0x64>)
 8006bce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006bd2:	601a      	str	r2, [r3, #0]
 8006bd4:	f3bf 8f4f 	dsb	sy
 8006bd8:	f3bf 8f6f 	isb	sy
 8006bdc:	bf00      	nop
 8006bde:	3710      	adds	r7, #16
 8006be0:	46bd      	mov	sp, r7
 8006be2:	bd80      	pop	{r7, pc}
 8006be4:	200017ec 	.word	0x200017ec
 8006be8:	e000ed04 	.word	0xe000ed04

08006bec <vTaskStartScheduler>:
 8006bec:	b580      	push	{r7, lr}
 8006bee:	b08a      	sub	sp, #40	; 0x28
 8006bf0:	af04      	add	r7, sp, #16
 8006bf2:	2300      	movs	r3, #0
 8006bf4:	60bb      	str	r3, [r7, #8]
 8006bf6:	2300      	movs	r3, #0
 8006bf8:	607b      	str	r3, [r7, #4]
 8006bfa:	463a      	mov	r2, r7
 8006bfc:	1d39      	adds	r1, r7, #4
 8006bfe:	f107 0308 	add.w	r3, r7, #8
 8006c02:	4618      	mov	r0, r3
 8006c04:	f7f9 fe2e 	bl	8000864 <vApplicationGetIdleTaskMemory>
 8006c08:	6839      	ldr	r1, [r7, #0]
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	68ba      	ldr	r2, [r7, #8]
 8006c0e:	9202      	str	r2, [sp, #8]
 8006c10:	9301      	str	r3, [sp, #4]
 8006c12:	2300      	movs	r3, #0
 8006c14:	9300      	str	r3, [sp, #0]
 8006c16:	2300      	movs	r3, #0
 8006c18:	460a      	mov	r2, r1
 8006c1a:	4921      	ldr	r1, [pc, #132]	; (8006ca0 <vTaskStartScheduler+0xb4>)
 8006c1c:	4821      	ldr	r0, [pc, #132]	; (8006ca4 <vTaskStartScheduler+0xb8>)
 8006c1e:	f7ff fe07 	bl	8006830 <xTaskCreateStatic>
 8006c22:	4603      	mov	r3, r0
 8006c24:	4a20      	ldr	r2, [pc, #128]	; (8006ca8 <vTaskStartScheduler+0xbc>)
 8006c26:	6013      	str	r3, [r2, #0]
 8006c28:	4b1f      	ldr	r3, [pc, #124]	; (8006ca8 <vTaskStartScheduler+0xbc>)
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	2b00      	cmp	r3, #0
 8006c2e:	d002      	beq.n	8006c36 <vTaskStartScheduler+0x4a>
 8006c30:	2301      	movs	r3, #1
 8006c32:	617b      	str	r3, [r7, #20]
 8006c34:	e001      	b.n	8006c3a <vTaskStartScheduler+0x4e>
 8006c36:	2300      	movs	r3, #0
 8006c38:	617b      	str	r3, [r7, #20]
 8006c3a:	697b      	ldr	r3, [r7, #20]
 8006c3c:	2b01      	cmp	r3, #1
 8006c3e:	d11b      	bne.n	8006c78 <vTaskStartScheduler+0x8c>
 8006c40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c44:	f383 8811 	msr	BASEPRI, r3
 8006c48:	f3bf 8f6f 	isb	sy
 8006c4c:	f3bf 8f4f 	dsb	sy
 8006c50:	613b      	str	r3, [r7, #16]
 8006c52:	bf00      	nop
 8006c54:	4b15      	ldr	r3, [pc, #84]	; (8006cac <vTaskStartScheduler+0xc0>)
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	334c      	adds	r3, #76	; 0x4c
 8006c5a:	4a15      	ldr	r2, [pc, #84]	; (8006cb0 <vTaskStartScheduler+0xc4>)
 8006c5c:	6013      	str	r3, [r2, #0]
 8006c5e:	4b15      	ldr	r3, [pc, #84]	; (8006cb4 <vTaskStartScheduler+0xc8>)
 8006c60:	f04f 32ff 	mov.w	r2, #4294967295
 8006c64:	601a      	str	r2, [r3, #0]
 8006c66:	4b14      	ldr	r3, [pc, #80]	; (8006cb8 <vTaskStartScheduler+0xcc>)
 8006c68:	2201      	movs	r2, #1
 8006c6a:	601a      	str	r2, [r3, #0]
 8006c6c:	4b13      	ldr	r3, [pc, #76]	; (8006cbc <vTaskStartScheduler+0xd0>)
 8006c6e:	2200      	movs	r2, #0
 8006c70:	601a      	str	r2, [r3, #0]
 8006c72:	f000 fd65 	bl	8007740 <xPortStartScheduler>
 8006c76:	e00e      	b.n	8006c96 <vTaskStartScheduler+0xaa>
 8006c78:	697b      	ldr	r3, [r7, #20]
 8006c7a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006c7e:	d10a      	bne.n	8006c96 <vTaskStartScheduler+0xaa>
 8006c80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c84:	f383 8811 	msr	BASEPRI, r3
 8006c88:	f3bf 8f6f 	isb	sy
 8006c8c:	f3bf 8f4f 	dsb	sy
 8006c90:	60fb      	str	r3, [r7, #12]
 8006c92:	bf00      	nop
 8006c94:	e7fe      	b.n	8006c94 <vTaskStartScheduler+0xa8>
 8006c96:	bf00      	nop
 8006c98:	3718      	adds	r7, #24
 8006c9a:	46bd      	mov	sp, r7
 8006c9c:	bd80      	pop	{r7, pc}
 8006c9e:	bf00      	nop
 8006ca0:	08009aa8 	.word	0x08009aa8
 8006ca4:	0800725d 	.word	0x0800725d
 8006ca8:	200017e8 	.word	0x200017e8
 8006cac:	200016c4 	.word	0x200016c4
 8006cb0:	200000f8 	.word	0x200000f8
 8006cb4:	200017e4 	.word	0x200017e4
 8006cb8:	200017d0 	.word	0x200017d0
 8006cbc:	200017c8 	.word	0x200017c8

08006cc0 <vTaskSuspendAll>:
 8006cc0:	b480      	push	{r7}
 8006cc2:	af00      	add	r7, sp, #0
 8006cc4:	4b04      	ldr	r3, [pc, #16]	; (8006cd8 <vTaskSuspendAll+0x18>)
 8006cc6:	681b      	ldr	r3, [r3, #0]
 8006cc8:	3301      	adds	r3, #1
 8006cca:	4a03      	ldr	r2, [pc, #12]	; (8006cd8 <vTaskSuspendAll+0x18>)
 8006ccc:	6013      	str	r3, [r2, #0]
 8006cce:	bf00      	nop
 8006cd0:	46bd      	mov	sp, r7
 8006cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cd6:	4770      	bx	lr
 8006cd8:	200017ec 	.word	0x200017ec

08006cdc <xTaskResumeAll>:
 8006cdc:	b580      	push	{r7, lr}
 8006cde:	b084      	sub	sp, #16
 8006ce0:	af00      	add	r7, sp, #0
 8006ce2:	2300      	movs	r3, #0
 8006ce4:	60fb      	str	r3, [r7, #12]
 8006ce6:	2300      	movs	r3, #0
 8006ce8:	60bb      	str	r3, [r7, #8]
 8006cea:	4b41      	ldr	r3, [pc, #260]	; (8006df0 <xTaskResumeAll+0x114>)
 8006cec:	681b      	ldr	r3, [r3, #0]
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d10a      	bne.n	8006d08 <xTaskResumeAll+0x2c>
 8006cf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cf6:	f383 8811 	msr	BASEPRI, r3
 8006cfa:	f3bf 8f6f 	isb	sy
 8006cfe:	f3bf 8f4f 	dsb	sy
 8006d02:	603b      	str	r3, [r7, #0]
 8006d04:	bf00      	nop
 8006d06:	e7fe      	b.n	8006d06 <xTaskResumeAll+0x2a>
 8006d08:	f000 fdbc 	bl	8007884 <vPortEnterCritical>
 8006d0c:	4b38      	ldr	r3, [pc, #224]	; (8006df0 <xTaskResumeAll+0x114>)
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	3b01      	subs	r3, #1
 8006d12:	4a37      	ldr	r2, [pc, #220]	; (8006df0 <xTaskResumeAll+0x114>)
 8006d14:	6013      	str	r3, [r2, #0]
 8006d16:	4b36      	ldr	r3, [pc, #216]	; (8006df0 <xTaskResumeAll+0x114>)
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	2b00      	cmp	r3, #0
 8006d1c:	d161      	bne.n	8006de2 <xTaskResumeAll+0x106>
 8006d1e:	4b35      	ldr	r3, [pc, #212]	; (8006df4 <xTaskResumeAll+0x118>)
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	2b00      	cmp	r3, #0
 8006d24:	d05d      	beq.n	8006de2 <xTaskResumeAll+0x106>
 8006d26:	e02e      	b.n	8006d86 <xTaskResumeAll+0xaa>
 8006d28:	4b33      	ldr	r3, [pc, #204]	; (8006df8 <xTaskResumeAll+0x11c>)
 8006d2a:	68db      	ldr	r3, [r3, #12]
 8006d2c:	68db      	ldr	r3, [r3, #12]
 8006d2e:	60fb      	str	r3, [r7, #12]
 8006d30:	68fb      	ldr	r3, [r7, #12]
 8006d32:	3318      	adds	r3, #24
 8006d34:	4618      	mov	r0, r3
 8006d36:	f7ff f982 	bl	800603e <uxListRemove>
 8006d3a:	68fb      	ldr	r3, [r7, #12]
 8006d3c:	3304      	adds	r3, #4
 8006d3e:	4618      	mov	r0, r3
 8006d40:	f7ff f97d 	bl	800603e <uxListRemove>
 8006d44:	68fb      	ldr	r3, [r7, #12]
 8006d46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006d48:	2201      	movs	r2, #1
 8006d4a:	409a      	lsls	r2, r3
 8006d4c:	4b2b      	ldr	r3, [pc, #172]	; (8006dfc <xTaskResumeAll+0x120>)
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	4313      	orrs	r3, r2
 8006d52:	4a2a      	ldr	r2, [pc, #168]	; (8006dfc <xTaskResumeAll+0x120>)
 8006d54:	6013      	str	r3, [r2, #0]
 8006d56:	68fb      	ldr	r3, [r7, #12]
 8006d58:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d5a:	4613      	mov	r3, r2
 8006d5c:	009b      	lsls	r3, r3, #2
 8006d5e:	4413      	add	r3, r2
 8006d60:	009b      	lsls	r3, r3, #2
 8006d62:	4a27      	ldr	r2, [pc, #156]	; (8006e00 <xTaskResumeAll+0x124>)
 8006d64:	441a      	add	r2, r3
 8006d66:	68fb      	ldr	r3, [r7, #12]
 8006d68:	3304      	adds	r3, #4
 8006d6a:	4619      	mov	r1, r3
 8006d6c:	4610      	mov	r0, r2
 8006d6e:	f7ff f909 	bl	8005f84 <vListInsertEnd>
 8006d72:	68fb      	ldr	r3, [r7, #12]
 8006d74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d76:	4b23      	ldr	r3, [pc, #140]	; (8006e04 <xTaskResumeAll+0x128>)
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006d7c:	429a      	cmp	r2, r3
 8006d7e:	d302      	bcc.n	8006d86 <xTaskResumeAll+0xaa>
 8006d80:	4b21      	ldr	r3, [pc, #132]	; (8006e08 <xTaskResumeAll+0x12c>)
 8006d82:	2201      	movs	r2, #1
 8006d84:	601a      	str	r2, [r3, #0]
 8006d86:	4b1c      	ldr	r3, [pc, #112]	; (8006df8 <xTaskResumeAll+0x11c>)
 8006d88:	681b      	ldr	r3, [r3, #0]
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d1cc      	bne.n	8006d28 <xTaskResumeAll+0x4c>
 8006d8e:	68fb      	ldr	r3, [r7, #12]
 8006d90:	2b00      	cmp	r3, #0
 8006d92:	d001      	beq.n	8006d98 <xTaskResumeAll+0xbc>
 8006d94:	f000 fb1c 	bl	80073d0 <prvResetNextTaskUnblockTime>
 8006d98:	4b1c      	ldr	r3, [pc, #112]	; (8006e0c <xTaskResumeAll+0x130>)
 8006d9a:	681b      	ldr	r3, [r3, #0]
 8006d9c:	607b      	str	r3, [r7, #4]
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	d010      	beq.n	8006dc6 <xTaskResumeAll+0xea>
 8006da4:	f000 f836 	bl	8006e14 <xTaskIncrementTick>
 8006da8:	4603      	mov	r3, r0
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	d002      	beq.n	8006db4 <xTaskResumeAll+0xd8>
 8006dae:	4b16      	ldr	r3, [pc, #88]	; (8006e08 <xTaskResumeAll+0x12c>)
 8006db0:	2201      	movs	r2, #1
 8006db2:	601a      	str	r2, [r3, #0]
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	3b01      	subs	r3, #1
 8006db8:	607b      	str	r3, [r7, #4]
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	2b00      	cmp	r3, #0
 8006dbe:	d1f1      	bne.n	8006da4 <xTaskResumeAll+0xc8>
 8006dc0:	4b12      	ldr	r3, [pc, #72]	; (8006e0c <xTaskResumeAll+0x130>)
 8006dc2:	2200      	movs	r2, #0
 8006dc4:	601a      	str	r2, [r3, #0]
 8006dc6:	4b10      	ldr	r3, [pc, #64]	; (8006e08 <xTaskResumeAll+0x12c>)
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	2b00      	cmp	r3, #0
 8006dcc:	d009      	beq.n	8006de2 <xTaskResumeAll+0x106>
 8006dce:	2301      	movs	r3, #1
 8006dd0:	60bb      	str	r3, [r7, #8]
 8006dd2:	4b0f      	ldr	r3, [pc, #60]	; (8006e10 <xTaskResumeAll+0x134>)
 8006dd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006dd8:	601a      	str	r2, [r3, #0]
 8006dda:	f3bf 8f4f 	dsb	sy
 8006dde:	f3bf 8f6f 	isb	sy
 8006de2:	f000 fd7f 	bl	80078e4 <vPortExitCritical>
 8006de6:	68bb      	ldr	r3, [r7, #8]
 8006de8:	4618      	mov	r0, r3
 8006dea:	3710      	adds	r7, #16
 8006dec:	46bd      	mov	sp, r7
 8006dee:	bd80      	pop	{r7, pc}
 8006df0:	200017ec 	.word	0x200017ec
 8006df4:	200017c4 	.word	0x200017c4
 8006df8:	20001784 	.word	0x20001784
 8006dfc:	200017cc 	.word	0x200017cc
 8006e00:	200016c8 	.word	0x200016c8
 8006e04:	200016c4 	.word	0x200016c4
 8006e08:	200017d8 	.word	0x200017d8
 8006e0c:	200017d4 	.word	0x200017d4
 8006e10:	e000ed04 	.word	0xe000ed04

08006e14 <xTaskIncrementTick>:
 8006e14:	b580      	push	{r7, lr}
 8006e16:	b086      	sub	sp, #24
 8006e18:	af00      	add	r7, sp, #0
 8006e1a:	2300      	movs	r3, #0
 8006e1c:	617b      	str	r3, [r7, #20]
 8006e1e:	4b4e      	ldr	r3, [pc, #312]	; (8006f58 <xTaskIncrementTick+0x144>)
 8006e20:	681b      	ldr	r3, [r3, #0]
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	f040 808e 	bne.w	8006f44 <xTaskIncrementTick+0x130>
 8006e28:	4b4c      	ldr	r3, [pc, #304]	; (8006f5c <xTaskIncrementTick+0x148>)
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	3301      	adds	r3, #1
 8006e2e:	613b      	str	r3, [r7, #16]
 8006e30:	4a4a      	ldr	r2, [pc, #296]	; (8006f5c <xTaskIncrementTick+0x148>)
 8006e32:	693b      	ldr	r3, [r7, #16]
 8006e34:	6013      	str	r3, [r2, #0]
 8006e36:	693b      	ldr	r3, [r7, #16]
 8006e38:	2b00      	cmp	r3, #0
 8006e3a:	d120      	bne.n	8006e7e <xTaskIncrementTick+0x6a>
 8006e3c:	4b48      	ldr	r3, [pc, #288]	; (8006f60 <xTaskIncrementTick+0x14c>)
 8006e3e:	681b      	ldr	r3, [r3, #0]
 8006e40:	681b      	ldr	r3, [r3, #0]
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d00a      	beq.n	8006e5c <xTaskIncrementTick+0x48>
 8006e46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e4a:	f383 8811 	msr	BASEPRI, r3
 8006e4e:	f3bf 8f6f 	isb	sy
 8006e52:	f3bf 8f4f 	dsb	sy
 8006e56:	603b      	str	r3, [r7, #0]
 8006e58:	bf00      	nop
 8006e5a:	e7fe      	b.n	8006e5a <xTaskIncrementTick+0x46>
 8006e5c:	4b40      	ldr	r3, [pc, #256]	; (8006f60 <xTaskIncrementTick+0x14c>)
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	60fb      	str	r3, [r7, #12]
 8006e62:	4b40      	ldr	r3, [pc, #256]	; (8006f64 <xTaskIncrementTick+0x150>)
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	4a3e      	ldr	r2, [pc, #248]	; (8006f60 <xTaskIncrementTick+0x14c>)
 8006e68:	6013      	str	r3, [r2, #0]
 8006e6a:	4a3e      	ldr	r2, [pc, #248]	; (8006f64 <xTaskIncrementTick+0x150>)
 8006e6c:	68fb      	ldr	r3, [r7, #12]
 8006e6e:	6013      	str	r3, [r2, #0]
 8006e70:	4b3d      	ldr	r3, [pc, #244]	; (8006f68 <xTaskIncrementTick+0x154>)
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	3301      	adds	r3, #1
 8006e76:	4a3c      	ldr	r2, [pc, #240]	; (8006f68 <xTaskIncrementTick+0x154>)
 8006e78:	6013      	str	r3, [r2, #0]
 8006e7a:	f000 faa9 	bl	80073d0 <prvResetNextTaskUnblockTime>
 8006e7e:	4b3b      	ldr	r3, [pc, #236]	; (8006f6c <xTaskIncrementTick+0x158>)
 8006e80:	681b      	ldr	r3, [r3, #0]
 8006e82:	693a      	ldr	r2, [r7, #16]
 8006e84:	429a      	cmp	r2, r3
 8006e86:	d348      	bcc.n	8006f1a <xTaskIncrementTick+0x106>
 8006e88:	4b35      	ldr	r3, [pc, #212]	; (8006f60 <xTaskIncrementTick+0x14c>)
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	2b00      	cmp	r3, #0
 8006e90:	d104      	bne.n	8006e9c <xTaskIncrementTick+0x88>
 8006e92:	4b36      	ldr	r3, [pc, #216]	; (8006f6c <xTaskIncrementTick+0x158>)
 8006e94:	f04f 32ff 	mov.w	r2, #4294967295
 8006e98:	601a      	str	r2, [r3, #0]
 8006e9a:	e03e      	b.n	8006f1a <xTaskIncrementTick+0x106>
 8006e9c:	4b30      	ldr	r3, [pc, #192]	; (8006f60 <xTaskIncrementTick+0x14c>)
 8006e9e:	681b      	ldr	r3, [r3, #0]
 8006ea0:	68db      	ldr	r3, [r3, #12]
 8006ea2:	68db      	ldr	r3, [r3, #12]
 8006ea4:	60bb      	str	r3, [r7, #8]
 8006ea6:	68bb      	ldr	r3, [r7, #8]
 8006ea8:	685b      	ldr	r3, [r3, #4]
 8006eaa:	607b      	str	r3, [r7, #4]
 8006eac:	693a      	ldr	r2, [r7, #16]
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	429a      	cmp	r2, r3
 8006eb2:	d203      	bcs.n	8006ebc <xTaskIncrementTick+0xa8>
 8006eb4:	4a2d      	ldr	r2, [pc, #180]	; (8006f6c <xTaskIncrementTick+0x158>)
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	6013      	str	r3, [r2, #0]
 8006eba:	e02e      	b.n	8006f1a <xTaskIncrementTick+0x106>
 8006ebc:	68bb      	ldr	r3, [r7, #8]
 8006ebe:	3304      	adds	r3, #4
 8006ec0:	4618      	mov	r0, r3
 8006ec2:	f7ff f8bc 	bl	800603e <uxListRemove>
 8006ec6:	68bb      	ldr	r3, [r7, #8]
 8006ec8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d004      	beq.n	8006ed8 <xTaskIncrementTick+0xc4>
 8006ece:	68bb      	ldr	r3, [r7, #8]
 8006ed0:	3318      	adds	r3, #24
 8006ed2:	4618      	mov	r0, r3
 8006ed4:	f7ff f8b3 	bl	800603e <uxListRemove>
 8006ed8:	68bb      	ldr	r3, [r7, #8]
 8006eda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006edc:	2201      	movs	r2, #1
 8006ede:	409a      	lsls	r2, r3
 8006ee0:	4b23      	ldr	r3, [pc, #140]	; (8006f70 <xTaskIncrementTick+0x15c>)
 8006ee2:	681b      	ldr	r3, [r3, #0]
 8006ee4:	4313      	orrs	r3, r2
 8006ee6:	4a22      	ldr	r2, [pc, #136]	; (8006f70 <xTaskIncrementTick+0x15c>)
 8006ee8:	6013      	str	r3, [r2, #0]
 8006eea:	68bb      	ldr	r3, [r7, #8]
 8006eec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006eee:	4613      	mov	r3, r2
 8006ef0:	009b      	lsls	r3, r3, #2
 8006ef2:	4413      	add	r3, r2
 8006ef4:	009b      	lsls	r3, r3, #2
 8006ef6:	4a1f      	ldr	r2, [pc, #124]	; (8006f74 <xTaskIncrementTick+0x160>)
 8006ef8:	441a      	add	r2, r3
 8006efa:	68bb      	ldr	r3, [r7, #8]
 8006efc:	3304      	adds	r3, #4
 8006efe:	4619      	mov	r1, r3
 8006f00:	4610      	mov	r0, r2
 8006f02:	f7ff f83f 	bl	8005f84 <vListInsertEnd>
 8006f06:	68bb      	ldr	r3, [r7, #8]
 8006f08:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006f0a:	4b1b      	ldr	r3, [pc, #108]	; (8006f78 <xTaskIncrementTick+0x164>)
 8006f0c:	681b      	ldr	r3, [r3, #0]
 8006f0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f10:	429a      	cmp	r2, r3
 8006f12:	d3b9      	bcc.n	8006e88 <xTaskIncrementTick+0x74>
 8006f14:	2301      	movs	r3, #1
 8006f16:	617b      	str	r3, [r7, #20]
 8006f18:	e7b6      	b.n	8006e88 <xTaskIncrementTick+0x74>
 8006f1a:	4b17      	ldr	r3, [pc, #92]	; (8006f78 <xTaskIncrementTick+0x164>)
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006f20:	4914      	ldr	r1, [pc, #80]	; (8006f74 <xTaskIncrementTick+0x160>)
 8006f22:	4613      	mov	r3, r2
 8006f24:	009b      	lsls	r3, r3, #2
 8006f26:	4413      	add	r3, r2
 8006f28:	009b      	lsls	r3, r3, #2
 8006f2a:	440b      	add	r3, r1
 8006f2c:	681b      	ldr	r3, [r3, #0]
 8006f2e:	2b01      	cmp	r3, #1
 8006f30:	d901      	bls.n	8006f36 <xTaskIncrementTick+0x122>
 8006f32:	2301      	movs	r3, #1
 8006f34:	617b      	str	r3, [r7, #20]
 8006f36:	4b11      	ldr	r3, [pc, #68]	; (8006f7c <xTaskIncrementTick+0x168>)
 8006f38:	681b      	ldr	r3, [r3, #0]
 8006f3a:	2b00      	cmp	r3, #0
 8006f3c:	d007      	beq.n	8006f4e <xTaskIncrementTick+0x13a>
 8006f3e:	2301      	movs	r3, #1
 8006f40:	617b      	str	r3, [r7, #20]
 8006f42:	e004      	b.n	8006f4e <xTaskIncrementTick+0x13a>
 8006f44:	4b0e      	ldr	r3, [pc, #56]	; (8006f80 <xTaskIncrementTick+0x16c>)
 8006f46:	681b      	ldr	r3, [r3, #0]
 8006f48:	3301      	adds	r3, #1
 8006f4a:	4a0d      	ldr	r2, [pc, #52]	; (8006f80 <xTaskIncrementTick+0x16c>)
 8006f4c:	6013      	str	r3, [r2, #0]
 8006f4e:	697b      	ldr	r3, [r7, #20]
 8006f50:	4618      	mov	r0, r3
 8006f52:	3718      	adds	r7, #24
 8006f54:	46bd      	mov	sp, r7
 8006f56:	bd80      	pop	{r7, pc}
 8006f58:	200017ec 	.word	0x200017ec
 8006f5c:	200017c8 	.word	0x200017c8
 8006f60:	2000177c 	.word	0x2000177c
 8006f64:	20001780 	.word	0x20001780
 8006f68:	200017dc 	.word	0x200017dc
 8006f6c:	200017e4 	.word	0x200017e4
 8006f70:	200017cc 	.word	0x200017cc
 8006f74:	200016c8 	.word	0x200016c8
 8006f78:	200016c4 	.word	0x200016c4
 8006f7c:	200017d8 	.word	0x200017d8
 8006f80:	200017d4 	.word	0x200017d4

08006f84 <vTaskSwitchContext>:
 8006f84:	b480      	push	{r7}
 8006f86:	b087      	sub	sp, #28
 8006f88:	af00      	add	r7, sp, #0
 8006f8a:	4b29      	ldr	r3, [pc, #164]	; (8007030 <vTaskSwitchContext+0xac>)
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	2b00      	cmp	r3, #0
 8006f90:	d003      	beq.n	8006f9a <vTaskSwitchContext+0x16>
 8006f92:	4b28      	ldr	r3, [pc, #160]	; (8007034 <vTaskSwitchContext+0xb0>)
 8006f94:	2201      	movs	r2, #1
 8006f96:	601a      	str	r2, [r3, #0]
 8006f98:	e044      	b.n	8007024 <vTaskSwitchContext+0xa0>
 8006f9a:	4b26      	ldr	r3, [pc, #152]	; (8007034 <vTaskSwitchContext+0xb0>)
 8006f9c:	2200      	movs	r2, #0
 8006f9e:	601a      	str	r2, [r3, #0]
 8006fa0:	4b25      	ldr	r3, [pc, #148]	; (8007038 <vTaskSwitchContext+0xb4>)
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	60fb      	str	r3, [r7, #12]
 8006fa6:	68fb      	ldr	r3, [r7, #12]
 8006fa8:	fab3 f383 	clz	r3, r3
 8006fac:	72fb      	strb	r3, [r7, #11]
 8006fae:	7afb      	ldrb	r3, [r7, #11]
 8006fb0:	f1c3 031f 	rsb	r3, r3, #31
 8006fb4:	617b      	str	r3, [r7, #20]
 8006fb6:	4921      	ldr	r1, [pc, #132]	; (800703c <vTaskSwitchContext+0xb8>)
 8006fb8:	697a      	ldr	r2, [r7, #20]
 8006fba:	4613      	mov	r3, r2
 8006fbc:	009b      	lsls	r3, r3, #2
 8006fbe:	4413      	add	r3, r2
 8006fc0:	009b      	lsls	r3, r3, #2
 8006fc2:	440b      	add	r3, r1
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	2b00      	cmp	r3, #0
 8006fc8:	d10a      	bne.n	8006fe0 <vTaskSwitchContext+0x5c>
 8006fca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fce:	f383 8811 	msr	BASEPRI, r3
 8006fd2:	f3bf 8f6f 	isb	sy
 8006fd6:	f3bf 8f4f 	dsb	sy
 8006fda:	607b      	str	r3, [r7, #4]
 8006fdc:	bf00      	nop
 8006fde:	e7fe      	b.n	8006fde <vTaskSwitchContext+0x5a>
 8006fe0:	697a      	ldr	r2, [r7, #20]
 8006fe2:	4613      	mov	r3, r2
 8006fe4:	009b      	lsls	r3, r3, #2
 8006fe6:	4413      	add	r3, r2
 8006fe8:	009b      	lsls	r3, r3, #2
 8006fea:	4a14      	ldr	r2, [pc, #80]	; (800703c <vTaskSwitchContext+0xb8>)
 8006fec:	4413      	add	r3, r2
 8006fee:	613b      	str	r3, [r7, #16]
 8006ff0:	693b      	ldr	r3, [r7, #16]
 8006ff2:	685b      	ldr	r3, [r3, #4]
 8006ff4:	685a      	ldr	r2, [r3, #4]
 8006ff6:	693b      	ldr	r3, [r7, #16]
 8006ff8:	605a      	str	r2, [r3, #4]
 8006ffa:	693b      	ldr	r3, [r7, #16]
 8006ffc:	685a      	ldr	r2, [r3, #4]
 8006ffe:	693b      	ldr	r3, [r7, #16]
 8007000:	3308      	adds	r3, #8
 8007002:	429a      	cmp	r2, r3
 8007004:	d104      	bne.n	8007010 <vTaskSwitchContext+0x8c>
 8007006:	693b      	ldr	r3, [r7, #16]
 8007008:	685b      	ldr	r3, [r3, #4]
 800700a:	685a      	ldr	r2, [r3, #4]
 800700c:	693b      	ldr	r3, [r7, #16]
 800700e:	605a      	str	r2, [r3, #4]
 8007010:	693b      	ldr	r3, [r7, #16]
 8007012:	685b      	ldr	r3, [r3, #4]
 8007014:	68db      	ldr	r3, [r3, #12]
 8007016:	4a0a      	ldr	r2, [pc, #40]	; (8007040 <vTaskSwitchContext+0xbc>)
 8007018:	6013      	str	r3, [r2, #0]
 800701a:	4b09      	ldr	r3, [pc, #36]	; (8007040 <vTaskSwitchContext+0xbc>)
 800701c:	681b      	ldr	r3, [r3, #0]
 800701e:	334c      	adds	r3, #76	; 0x4c
 8007020:	4a08      	ldr	r2, [pc, #32]	; (8007044 <vTaskSwitchContext+0xc0>)
 8007022:	6013      	str	r3, [r2, #0]
 8007024:	bf00      	nop
 8007026:	371c      	adds	r7, #28
 8007028:	46bd      	mov	sp, r7
 800702a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800702e:	4770      	bx	lr
 8007030:	200017ec 	.word	0x200017ec
 8007034:	200017d8 	.word	0x200017d8
 8007038:	200017cc 	.word	0x200017cc
 800703c:	200016c8 	.word	0x200016c8
 8007040:	200016c4 	.word	0x200016c4
 8007044:	200000f8 	.word	0x200000f8

08007048 <vTaskPlaceOnEventList>:
 8007048:	b580      	push	{r7, lr}
 800704a:	b084      	sub	sp, #16
 800704c:	af00      	add	r7, sp, #0
 800704e:	6078      	str	r0, [r7, #4]
 8007050:	6039      	str	r1, [r7, #0]
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	2b00      	cmp	r3, #0
 8007056:	d10a      	bne.n	800706e <vTaskPlaceOnEventList+0x26>
 8007058:	f04f 0350 	mov.w	r3, #80	; 0x50
 800705c:	f383 8811 	msr	BASEPRI, r3
 8007060:	f3bf 8f6f 	isb	sy
 8007064:	f3bf 8f4f 	dsb	sy
 8007068:	60fb      	str	r3, [r7, #12]
 800706a:	bf00      	nop
 800706c:	e7fe      	b.n	800706c <vTaskPlaceOnEventList+0x24>
 800706e:	4b07      	ldr	r3, [pc, #28]	; (800708c <vTaskPlaceOnEventList+0x44>)
 8007070:	681b      	ldr	r3, [r3, #0]
 8007072:	3318      	adds	r3, #24
 8007074:	4619      	mov	r1, r3
 8007076:	6878      	ldr	r0, [r7, #4]
 8007078:	f7fe ffa8 	bl	8005fcc <vListInsert>
 800707c:	2101      	movs	r1, #1
 800707e:	6838      	ldr	r0, [r7, #0]
 8007080:	f000 fa6a 	bl	8007558 <prvAddCurrentTaskToDelayedList>
 8007084:	bf00      	nop
 8007086:	3710      	adds	r7, #16
 8007088:	46bd      	mov	sp, r7
 800708a:	bd80      	pop	{r7, pc}
 800708c:	200016c4 	.word	0x200016c4

08007090 <xTaskRemoveFromEventList>:
 8007090:	b580      	push	{r7, lr}
 8007092:	b086      	sub	sp, #24
 8007094:	af00      	add	r7, sp, #0
 8007096:	6078      	str	r0, [r7, #4]
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	68db      	ldr	r3, [r3, #12]
 800709c:	68db      	ldr	r3, [r3, #12]
 800709e:	613b      	str	r3, [r7, #16]
 80070a0:	693b      	ldr	r3, [r7, #16]
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d10a      	bne.n	80070bc <xTaskRemoveFromEventList+0x2c>
 80070a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070aa:	f383 8811 	msr	BASEPRI, r3
 80070ae:	f3bf 8f6f 	isb	sy
 80070b2:	f3bf 8f4f 	dsb	sy
 80070b6:	60fb      	str	r3, [r7, #12]
 80070b8:	bf00      	nop
 80070ba:	e7fe      	b.n	80070ba <xTaskRemoveFromEventList+0x2a>
 80070bc:	693b      	ldr	r3, [r7, #16]
 80070be:	3318      	adds	r3, #24
 80070c0:	4618      	mov	r0, r3
 80070c2:	f7fe ffbc 	bl	800603e <uxListRemove>
 80070c6:	4b1d      	ldr	r3, [pc, #116]	; (800713c <xTaskRemoveFromEventList+0xac>)
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	2b00      	cmp	r3, #0
 80070cc:	d11c      	bne.n	8007108 <xTaskRemoveFromEventList+0x78>
 80070ce:	693b      	ldr	r3, [r7, #16]
 80070d0:	3304      	adds	r3, #4
 80070d2:	4618      	mov	r0, r3
 80070d4:	f7fe ffb3 	bl	800603e <uxListRemove>
 80070d8:	693b      	ldr	r3, [r7, #16]
 80070da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80070dc:	2201      	movs	r2, #1
 80070de:	409a      	lsls	r2, r3
 80070e0:	4b17      	ldr	r3, [pc, #92]	; (8007140 <xTaskRemoveFromEventList+0xb0>)
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	4313      	orrs	r3, r2
 80070e6:	4a16      	ldr	r2, [pc, #88]	; (8007140 <xTaskRemoveFromEventList+0xb0>)
 80070e8:	6013      	str	r3, [r2, #0]
 80070ea:	693b      	ldr	r3, [r7, #16]
 80070ec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80070ee:	4613      	mov	r3, r2
 80070f0:	009b      	lsls	r3, r3, #2
 80070f2:	4413      	add	r3, r2
 80070f4:	009b      	lsls	r3, r3, #2
 80070f6:	4a13      	ldr	r2, [pc, #76]	; (8007144 <xTaskRemoveFromEventList+0xb4>)
 80070f8:	441a      	add	r2, r3
 80070fa:	693b      	ldr	r3, [r7, #16]
 80070fc:	3304      	adds	r3, #4
 80070fe:	4619      	mov	r1, r3
 8007100:	4610      	mov	r0, r2
 8007102:	f7fe ff3f 	bl	8005f84 <vListInsertEnd>
 8007106:	e005      	b.n	8007114 <xTaskRemoveFromEventList+0x84>
 8007108:	693b      	ldr	r3, [r7, #16]
 800710a:	3318      	adds	r3, #24
 800710c:	4619      	mov	r1, r3
 800710e:	480e      	ldr	r0, [pc, #56]	; (8007148 <xTaskRemoveFromEventList+0xb8>)
 8007110:	f7fe ff38 	bl	8005f84 <vListInsertEnd>
 8007114:	693b      	ldr	r3, [r7, #16]
 8007116:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007118:	4b0c      	ldr	r3, [pc, #48]	; (800714c <xTaskRemoveFromEventList+0xbc>)
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800711e:	429a      	cmp	r2, r3
 8007120:	d905      	bls.n	800712e <xTaskRemoveFromEventList+0x9e>
 8007122:	2301      	movs	r3, #1
 8007124:	617b      	str	r3, [r7, #20]
 8007126:	4b0a      	ldr	r3, [pc, #40]	; (8007150 <xTaskRemoveFromEventList+0xc0>)
 8007128:	2201      	movs	r2, #1
 800712a:	601a      	str	r2, [r3, #0]
 800712c:	e001      	b.n	8007132 <xTaskRemoveFromEventList+0xa2>
 800712e:	2300      	movs	r3, #0
 8007130:	617b      	str	r3, [r7, #20]
 8007132:	697b      	ldr	r3, [r7, #20]
 8007134:	4618      	mov	r0, r3
 8007136:	3718      	adds	r7, #24
 8007138:	46bd      	mov	sp, r7
 800713a:	bd80      	pop	{r7, pc}
 800713c:	200017ec 	.word	0x200017ec
 8007140:	200017cc 	.word	0x200017cc
 8007144:	200016c8 	.word	0x200016c8
 8007148:	20001784 	.word	0x20001784
 800714c:	200016c4 	.word	0x200016c4
 8007150:	200017d8 	.word	0x200017d8

08007154 <vTaskInternalSetTimeOutState>:
 8007154:	b480      	push	{r7}
 8007156:	b083      	sub	sp, #12
 8007158:	af00      	add	r7, sp, #0
 800715a:	6078      	str	r0, [r7, #4]
 800715c:	4b06      	ldr	r3, [pc, #24]	; (8007178 <vTaskInternalSetTimeOutState+0x24>)
 800715e:	681a      	ldr	r2, [r3, #0]
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	601a      	str	r2, [r3, #0]
 8007164:	4b05      	ldr	r3, [pc, #20]	; (800717c <vTaskInternalSetTimeOutState+0x28>)
 8007166:	681a      	ldr	r2, [r3, #0]
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	605a      	str	r2, [r3, #4]
 800716c:	bf00      	nop
 800716e:	370c      	adds	r7, #12
 8007170:	46bd      	mov	sp, r7
 8007172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007176:	4770      	bx	lr
 8007178:	200017dc 	.word	0x200017dc
 800717c:	200017c8 	.word	0x200017c8

08007180 <xTaskCheckForTimeOut>:
 8007180:	b580      	push	{r7, lr}
 8007182:	b088      	sub	sp, #32
 8007184:	af00      	add	r7, sp, #0
 8007186:	6078      	str	r0, [r7, #4]
 8007188:	6039      	str	r1, [r7, #0]
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	2b00      	cmp	r3, #0
 800718e:	d10a      	bne.n	80071a6 <xTaskCheckForTimeOut+0x26>
 8007190:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007194:	f383 8811 	msr	BASEPRI, r3
 8007198:	f3bf 8f6f 	isb	sy
 800719c:	f3bf 8f4f 	dsb	sy
 80071a0:	613b      	str	r3, [r7, #16]
 80071a2:	bf00      	nop
 80071a4:	e7fe      	b.n	80071a4 <xTaskCheckForTimeOut+0x24>
 80071a6:	683b      	ldr	r3, [r7, #0]
 80071a8:	2b00      	cmp	r3, #0
 80071aa:	d10a      	bne.n	80071c2 <xTaskCheckForTimeOut+0x42>
 80071ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071b0:	f383 8811 	msr	BASEPRI, r3
 80071b4:	f3bf 8f6f 	isb	sy
 80071b8:	f3bf 8f4f 	dsb	sy
 80071bc:	60fb      	str	r3, [r7, #12]
 80071be:	bf00      	nop
 80071c0:	e7fe      	b.n	80071c0 <xTaskCheckForTimeOut+0x40>
 80071c2:	f000 fb5f 	bl	8007884 <vPortEnterCritical>
 80071c6:	4b1d      	ldr	r3, [pc, #116]	; (800723c <xTaskCheckForTimeOut+0xbc>)
 80071c8:	681b      	ldr	r3, [r3, #0]
 80071ca:	61bb      	str	r3, [r7, #24]
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	685b      	ldr	r3, [r3, #4]
 80071d0:	69ba      	ldr	r2, [r7, #24]
 80071d2:	1ad3      	subs	r3, r2, r3
 80071d4:	617b      	str	r3, [r7, #20]
 80071d6:	683b      	ldr	r3, [r7, #0]
 80071d8:	681b      	ldr	r3, [r3, #0]
 80071da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80071de:	d102      	bne.n	80071e6 <xTaskCheckForTimeOut+0x66>
 80071e0:	2300      	movs	r3, #0
 80071e2:	61fb      	str	r3, [r7, #28]
 80071e4:	e023      	b.n	800722e <xTaskCheckForTimeOut+0xae>
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	681a      	ldr	r2, [r3, #0]
 80071ea:	4b15      	ldr	r3, [pc, #84]	; (8007240 <xTaskCheckForTimeOut+0xc0>)
 80071ec:	681b      	ldr	r3, [r3, #0]
 80071ee:	429a      	cmp	r2, r3
 80071f0:	d007      	beq.n	8007202 <xTaskCheckForTimeOut+0x82>
 80071f2:	687b      	ldr	r3, [r7, #4]
 80071f4:	685b      	ldr	r3, [r3, #4]
 80071f6:	69ba      	ldr	r2, [r7, #24]
 80071f8:	429a      	cmp	r2, r3
 80071fa:	d302      	bcc.n	8007202 <xTaskCheckForTimeOut+0x82>
 80071fc:	2301      	movs	r3, #1
 80071fe:	61fb      	str	r3, [r7, #28]
 8007200:	e015      	b.n	800722e <xTaskCheckForTimeOut+0xae>
 8007202:	683b      	ldr	r3, [r7, #0]
 8007204:	681b      	ldr	r3, [r3, #0]
 8007206:	697a      	ldr	r2, [r7, #20]
 8007208:	429a      	cmp	r2, r3
 800720a:	d20b      	bcs.n	8007224 <xTaskCheckForTimeOut+0xa4>
 800720c:	683b      	ldr	r3, [r7, #0]
 800720e:	681a      	ldr	r2, [r3, #0]
 8007210:	697b      	ldr	r3, [r7, #20]
 8007212:	1ad2      	subs	r2, r2, r3
 8007214:	683b      	ldr	r3, [r7, #0]
 8007216:	601a      	str	r2, [r3, #0]
 8007218:	6878      	ldr	r0, [r7, #4]
 800721a:	f7ff ff9b 	bl	8007154 <vTaskInternalSetTimeOutState>
 800721e:	2300      	movs	r3, #0
 8007220:	61fb      	str	r3, [r7, #28]
 8007222:	e004      	b.n	800722e <xTaskCheckForTimeOut+0xae>
 8007224:	683b      	ldr	r3, [r7, #0]
 8007226:	2200      	movs	r2, #0
 8007228:	601a      	str	r2, [r3, #0]
 800722a:	2301      	movs	r3, #1
 800722c:	61fb      	str	r3, [r7, #28]
 800722e:	f000 fb59 	bl	80078e4 <vPortExitCritical>
 8007232:	69fb      	ldr	r3, [r7, #28]
 8007234:	4618      	mov	r0, r3
 8007236:	3720      	adds	r7, #32
 8007238:	46bd      	mov	sp, r7
 800723a:	bd80      	pop	{r7, pc}
 800723c:	200017c8 	.word	0x200017c8
 8007240:	200017dc 	.word	0x200017dc

08007244 <vTaskMissedYield>:
 8007244:	b480      	push	{r7}
 8007246:	af00      	add	r7, sp, #0
 8007248:	4b03      	ldr	r3, [pc, #12]	; (8007258 <vTaskMissedYield+0x14>)
 800724a:	2201      	movs	r2, #1
 800724c:	601a      	str	r2, [r3, #0]
 800724e:	bf00      	nop
 8007250:	46bd      	mov	sp, r7
 8007252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007256:	4770      	bx	lr
 8007258:	200017d8 	.word	0x200017d8

0800725c <prvIdleTask>:
 800725c:	b580      	push	{r7, lr}
 800725e:	b082      	sub	sp, #8
 8007260:	af00      	add	r7, sp, #0
 8007262:	6078      	str	r0, [r7, #4]
 8007264:	f000 f852 	bl	800730c <prvCheckTasksWaitingTermination>
 8007268:	4b06      	ldr	r3, [pc, #24]	; (8007284 <prvIdleTask+0x28>)
 800726a:	681b      	ldr	r3, [r3, #0]
 800726c:	2b01      	cmp	r3, #1
 800726e:	d9f9      	bls.n	8007264 <prvIdleTask+0x8>
 8007270:	4b05      	ldr	r3, [pc, #20]	; (8007288 <prvIdleTask+0x2c>)
 8007272:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007276:	601a      	str	r2, [r3, #0]
 8007278:	f3bf 8f4f 	dsb	sy
 800727c:	f3bf 8f6f 	isb	sy
 8007280:	e7f0      	b.n	8007264 <prvIdleTask+0x8>
 8007282:	bf00      	nop
 8007284:	200016c8 	.word	0x200016c8
 8007288:	e000ed04 	.word	0xe000ed04

0800728c <prvInitialiseTaskLists>:
 800728c:	b580      	push	{r7, lr}
 800728e:	b082      	sub	sp, #8
 8007290:	af00      	add	r7, sp, #0
 8007292:	2300      	movs	r3, #0
 8007294:	607b      	str	r3, [r7, #4]
 8007296:	e00c      	b.n	80072b2 <prvInitialiseTaskLists+0x26>
 8007298:	687a      	ldr	r2, [r7, #4]
 800729a:	4613      	mov	r3, r2
 800729c:	009b      	lsls	r3, r3, #2
 800729e:	4413      	add	r3, r2
 80072a0:	009b      	lsls	r3, r3, #2
 80072a2:	4a12      	ldr	r2, [pc, #72]	; (80072ec <prvInitialiseTaskLists+0x60>)
 80072a4:	4413      	add	r3, r2
 80072a6:	4618      	mov	r0, r3
 80072a8:	f7fe fe3f 	bl	8005f2a <vListInitialise>
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	3301      	adds	r3, #1
 80072b0:	607b      	str	r3, [r7, #4]
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	2b06      	cmp	r3, #6
 80072b6:	d9ef      	bls.n	8007298 <prvInitialiseTaskLists+0xc>
 80072b8:	480d      	ldr	r0, [pc, #52]	; (80072f0 <prvInitialiseTaskLists+0x64>)
 80072ba:	f7fe fe36 	bl	8005f2a <vListInitialise>
 80072be:	480d      	ldr	r0, [pc, #52]	; (80072f4 <prvInitialiseTaskLists+0x68>)
 80072c0:	f7fe fe33 	bl	8005f2a <vListInitialise>
 80072c4:	480c      	ldr	r0, [pc, #48]	; (80072f8 <prvInitialiseTaskLists+0x6c>)
 80072c6:	f7fe fe30 	bl	8005f2a <vListInitialise>
 80072ca:	480c      	ldr	r0, [pc, #48]	; (80072fc <prvInitialiseTaskLists+0x70>)
 80072cc:	f7fe fe2d 	bl	8005f2a <vListInitialise>
 80072d0:	480b      	ldr	r0, [pc, #44]	; (8007300 <prvInitialiseTaskLists+0x74>)
 80072d2:	f7fe fe2a 	bl	8005f2a <vListInitialise>
 80072d6:	4b0b      	ldr	r3, [pc, #44]	; (8007304 <prvInitialiseTaskLists+0x78>)
 80072d8:	4a05      	ldr	r2, [pc, #20]	; (80072f0 <prvInitialiseTaskLists+0x64>)
 80072da:	601a      	str	r2, [r3, #0]
 80072dc:	4b0a      	ldr	r3, [pc, #40]	; (8007308 <prvInitialiseTaskLists+0x7c>)
 80072de:	4a05      	ldr	r2, [pc, #20]	; (80072f4 <prvInitialiseTaskLists+0x68>)
 80072e0:	601a      	str	r2, [r3, #0]
 80072e2:	bf00      	nop
 80072e4:	3708      	adds	r7, #8
 80072e6:	46bd      	mov	sp, r7
 80072e8:	bd80      	pop	{r7, pc}
 80072ea:	bf00      	nop
 80072ec:	200016c8 	.word	0x200016c8
 80072f0:	20001754 	.word	0x20001754
 80072f4:	20001768 	.word	0x20001768
 80072f8:	20001784 	.word	0x20001784
 80072fc:	20001798 	.word	0x20001798
 8007300:	200017b0 	.word	0x200017b0
 8007304:	2000177c 	.word	0x2000177c
 8007308:	20001780 	.word	0x20001780

0800730c <prvCheckTasksWaitingTermination>:
 800730c:	b580      	push	{r7, lr}
 800730e:	b082      	sub	sp, #8
 8007310:	af00      	add	r7, sp, #0
 8007312:	e019      	b.n	8007348 <prvCheckTasksWaitingTermination+0x3c>
 8007314:	f000 fab6 	bl	8007884 <vPortEnterCritical>
 8007318:	4b10      	ldr	r3, [pc, #64]	; (800735c <prvCheckTasksWaitingTermination+0x50>)
 800731a:	68db      	ldr	r3, [r3, #12]
 800731c:	68db      	ldr	r3, [r3, #12]
 800731e:	607b      	str	r3, [r7, #4]
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	3304      	adds	r3, #4
 8007324:	4618      	mov	r0, r3
 8007326:	f7fe fe8a 	bl	800603e <uxListRemove>
 800732a:	4b0d      	ldr	r3, [pc, #52]	; (8007360 <prvCheckTasksWaitingTermination+0x54>)
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	3b01      	subs	r3, #1
 8007330:	4a0b      	ldr	r2, [pc, #44]	; (8007360 <prvCheckTasksWaitingTermination+0x54>)
 8007332:	6013      	str	r3, [r2, #0]
 8007334:	4b0b      	ldr	r3, [pc, #44]	; (8007364 <prvCheckTasksWaitingTermination+0x58>)
 8007336:	681b      	ldr	r3, [r3, #0]
 8007338:	3b01      	subs	r3, #1
 800733a:	4a0a      	ldr	r2, [pc, #40]	; (8007364 <prvCheckTasksWaitingTermination+0x58>)
 800733c:	6013      	str	r3, [r2, #0]
 800733e:	f000 fad1 	bl	80078e4 <vPortExitCritical>
 8007342:	6878      	ldr	r0, [r7, #4]
 8007344:	f000 f810 	bl	8007368 <prvDeleteTCB>
 8007348:	4b06      	ldr	r3, [pc, #24]	; (8007364 <prvCheckTasksWaitingTermination+0x58>)
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	2b00      	cmp	r3, #0
 800734e:	d1e1      	bne.n	8007314 <prvCheckTasksWaitingTermination+0x8>
 8007350:	bf00      	nop
 8007352:	bf00      	nop
 8007354:	3708      	adds	r7, #8
 8007356:	46bd      	mov	sp, r7
 8007358:	bd80      	pop	{r7, pc}
 800735a:	bf00      	nop
 800735c:	20001798 	.word	0x20001798
 8007360:	200017c4 	.word	0x200017c4
 8007364:	200017ac 	.word	0x200017ac

08007368 <prvDeleteTCB>:
 8007368:	b580      	push	{r7, lr}
 800736a:	b084      	sub	sp, #16
 800736c:	af00      	add	r7, sp, #0
 800736e:	6078      	str	r0, [r7, #4]
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	334c      	adds	r3, #76	; 0x4c
 8007374:	4618      	mov	r0, r3
 8007376:	f000 ff83 	bl	8008280 <_reclaim_reent>
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8007380:	2b00      	cmp	r3, #0
 8007382:	d108      	bne.n	8007396 <prvDeleteTCB+0x2e>
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007388:	4618      	mov	r0, r3
 800738a:	f000 fc29 	bl	8007be0 <vPortFree>
 800738e:	6878      	ldr	r0, [r7, #4]
 8007390:	f000 fc26 	bl	8007be0 <vPortFree>
 8007394:	e018      	b.n	80073c8 <prvDeleteTCB+0x60>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 800739c:	2b01      	cmp	r3, #1
 800739e:	d103      	bne.n	80073a8 <prvDeleteTCB+0x40>
 80073a0:	6878      	ldr	r0, [r7, #4]
 80073a2:	f000 fc1d 	bl	8007be0 <vPortFree>
 80073a6:	e00f      	b.n	80073c8 <prvDeleteTCB+0x60>
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 80073ae:	2b02      	cmp	r3, #2
 80073b0:	d00a      	beq.n	80073c8 <prvDeleteTCB+0x60>
 80073b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073b6:	f383 8811 	msr	BASEPRI, r3
 80073ba:	f3bf 8f6f 	isb	sy
 80073be:	f3bf 8f4f 	dsb	sy
 80073c2:	60fb      	str	r3, [r7, #12]
 80073c4:	bf00      	nop
 80073c6:	e7fe      	b.n	80073c6 <prvDeleteTCB+0x5e>
 80073c8:	bf00      	nop
 80073ca:	3710      	adds	r7, #16
 80073cc:	46bd      	mov	sp, r7
 80073ce:	bd80      	pop	{r7, pc}

080073d0 <prvResetNextTaskUnblockTime>:
 80073d0:	b480      	push	{r7}
 80073d2:	b083      	sub	sp, #12
 80073d4:	af00      	add	r7, sp, #0
 80073d6:	4b0c      	ldr	r3, [pc, #48]	; (8007408 <prvResetNextTaskUnblockTime+0x38>)
 80073d8:	681b      	ldr	r3, [r3, #0]
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	d104      	bne.n	80073ea <prvResetNextTaskUnblockTime+0x1a>
 80073e0:	4b0a      	ldr	r3, [pc, #40]	; (800740c <prvResetNextTaskUnblockTime+0x3c>)
 80073e2:	f04f 32ff 	mov.w	r2, #4294967295
 80073e6:	601a      	str	r2, [r3, #0]
 80073e8:	e008      	b.n	80073fc <prvResetNextTaskUnblockTime+0x2c>
 80073ea:	4b07      	ldr	r3, [pc, #28]	; (8007408 <prvResetNextTaskUnblockTime+0x38>)
 80073ec:	681b      	ldr	r3, [r3, #0]
 80073ee:	68db      	ldr	r3, [r3, #12]
 80073f0:	68db      	ldr	r3, [r3, #12]
 80073f2:	607b      	str	r3, [r7, #4]
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	685b      	ldr	r3, [r3, #4]
 80073f8:	4a04      	ldr	r2, [pc, #16]	; (800740c <prvResetNextTaskUnblockTime+0x3c>)
 80073fa:	6013      	str	r3, [r2, #0]
 80073fc:	bf00      	nop
 80073fe:	370c      	adds	r7, #12
 8007400:	46bd      	mov	sp, r7
 8007402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007406:	4770      	bx	lr
 8007408:	2000177c 	.word	0x2000177c
 800740c:	200017e4 	.word	0x200017e4

08007410 <xTaskGetSchedulerState>:
 8007410:	b480      	push	{r7}
 8007412:	b083      	sub	sp, #12
 8007414:	af00      	add	r7, sp, #0
 8007416:	4b0b      	ldr	r3, [pc, #44]	; (8007444 <xTaskGetSchedulerState+0x34>)
 8007418:	681b      	ldr	r3, [r3, #0]
 800741a:	2b00      	cmp	r3, #0
 800741c:	d102      	bne.n	8007424 <xTaskGetSchedulerState+0x14>
 800741e:	2301      	movs	r3, #1
 8007420:	607b      	str	r3, [r7, #4]
 8007422:	e008      	b.n	8007436 <xTaskGetSchedulerState+0x26>
 8007424:	4b08      	ldr	r3, [pc, #32]	; (8007448 <xTaskGetSchedulerState+0x38>)
 8007426:	681b      	ldr	r3, [r3, #0]
 8007428:	2b00      	cmp	r3, #0
 800742a:	d102      	bne.n	8007432 <xTaskGetSchedulerState+0x22>
 800742c:	2302      	movs	r3, #2
 800742e:	607b      	str	r3, [r7, #4]
 8007430:	e001      	b.n	8007436 <xTaskGetSchedulerState+0x26>
 8007432:	2300      	movs	r3, #0
 8007434:	607b      	str	r3, [r7, #4]
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	4618      	mov	r0, r3
 800743a:	370c      	adds	r7, #12
 800743c:	46bd      	mov	sp, r7
 800743e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007442:	4770      	bx	lr
 8007444:	200017d0 	.word	0x200017d0
 8007448:	200017ec 	.word	0x200017ec

0800744c <xTaskPriorityDisinherit>:
 800744c:	b580      	push	{r7, lr}
 800744e:	b086      	sub	sp, #24
 8007450:	af00      	add	r7, sp, #0
 8007452:	6078      	str	r0, [r7, #4]
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	613b      	str	r3, [r7, #16]
 8007458:	2300      	movs	r3, #0
 800745a:	617b      	str	r3, [r7, #20]
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	2b00      	cmp	r3, #0
 8007460:	d06e      	beq.n	8007540 <xTaskPriorityDisinherit+0xf4>
 8007462:	4b3a      	ldr	r3, [pc, #232]	; (800754c <xTaskPriorityDisinherit+0x100>)
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	693a      	ldr	r2, [r7, #16]
 8007468:	429a      	cmp	r2, r3
 800746a:	d00a      	beq.n	8007482 <xTaskPriorityDisinherit+0x36>
 800746c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007470:	f383 8811 	msr	BASEPRI, r3
 8007474:	f3bf 8f6f 	isb	sy
 8007478:	f3bf 8f4f 	dsb	sy
 800747c:	60fb      	str	r3, [r7, #12]
 800747e:	bf00      	nop
 8007480:	e7fe      	b.n	8007480 <xTaskPriorityDisinherit+0x34>
 8007482:	693b      	ldr	r3, [r7, #16]
 8007484:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007486:	2b00      	cmp	r3, #0
 8007488:	d10a      	bne.n	80074a0 <xTaskPriorityDisinherit+0x54>
 800748a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800748e:	f383 8811 	msr	BASEPRI, r3
 8007492:	f3bf 8f6f 	isb	sy
 8007496:	f3bf 8f4f 	dsb	sy
 800749a:	60bb      	str	r3, [r7, #8]
 800749c:	bf00      	nop
 800749e:	e7fe      	b.n	800749e <xTaskPriorityDisinherit+0x52>
 80074a0:	693b      	ldr	r3, [r7, #16]
 80074a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80074a4:	1e5a      	subs	r2, r3, #1
 80074a6:	693b      	ldr	r3, [r7, #16]
 80074a8:	649a      	str	r2, [r3, #72]	; 0x48
 80074aa:	693b      	ldr	r3, [r7, #16]
 80074ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80074ae:	693b      	ldr	r3, [r7, #16]
 80074b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80074b2:	429a      	cmp	r2, r3
 80074b4:	d044      	beq.n	8007540 <xTaskPriorityDisinherit+0xf4>
 80074b6:	693b      	ldr	r3, [r7, #16]
 80074b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d140      	bne.n	8007540 <xTaskPriorityDisinherit+0xf4>
 80074be:	693b      	ldr	r3, [r7, #16]
 80074c0:	3304      	adds	r3, #4
 80074c2:	4618      	mov	r0, r3
 80074c4:	f7fe fdbb 	bl	800603e <uxListRemove>
 80074c8:	4603      	mov	r3, r0
 80074ca:	2b00      	cmp	r3, #0
 80074cc:	d115      	bne.n	80074fa <xTaskPriorityDisinherit+0xae>
 80074ce:	693b      	ldr	r3, [r7, #16]
 80074d0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80074d2:	491f      	ldr	r1, [pc, #124]	; (8007550 <xTaskPriorityDisinherit+0x104>)
 80074d4:	4613      	mov	r3, r2
 80074d6:	009b      	lsls	r3, r3, #2
 80074d8:	4413      	add	r3, r2
 80074da:	009b      	lsls	r3, r3, #2
 80074dc:	440b      	add	r3, r1
 80074de:	681b      	ldr	r3, [r3, #0]
 80074e0:	2b00      	cmp	r3, #0
 80074e2:	d10a      	bne.n	80074fa <xTaskPriorityDisinherit+0xae>
 80074e4:	693b      	ldr	r3, [r7, #16]
 80074e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80074e8:	2201      	movs	r2, #1
 80074ea:	fa02 f303 	lsl.w	r3, r2, r3
 80074ee:	43da      	mvns	r2, r3
 80074f0:	4b18      	ldr	r3, [pc, #96]	; (8007554 <xTaskPriorityDisinherit+0x108>)
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	4013      	ands	r3, r2
 80074f6:	4a17      	ldr	r2, [pc, #92]	; (8007554 <xTaskPriorityDisinherit+0x108>)
 80074f8:	6013      	str	r3, [r2, #0]
 80074fa:	693b      	ldr	r3, [r7, #16]
 80074fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80074fe:	693b      	ldr	r3, [r7, #16]
 8007500:	62da      	str	r2, [r3, #44]	; 0x2c
 8007502:	693b      	ldr	r3, [r7, #16]
 8007504:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007506:	f1c3 0207 	rsb	r2, r3, #7
 800750a:	693b      	ldr	r3, [r7, #16]
 800750c:	619a      	str	r2, [r3, #24]
 800750e:	693b      	ldr	r3, [r7, #16]
 8007510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007512:	2201      	movs	r2, #1
 8007514:	409a      	lsls	r2, r3
 8007516:	4b0f      	ldr	r3, [pc, #60]	; (8007554 <xTaskPriorityDisinherit+0x108>)
 8007518:	681b      	ldr	r3, [r3, #0]
 800751a:	4313      	orrs	r3, r2
 800751c:	4a0d      	ldr	r2, [pc, #52]	; (8007554 <xTaskPriorityDisinherit+0x108>)
 800751e:	6013      	str	r3, [r2, #0]
 8007520:	693b      	ldr	r3, [r7, #16]
 8007522:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007524:	4613      	mov	r3, r2
 8007526:	009b      	lsls	r3, r3, #2
 8007528:	4413      	add	r3, r2
 800752a:	009b      	lsls	r3, r3, #2
 800752c:	4a08      	ldr	r2, [pc, #32]	; (8007550 <xTaskPriorityDisinherit+0x104>)
 800752e:	441a      	add	r2, r3
 8007530:	693b      	ldr	r3, [r7, #16]
 8007532:	3304      	adds	r3, #4
 8007534:	4619      	mov	r1, r3
 8007536:	4610      	mov	r0, r2
 8007538:	f7fe fd24 	bl	8005f84 <vListInsertEnd>
 800753c:	2301      	movs	r3, #1
 800753e:	617b      	str	r3, [r7, #20]
 8007540:	697b      	ldr	r3, [r7, #20]
 8007542:	4618      	mov	r0, r3
 8007544:	3718      	adds	r7, #24
 8007546:	46bd      	mov	sp, r7
 8007548:	bd80      	pop	{r7, pc}
 800754a:	bf00      	nop
 800754c:	200016c4 	.word	0x200016c4
 8007550:	200016c8 	.word	0x200016c8
 8007554:	200017cc 	.word	0x200017cc

08007558 <prvAddCurrentTaskToDelayedList>:
 8007558:	b580      	push	{r7, lr}
 800755a:	b084      	sub	sp, #16
 800755c:	af00      	add	r7, sp, #0
 800755e:	6078      	str	r0, [r7, #4]
 8007560:	6039      	str	r1, [r7, #0]
 8007562:	4b29      	ldr	r3, [pc, #164]	; (8007608 <prvAddCurrentTaskToDelayedList+0xb0>)
 8007564:	681b      	ldr	r3, [r3, #0]
 8007566:	60fb      	str	r3, [r7, #12]
 8007568:	4b28      	ldr	r3, [pc, #160]	; (800760c <prvAddCurrentTaskToDelayedList+0xb4>)
 800756a:	681b      	ldr	r3, [r3, #0]
 800756c:	3304      	adds	r3, #4
 800756e:	4618      	mov	r0, r3
 8007570:	f7fe fd65 	bl	800603e <uxListRemove>
 8007574:	4603      	mov	r3, r0
 8007576:	2b00      	cmp	r3, #0
 8007578:	d10b      	bne.n	8007592 <prvAddCurrentTaskToDelayedList+0x3a>
 800757a:	4b24      	ldr	r3, [pc, #144]	; (800760c <prvAddCurrentTaskToDelayedList+0xb4>)
 800757c:	681b      	ldr	r3, [r3, #0]
 800757e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007580:	2201      	movs	r2, #1
 8007582:	fa02 f303 	lsl.w	r3, r2, r3
 8007586:	43da      	mvns	r2, r3
 8007588:	4b21      	ldr	r3, [pc, #132]	; (8007610 <prvAddCurrentTaskToDelayedList+0xb8>)
 800758a:	681b      	ldr	r3, [r3, #0]
 800758c:	4013      	ands	r3, r2
 800758e:	4a20      	ldr	r2, [pc, #128]	; (8007610 <prvAddCurrentTaskToDelayedList+0xb8>)
 8007590:	6013      	str	r3, [r2, #0]
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007598:	d10a      	bne.n	80075b0 <prvAddCurrentTaskToDelayedList+0x58>
 800759a:	683b      	ldr	r3, [r7, #0]
 800759c:	2b00      	cmp	r3, #0
 800759e:	d007      	beq.n	80075b0 <prvAddCurrentTaskToDelayedList+0x58>
 80075a0:	4b1a      	ldr	r3, [pc, #104]	; (800760c <prvAddCurrentTaskToDelayedList+0xb4>)
 80075a2:	681b      	ldr	r3, [r3, #0]
 80075a4:	3304      	adds	r3, #4
 80075a6:	4619      	mov	r1, r3
 80075a8:	481a      	ldr	r0, [pc, #104]	; (8007614 <prvAddCurrentTaskToDelayedList+0xbc>)
 80075aa:	f7fe fceb 	bl	8005f84 <vListInsertEnd>
 80075ae:	e026      	b.n	80075fe <prvAddCurrentTaskToDelayedList+0xa6>
 80075b0:	68fa      	ldr	r2, [r7, #12]
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	4413      	add	r3, r2
 80075b6:	60bb      	str	r3, [r7, #8]
 80075b8:	4b14      	ldr	r3, [pc, #80]	; (800760c <prvAddCurrentTaskToDelayedList+0xb4>)
 80075ba:	681b      	ldr	r3, [r3, #0]
 80075bc:	68ba      	ldr	r2, [r7, #8]
 80075be:	605a      	str	r2, [r3, #4]
 80075c0:	68ba      	ldr	r2, [r7, #8]
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	429a      	cmp	r2, r3
 80075c6:	d209      	bcs.n	80075dc <prvAddCurrentTaskToDelayedList+0x84>
 80075c8:	4b13      	ldr	r3, [pc, #76]	; (8007618 <prvAddCurrentTaskToDelayedList+0xc0>)
 80075ca:	681a      	ldr	r2, [r3, #0]
 80075cc:	4b0f      	ldr	r3, [pc, #60]	; (800760c <prvAddCurrentTaskToDelayedList+0xb4>)
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	3304      	adds	r3, #4
 80075d2:	4619      	mov	r1, r3
 80075d4:	4610      	mov	r0, r2
 80075d6:	f7fe fcf9 	bl	8005fcc <vListInsert>
 80075da:	e010      	b.n	80075fe <prvAddCurrentTaskToDelayedList+0xa6>
 80075dc:	4b0f      	ldr	r3, [pc, #60]	; (800761c <prvAddCurrentTaskToDelayedList+0xc4>)
 80075de:	681a      	ldr	r2, [r3, #0]
 80075e0:	4b0a      	ldr	r3, [pc, #40]	; (800760c <prvAddCurrentTaskToDelayedList+0xb4>)
 80075e2:	681b      	ldr	r3, [r3, #0]
 80075e4:	3304      	adds	r3, #4
 80075e6:	4619      	mov	r1, r3
 80075e8:	4610      	mov	r0, r2
 80075ea:	f7fe fcef 	bl	8005fcc <vListInsert>
 80075ee:	4b0c      	ldr	r3, [pc, #48]	; (8007620 <prvAddCurrentTaskToDelayedList+0xc8>)
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	68ba      	ldr	r2, [r7, #8]
 80075f4:	429a      	cmp	r2, r3
 80075f6:	d202      	bcs.n	80075fe <prvAddCurrentTaskToDelayedList+0xa6>
 80075f8:	4a09      	ldr	r2, [pc, #36]	; (8007620 <prvAddCurrentTaskToDelayedList+0xc8>)
 80075fa:	68bb      	ldr	r3, [r7, #8]
 80075fc:	6013      	str	r3, [r2, #0]
 80075fe:	bf00      	nop
 8007600:	3710      	adds	r7, #16
 8007602:	46bd      	mov	sp, r7
 8007604:	bd80      	pop	{r7, pc}
 8007606:	bf00      	nop
 8007608:	200017c8 	.word	0x200017c8
 800760c:	200016c4 	.word	0x200016c4
 8007610:	200017cc 	.word	0x200017cc
 8007614:	200017b0 	.word	0x200017b0
 8007618:	20001780 	.word	0x20001780
 800761c:	2000177c 	.word	0x2000177c
 8007620:	200017e4 	.word	0x200017e4

08007624 <pxPortInitialiseStack>:
 8007624:	b480      	push	{r7}
 8007626:	b085      	sub	sp, #20
 8007628:	af00      	add	r7, sp, #0
 800762a:	60f8      	str	r0, [r7, #12]
 800762c:	60b9      	str	r1, [r7, #8]
 800762e:	607a      	str	r2, [r7, #4]
 8007630:	68fb      	ldr	r3, [r7, #12]
 8007632:	3b04      	subs	r3, #4
 8007634:	60fb      	str	r3, [r7, #12]
 8007636:	68fb      	ldr	r3, [r7, #12]
 8007638:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800763c:	601a      	str	r2, [r3, #0]
 800763e:	68fb      	ldr	r3, [r7, #12]
 8007640:	3b04      	subs	r3, #4
 8007642:	60fb      	str	r3, [r7, #12]
 8007644:	68bb      	ldr	r3, [r7, #8]
 8007646:	f023 0201 	bic.w	r2, r3, #1
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	601a      	str	r2, [r3, #0]
 800764e:	68fb      	ldr	r3, [r7, #12]
 8007650:	3b04      	subs	r3, #4
 8007652:	60fb      	str	r3, [r7, #12]
 8007654:	4a0c      	ldr	r2, [pc, #48]	; (8007688 <pxPortInitialiseStack+0x64>)
 8007656:	68fb      	ldr	r3, [r7, #12]
 8007658:	601a      	str	r2, [r3, #0]
 800765a:	68fb      	ldr	r3, [r7, #12]
 800765c:	3b14      	subs	r3, #20
 800765e:	60fb      	str	r3, [r7, #12]
 8007660:	687a      	ldr	r2, [r7, #4]
 8007662:	68fb      	ldr	r3, [r7, #12]
 8007664:	601a      	str	r2, [r3, #0]
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	3b04      	subs	r3, #4
 800766a:	60fb      	str	r3, [r7, #12]
 800766c:	68fb      	ldr	r3, [r7, #12]
 800766e:	f06f 0202 	mvn.w	r2, #2
 8007672:	601a      	str	r2, [r3, #0]
 8007674:	68fb      	ldr	r3, [r7, #12]
 8007676:	3b20      	subs	r3, #32
 8007678:	60fb      	str	r3, [r7, #12]
 800767a:	68fb      	ldr	r3, [r7, #12]
 800767c:	4618      	mov	r0, r3
 800767e:	3714      	adds	r7, #20
 8007680:	46bd      	mov	sp, r7
 8007682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007686:	4770      	bx	lr
 8007688:	0800768d 	.word	0x0800768d

0800768c <prvTaskExitError>:
 800768c:	b480      	push	{r7}
 800768e:	b085      	sub	sp, #20
 8007690:	af00      	add	r7, sp, #0
 8007692:	2300      	movs	r3, #0
 8007694:	607b      	str	r3, [r7, #4]
 8007696:	4b12      	ldr	r3, [pc, #72]	; (80076e0 <prvTaskExitError+0x54>)
 8007698:	681b      	ldr	r3, [r3, #0]
 800769a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800769e:	d00a      	beq.n	80076b6 <prvTaskExitError+0x2a>
 80076a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076a4:	f383 8811 	msr	BASEPRI, r3
 80076a8:	f3bf 8f6f 	isb	sy
 80076ac:	f3bf 8f4f 	dsb	sy
 80076b0:	60fb      	str	r3, [r7, #12]
 80076b2:	bf00      	nop
 80076b4:	e7fe      	b.n	80076b4 <prvTaskExitError+0x28>
 80076b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076ba:	f383 8811 	msr	BASEPRI, r3
 80076be:	f3bf 8f6f 	isb	sy
 80076c2:	f3bf 8f4f 	dsb	sy
 80076c6:	60bb      	str	r3, [r7, #8]
 80076c8:	bf00      	nop
 80076ca:	bf00      	nop
 80076cc:	687b      	ldr	r3, [r7, #4]
 80076ce:	2b00      	cmp	r3, #0
 80076d0:	d0fc      	beq.n	80076cc <prvTaskExitError+0x40>
 80076d2:	bf00      	nop
 80076d4:	bf00      	nop
 80076d6:	3714      	adds	r7, #20
 80076d8:	46bd      	mov	sp, r7
 80076da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076de:	4770      	bx	lr
 80076e0:	2000009c 	.word	0x2000009c
	...

080076f0 <SVC_Handler>:
 80076f0:	4b07      	ldr	r3, [pc, #28]	; (8007710 <pxCurrentTCBConst2>)
 80076f2:	6819      	ldr	r1, [r3, #0]
 80076f4:	6808      	ldr	r0, [r1, #0]
 80076f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076fa:	f380 8809 	msr	PSP, r0
 80076fe:	f3bf 8f6f 	isb	sy
 8007702:	f04f 0000 	mov.w	r0, #0
 8007706:	f380 8811 	msr	BASEPRI, r0
 800770a:	4770      	bx	lr
 800770c:	f3af 8000 	nop.w

08007710 <pxCurrentTCBConst2>:
 8007710:	200016c4 	.word	0x200016c4
 8007714:	bf00      	nop
 8007716:	bf00      	nop

08007718 <prvPortStartFirstTask>:
 8007718:	4808      	ldr	r0, [pc, #32]	; (800773c <prvPortStartFirstTask+0x24>)
 800771a:	6800      	ldr	r0, [r0, #0]
 800771c:	6800      	ldr	r0, [r0, #0]
 800771e:	f380 8808 	msr	MSP, r0
 8007722:	f04f 0000 	mov.w	r0, #0
 8007726:	f380 8814 	msr	CONTROL, r0
 800772a:	b662      	cpsie	i
 800772c:	b661      	cpsie	f
 800772e:	f3bf 8f4f 	dsb	sy
 8007732:	f3bf 8f6f 	isb	sy
 8007736:	df00      	svc	0
 8007738:	bf00      	nop
 800773a:	bf00      	nop
 800773c:	e000ed08 	.word	0xe000ed08

08007740 <xPortStartScheduler>:
 8007740:	b580      	push	{r7, lr}
 8007742:	b086      	sub	sp, #24
 8007744:	af00      	add	r7, sp, #0
 8007746:	4b46      	ldr	r3, [pc, #280]	; (8007860 <xPortStartScheduler+0x120>)
 8007748:	681b      	ldr	r3, [r3, #0]
 800774a:	4a46      	ldr	r2, [pc, #280]	; (8007864 <xPortStartScheduler+0x124>)
 800774c:	4293      	cmp	r3, r2
 800774e:	d10a      	bne.n	8007766 <xPortStartScheduler+0x26>
 8007750:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007754:	f383 8811 	msr	BASEPRI, r3
 8007758:	f3bf 8f6f 	isb	sy
 800775c:	f3bf 8f4f 	dsb	sy
 8007760:	613b      	str	r3, [r7, #16]
 8007762:	bf00      	nop
 8007764:	e7fe      	b.n	8007764 <xPortStartScheduler+0x24>
 8007766:	4b3e      	ldr	r3, [pc, #248]	; (8007860 <xPortStartScheduler+0x120>)
 8007768:	681b      	ldr	r3, [r3, #0]
 800776a:	4a3f      	ldr	r2, [pc, #252]	; (8007868 <xPortStartScheduler+0x128>)
 800776c:	4293      	cmp	r3, r2
 800776e:	d10a      	bne.n	8007786 <xPortStartScheduler+0x46>
 8007770:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007774:	f383 8811 	msr	BASEPRI, r3
 8007778:	f3bf 8f6f 	isb	sy
 800777c:	f3bf 8f4f 	dsb	sy
 8007780:	60fb      	str	r3, [r7, #12]
 8007782:	bf00      	nop
 8007784:	e7fe      	b.n	8007784 <xPortStartScheduler+0x44>
 8007786:	4b39      	ldr	r3, [pc, #228]	; (800786c <xPortStartScheduler+0x12c>)
 8007788:	617b      	str	r3, [r7, #20]
 800778a:	697b      	ldr	r3, [r7, #20]
 800778c:	781b      	ldrb	r3, [r3, #0]
 800778e:	b2db      	uxtb	r3, r3
 8007790:	607b      	str	r3, [r7, #4]
 8007792:	697b      	ldr	r3, [r7, #20]
 8007794:	22ff      	movs	r2, #255	; 0xff
 8007796:	701a      	strb	r2, [r3, #0]
 8007798:	697b      	ldr	r3, [r7, #20]
 800779a:	781b      	ldrb	r3, [r3, #0]
 800779c:	b2db      	uxtb	r3, r3
 800779e:	70fb      	strb	r3, [r7, #3]
 80077a0:	78fb      	ldrb	r3, [r7, #3]
 80077a2:	b2db      	uxtb	r3, r3
 80077a4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80077a8:	b2da      	uxtb	r2, r3
 80077aa:	4b31      	ldr	r3, [pc, #196]	; (8007870 <xPortStartScheduler+0x130>)
 80077ac:	701a      	strb	r2, [r3, #0]
 80077ae:	4b31      	ldr	r3, [pc, #196]	; (8007874 <xPortStartScheduler+0x134>)
 80077b0:	2207      	movs	r2, #7
 80077b2:	601a      	str	r2, [r3, #0]
 80077b4:	e009      	b.n	80077ca <xPortStartScheduler+0x8a>
 80077b6:	4b2f      	ldr	r3, [pc, #188]	; (8007874 <xPortStartScheduler+0x134>)
 80077b8:	681b      	ldr	r3, [r3, #0]
 80077ba:	3b01      	subs	r3, #1
 80077bc:	4a2d      	ldr	r2, [pc, #180]	; (8007874 <xPortStartScheduler+0x134>)
 80077be:	6013      	str	r3, [r2, #0]
 80077c0:	78fb      	ldrb	r3, [r7, #3]
 80077c2:	b2db      	uxtb	r3, r3
 80077c4:	005b      	lsls	r3, r3, #1
 80077c6:	b2db      	uxtb	r3, r3
 80077c8:	70fb      	strb	r3, [r7, #3]
 80077ca:	78fb      	ldrb	r3, [r7, #3]
 80077cc:	b2db      	uxtb	r3, r3
 80077ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80077d2:	2b80      	cmp	r3, #128	; 0x80
 80077d4:	d0ef      	beq.n	80077b6 <xPortStartScheduler+0x76>
 80077d6:	4b27      	ldr	r3, [pc, #156]	; (8007874 <xPortStartScheduler+0x134>)
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	f1c3 0307 	rsb	r3, r3, #7
 80077de:	2b04      	cmp	r3, #4
 80077e0:	d00a      	beq.n	80077f8 <xPortStartScheduler+0xb8>
 80077e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077e6:	f383 8811 	msr	BASEPRI, r3
 80077ea:	f3bf 8f6f 	isb	sy
 80077ee:	f3bf 8f4f 	dsb	sy
 80077f2:	60bb      	str	r3, [r7, #8]
 80077f4:	bf00      	nop
 80077f6:	e7fe      	b.n	80077f6 <xPortStartScheduler+0xb6>
 80077f8:	4b1e      	ldr	r3, [pc, #120]	; (8007874 <xPortStartScheduler+0x134>)
 80077fa:	681b      	ldr	r3, [r3, #0]
 80077fc:	021b      	lsls	r3, r3, #8
 80077fe:	4a1d      	ldr	r2, [pc, #116]	; (8007874 <xPortStartScheduler+0x134>)
 8007800:	6013      	str	r3, [r2, #0]
 8007802:	4b1c      	ldr	r3, [pc, #112]	; (8007874 <xPortStartScheduler+0x134>)
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800780a:	4a1a      	ldr	r2, [pc, #104]	; (8007874 <xPortStartScheduler+0x134>)
 800780c:	6013      	str	r3, [r2, #0]
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	b2da      	uxtb	r2, r3
 8007812:	697b      	ldr	r3, [r7, #20]
 8007814:	701a      	strb	r2, [r3, #0]
 8007816:	4b18      	ldr	r3, [pc, #96]	; (8007878 <xPortStartScheduler+0x138>)
 8007818:	681b      	ldr	r3, [r3, #0]
 800781a:	4a17      	ldr	r2, [pc, #92]	; (8007878 <xPortStartScheduler+0x138>)
 800781c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007820:	6013      	str	r3, [r2, #0]
 8007822:	4b15      	ldr	r3, [pc, #84]	; (8007878 <xPortStartScheduler+0x138>)
 8007824:	681b      	ldr	r3, [r3, #0]
 8007826:	4a14      	ldr	r2, [pc, #80]	; (8007878 <xPortStartScheduler+0x138>)
 8007828:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800782c:	6013      	str	r3, [r2, #0]
 800782e:	f000 f8dd 	bl	80079ec <vPortSetupTimerInterrupt>
 8007832:	4b12      	ldr	r3, [pc, #72]	; (800787c <xPortStartScheduler+0x13c>)
 8007834:	2200      	movs	r2, #0
 8007836:	601a      	str	r2, [r3, #0]
 8007838:	f000 f8fc 	bl	8007a34 <vPortEnableVFP>
 800783c:	4b10      	ldr	r3, [pc, #64]	; (8007880 <xPortStartScheduler+0x140>)
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	4a0f      	ldr	r2, [pc, #60]	; (8007880 <xPortStartScheduler+0x140>)
 8007842:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007846:	6013      	str	r3, [r2, #0]
 8007848:	f7ff ff66 	bl	8007718 <prvPortStartFirstTask>
 800784c:	f7ff fb9a 	bl	8006f84 <vTaskSwitchContext>
 8007850:	f7ff ff1c 	bl	800768c <prvTaskExitError>
 8007854:	2300      	movs	r3, #0
 8007856:	4618      	mov	r0, r3
 8007858:	3718      	adds	r7, #24
 800785a:	46bd      	mov	sp, r7
 800785c:	bd80      	pop	{r7, pc}
 800785e:	bf00      	nop
 8007860:	e000ed00 	.word	0xe000ed00
 8007864:	410fc271 	.word	0x410fc271
 8007868:	410fc270 	.word	0x410fc270
 800786c:	e000e400 	.word	0xe000e400
 8007870:	200017f0 	.word	0x200017f0
 8007874:	200017f4 	.word	0x200017f4
 8007878:	e000ed20 	.word	0xe000ed20
 800787c:	2000009c 	.word	0x2000009c
 8007880:	e000ef34 	.word	0xe000ef34

08007884 <vPortEnterCritical>:
 8007884:	b480      	push	{r7}
 8007886:	b083      	sub	sp, #12
 8007888:	af00      	add	r7, sp, #0
 800788a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800788e:	f383 8811 	msr	BASEPRI, r3
 8007892:	f3bf 8f6f 	isb	sy
 8007896:	f3bf 8f4f 	dsb	sy
 800789a:	607b      	str	r3, [r7, #4]
 800789c:	bf00      	nop
 800789e:	4b0f      	ldr	r3, [pc, #60]	; (80078dc <vPortEnterCritical+0x58>)
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	3301      	adds	r3, #1
 80078a4:	4a0d      	ldr	r2, [pc, #52]	; (80078dc <vPortEnterCritical+0x58>)
 80078a6:	6013      	str	r3, [r2, #0]
 80078a8:	4b0c      	ldr	r3, [pc, #48]	; (80078dc <vPortEnterCritical+0x58>)
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	2b01      	cmp	r3, #1
 80078ae:	d10f      	bne.n	80078d0 <vPortEnterCritical+0x4c>
 80078b0:	4b0b      	ldr	r3, [pc, #44]	; (80078e0 <vPortEnterCritical+0x5c>)
 80078b2:	681b      	ldr	r3, [r3, #0]
 80078b4:	b2db      	uxtb	r3, r3
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	d00a      	beq.n	80078d0 <vPortEnterCritical+0x4c>
 80078ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078be:	f383 8811 	msr	BASEPRI, r3
 80078c2:	f3bf 8f6f 	isb	sy
 80078c6:	f3bf 8f4f 	dsb	sy
 80078ca:	603b      	str	r3, [r7, #0]
 80078cc:	bf00      	nop
 80078ce:	e7fe      	b.n	80078ce <vPortEnterCritical+0x4a>
 80078d0:	bf00      	nop
 80078d2:	370c      	adds	r7, #12
 80078d4:	46bd      	mov	sp, r7
 80078d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078da:	4770      	bx	lr
 80078dc:	2000009c 	.word	0x2000009c
 80078e0:	e000ed04 	.word	0xe000ed04

080078e4 <vPortExitCritical>:
 80078e4:	b480      	push	{r7}
 80078e6:	b083      	sub	sp, #12
 80078e8:	af00      	add	r7, sp, #0
 80078ea:	4b12      	ldr	r3, [pc, #72]	; (8007934 <vPortExitCritical+0x50>)
 80078ec:	681b      	ldr	r3, [r3, #0]
 80078ee:	2b00      	cmp	r3, #0
 80078f0:	d10a      	bne.n	8007908 <vPortExitCritical+0x24>
 80078f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078f6:	f383 8811 	msr	BASEPRI, r3
 80078fa:	f3bf 8f6f 	isb	sy
 80078fe:	f3bf 8f4f 	dsb	sy
 8007902:	607b      	str	r3, [r7, #4]
 8007904:	bf00      	nop
 8007906:	e7fe      	b.n	8007906 <vPortExitCritical+0x22>
 8007908:	4b0a      	ldr	r3, [pc, #40]	; (8007934 <vPortExitCritical+0x50>)
 800790a:	681b      	ldr	r3, [r3, #0]
 800790c:	3b01      	subs	r3, #1
 800790e:	4a09      	ldr	r2, [pc, #36]	; (8007934 <vPortExitCritical+0x50>)
 8007910:	6013      	str	r3, [r2, #0]
 8007912:	4b08      	ldr	r3, [pc, #32]	; (8007934 <vPortExitCritical+0x50>)
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	2b00      	cmp	r3, #0
 8007918:	d105      	bne.n	8007926 <vPortExitCritical+0x42>
 800791a:	2300      	movs	r3, #0
 800791c:	603b      	str	r3, [r7, #0]
 800791e:	683b      	ldr	r3, [r7, #0]
 8007920:	f383 8811 	msr	BASEPRI, r3
 8007924:	bf00      	nop
 8007926:	bf00      	nop
 8007928:	370c      	adds	r7, #12
 800792a:	46bd      	mov	sp, r7
 800792c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007930:	4770      	bx	lr
 8007932:	bf00      	nop
 8007934:	2000009c 	.word	0x2000009c
	...

08007940 <PendSV_Handler>:
 8007940:	f3ef 8009 	mrs	r0, PSP
 8007944:	f3bf 8f6f 	isb	sy
 8007948:	4b15      	ldr	r3, [pc, #84]	; (80079a0 <pxCurrentTCBConst>)
 800794a:	681a      	ldr	r2, [r3, #0]
 800794c:	f01e 0f10 	tst.w	lr, #16
 8007950:	bf08      	it	eq
 8007952:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007956:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800795a:	6010      	str	r0, [r2, #0]
 800795c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007960:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007964:	f380 8811 	msr	BASEPRI, r0
 8007968:	f3bf 8f4f 	dsb	sy
 800796c:	f3bf 8f6f 	isb	sy
 8007970:	f7ff fb08 	bl	8006f84 <vTaskSwitchContext>
 8007974:	f04f 0000 	mov.w	r0, #0
 8007978:	f380 8811 	msr	BASEPRI, r0
 800797c:	bc09      	pop	{r0, r3}
 800797e:	6819      	ldr	r1, [r3, #0]
 8007980:	6808      	ldr	r0, [r1, #0]
 8007982:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007986:	f01e 0f10 	tst.w	lr, #16
 800798a:	bf08      	it	eq
 800798c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007990:	f380 8809 	msr	PSP, r0
 8007994:	f3bf 8f6f 	isb	sy
 8007998:	4770      	bx	lr
 800799a:	bf00      	nop
 800799c:	f3af 8000 	nop.w

080079a0 <pxCurrentTCBConst>:
 80079a0:	200016c4 	.word	0x200016c4
 80079a4:	bf00      	nop
 80079a6:	bf00      	nop

080079a8 <SysTick_Handler>:
 80079a8:	b580      	push	{r7, lr}
 80079aa:	b082      	sub	sp, #8
 80079ac:	af00      	add	r7, sp, #0
 80079ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079b2:	f383 8811 	msr	BASEPRI, r3
 80079b6:	f3bf 8f6f 	isb	sy
 80079ba:	f3bf 8f4f 	dsb	sy
 80079be:	607b      	str	r3, [r7, #4]
 80079c0:	bf00      	nop
 80079c2:	f7ff fa27 	bl	8006e14 <xTaskIncrementTick>
 80079c6:	4603      	mov	r3, r0
 80079c8:	2b00      	cmp	r3, #0
 80079ca:	d003      	beq.n	80079d4 <SysTick_Handler+0x2c>
 80079cc:	4b06      	ldr	r3, [pc, #24]	; (80079e8 <SysTick_Handler+0x40>)
 80079ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80079d2:	601a      	str	r2, [r3, #0]
 80079d4:	2300      	movs	r3, #0
 80079d6:	603b      	str	r3, [r7, #0]
 80079d8:	683b      	ldr	r3, [r7, #0]
 80079da:	f383 8811 	msr	BASEPRI, r3
 80079de:	bf00      	nop
 80079e0:	bf00      	nop
 80079e2:	3708      	adds	r7, #8
 80079e4:	46bd      	mov	sp, r7
 80079e6:	bd80      	pop	{r7, pc}
 80079e8:	e000ed04 	.word	0xe000ed04

080079ec <vPortSetupTimerInterrupt>:
 80079ec:	b480      	push	{r7}
 80079ee:	af00      	add	r7, sp, #0
 80079f0:	4b0b      	ldr	r3, [pc, #44]	; (8007a20 <vPortSetupTimerInterrupt+0x34>)
 80079f2:	2200      	movs	r2, #0
 80079f4:	601a      	str	r2, [r3, #0]
 80079f6:	4b0b      	ldr	r3, [pc, #44]	; (8007a24 <vPortSetupTimerInterrupt+0x38>)
 80079f8:	2200      	movs	r2, #0
 80079fa:	601a      	str	r2, [r3, #0]
 80079fc:	4b0a      	ldr	r3, [pc, #40]	; (8007a28 <vPortSetupTimerInterrupt+0x3c>)
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	4a0a      	ldr	r2, [pc, #40]	; (8007a2c <vPortSetupTimerInterrupt+0x40>)
 8007a02:	fba2 2303 	umull	r2, r3, r2, r3
 8007a06:	099b      	lsrs	r3, r3, #6
 8007a08:	4a09      	ldr	r2, [pc, #36]	; (8007a30 <vPortSetupTimerInterrupt+0x44>)
 8007a0a:	3b01      	subs	r3, #1
 8007a0c:	6013      	str	r3, [r2, #0]
 8007a0e:	4b04      	ldr	r3, [pc, #16]	; (8007a20 <vPortSetupTimerInterrupt+0x34>)
 8007a10:	2207      	movs	r2, #7
 8007a12:	601a      	str	r2, [r3, #0]
 8007a14:	bf00      	nop
 8007a16:	46bd      	mov	sp, r7
 8007a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a1c:	4770      	bx	lr
 8007a1e:	bf00      	nop
 8007a20:	e000e010 	.word	0xe000e010
 8007a24:	e000e018 	.word	0xe000e018
 8007a28:	20000000 	.word	0x20000000
 8007a2c:	10624dd3 	.word	0x10624dd3
 8007a30:	e000e014 	.word	0xe000e014

08007a34 <vPortEnableVFP>:
 8007a34:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007a44 <vPortEnableVFP+0x10>
 8007a38:	6801      	ldr	r1, [r0, #0]
 8007a3a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007a3e:	6001      	str	r1, [r0, #0]
 8007a40:	4770      	bx	lr
 8007a42:	bf00      	nop
 8007a44:	e000ed88 	.word	0xe000ed88

08007a48 <pvPortMalloc>:
 8007a48:	b580      	push	{r7, lr}
 8007a4a:	b08a      	sub	sp, #40	; 0x28
 8007a4c:	af00      	add	r7, sp, #0
 8007a4e:	6078      	str	r0, [r7, #4]
 8007a50:	2300      	movs	r3, #0
 8007a52:	61fb      	str	r3, [r7, #28]
 8007a54:	f7ff f934 	bl	8006cc0 <vTaskSuspendAll>
 8007a58:	4b5b      	ldr	r3, [pc, #364]	; (8007bc8 <pvPortMalloc+0x180>)
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	2b00      	cmp	r3, #0
 8007a5e:	d101      	bne.n	8007a64 <pvPortMalloc+0x1c>
 8007a60:	f000 f920 	bl	8007ca4 <prvHeapInit>
 8007a64:	4b59      	ldr	r3, [pc, #356]	; (8007bcc <pvPortMalloc+0x184>)
 8007a66:	681a      	ldr	r2, [r3, #0]
 8007a68:	687b      	ldr	r3, [r7, #4]
 8007a6a:	4013      	ands	r3, r2
 8007a6c:	2b00      	cmp	r3, #0
 8007a6e:	f040 8093 	bne.w	8007b98 <pvPortMalloc+0x150>
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	d01d      	beq.n	8007ab4 <pvPortMalloc+0x6c>
 8007a78:	2208      	movs	r2, #8
 8007a7a:	687b      	ldr	r3, [r7, #4]
 8007a7c:	4413      	add	r3, r2
 8007a7e:	607b      	str	r3, [r7, #4]
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	f003 0307 	and.w	r3, r3, #7
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	d014      	beq.n	8007ab4 <pvPortMalloc+0x6c>
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	f023 0307 	bic.w	r3, r3, #7
 8007a90:	3308      	adds	r3, #8
 8007a92:	607b      	str	r3, [r7, #4]
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	f003 0307 	and.w	r3, r3, #7
 8007a9a:	2b00      	cmp	r3, #0
 8007a9c:	d00a      	beq.n	8007ab4 <pvPortMalloc+0x6c>
 8007a9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007aa2:	f383 8811 	msr	BASEPRI, r3
 8007aa6:	f3bf 8f6f 	isb	sy
 8007aaa:	f3bf 8f4f 	dsb	sy
 8007aae:	617b      	str	r3, [r7, #20]
 8007ab0:	bf00      	nop
 8007ab2:	e7fe      	b.n	8007ab2 <pvPortMalloc+0x6a>
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	2b00      	cmp	r3, #0
 8007ab8:	d06e      	beq.n	8007b98 <pvPortMalloc+0x150>
 8007aba:	4b45      	ldr	r3, [pc, #276]	; (8007bd0 <pvPortMalloc+0x188>)
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	687a      	ldr	r2, [r7, #4]
 8007ac0:	429a      	cmp	r2, r3
 8007ac2:	d869      	bhi.n	8007b98 <pvPortMalloc+0x150>
 8007ac4:	4b43      	ldr	r3, [pc, #268]	; (8007bd4 <pvPortMalloc+0x18c>)
 8007ac6:	623b      	str	r3, [r7, #32]
 8007ac8:	4b42      	ldr	r3, [pc, #264]	; (8007bd4 <pvPortMalloc+0x18c>)
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	627b      	str	r3, [r7, #36]	; 0x24
 8007ace:	e004      	b.n	8007ada <pvPortMalloc+0x92>
 8007ad0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ad2:	623b      	str	r3, [r7, #32]
 8007ad4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ad6:	681b      	ldr	r3, [r3, #0]
 8007ad8:	627b      	str	r3, [r7, #36]	; 0x24
 8007ada:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007adc:	685b      	ldr	r3, [r3, #4]
 8007ade:	687a      	ldr	r2, [r7, #4]
 8007ae0:	429a      	cmp	r2, r3
 8007ae2:	d903      	bls.n	8007aec <pvPortMalloc+0xa4>
 8007ae4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	2b00      	cmp	r3, #0
 8007aea:	d1f1      	bne.n	8007ad0 <pvPortMalloc+0x88>
 8007aec:	4b36      	ldr	r3, [pc, #216]	; (8007bc8 <pvPortMalloc+0x180>)
 8007aee:	681b      	ldr	r3, [r3, #0]
 8007af0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007af2:	429a      	cmp	r2, r3
 8007af4:	d050      	beq.n	8007b98 <pvPortMalloc+0x150>
 8007af6:	6a3b      	ldr	r3, [r7, #32]
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	2208      	movs	r2, #8
 8007afc:	4413      	add	r3, r2
 8007afe:	61fb      	str	r3, [r7, #28]
 8007b00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b02:	681a      	ldr	r2, [r3, #0]
 8007b04:	6a3b      	ldr	r3, [r7, #32]
 8007b06:	601a      	str	r2, [r3, #0]
 8007b08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b0a:	685a      	ldr	r2, [r3, #4]
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	1ad2      	subs	r2, r2, r3
 8007b10:	2308      	movs	r3, #8
 8007b12:	005b      	lsls	r3, r3, #1
 8007b14:	429a      	cmp	r2, r3
 8007b16:	d91f      	bls.n	8007b58 <pvPortMalloc+0x110>
 8007b18:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	4413      	add	r3, r2
 8007b1e:	61bb      	str	r3, [r7, #24]
 8007b20:	69bb      	ldr	r3, [r7, #24]
 8007b22:	f003 0307 	and.w	r3, r3, #7
 8007b26:	2b00      	cmp	r3, #0
 8007b28:	d00a      	beq.n	8007b40 <pvPortMalloc+0xf8>
 8007b2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b2e:	f383 8811 	msr	BASEPRI, r3
 8007b32:	f3bf 8f6f 	isb	sy
 8007b36:	f3bf 8f4f 	dsb	sy
 8007b3a:	613b      	str	r3, [r7, #16]
 8007b3c:	bf00      	nop
 8007b3e:	e7fe      	b.n	8007b3e <pvPortMalloc+0xf6>
 8007b40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b42:	685a      	ldr	r2, [r3, #4]
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	1ad2      	subs	r2, r2, r3
 8007b48:	69bb      	ldr	r3, [r7, #24]
 8007b4a:	605a      	str	r2, [r3, #4]
 8007b4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b4e:	687a      	ldr	r2, [r7, #4]
 8007b50:	605a      	str	r2, [r3, #4]
 8007b52:	69b8      	ldr	r0, [r7, #24]
 8007b54:	f000 f908 	bl	8007d68 <prvInsertBlockIntoFreeList>
 8007b58:	4b1d      	ldr	r3, [pc, #116]	; (8007bd0 <pvPortMalloc+0x188>)
 8007b5a:	681a      	ldr	r2, [r3, #0]
 8007b5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b5e:	685b      	ldr	r3, [r3, #4]
 8007b60:	1ad3      	subs	r3, r2, r3
 8007b62:	4a1b      	ldr	r2, [pc, #108]	; (8007bd0 <pvPortMalloc+0x188>)
 8007b64:	6013      	str	r3, [r2, #0]
 8007b66:	4b1a      	ldr	r3, [pc, #104]	; (8007bd0 <pvPortMalloc+0x188>)
 8007b68:	681a      	ldr	r2, [r3, #0]
 8007b6a:	4b1b      	ldr	r3, [pc, #108]	; (8007bd8 <pvPortMalloc+0x190>)
 8007b6c:	681b      	ldr	r3, [r3, #0]
 8007b6e:	429a      	cmp	r2, r3
 8007b70:	d203      	bcs.n	8007b7a <pvPortMalloc+0x132>
 8007b72:	4b17      	ldr	r3, [pc, #92]	; (8007bd0 <pvPortMalloc+0x188>)
 8007b74:	681b      	ldr	r3, [r3, #0]
 8007b76:	4a18      	ldr	r2, [pc, #96]	; (8007bd8 <pvPortMalloc+0x190>)
 8007b78:	6013      	str	r3, [r2, #0]
 8007b7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b7c:	685a      	ldr	r2, [r3, #4]
 8007b7e:	4b13      	ldr	r3, [pc, #76]	; (8007bcc <pvPortMalloc+0x184>)
 8007b80:	681b      	ldr	r3, [r3, #0]
 8007b82:	431a      	orrs	r2, r3
 8007b84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b86:	605a      	str	r2, [r3, #4]
 8007b88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b8a:	2200      	movs	r2, #0
 8007b8c:	601a      	str	r2, [r3, #0]
 8007b8e:	4b13      	ldr	r3, [pc, #76]	; (8007bdc <pvPortMalloc+0x194>)
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	3301      	adds	r3, #1
 8007b94:	4a11      	ldr	r2, [pc, #68]	; (8007bdc <pvPortMalloc+0x194>)
 8007b96:	6013      	str	r3, [r2, #0]
 8007b98:	f7ff f8a0 	bl	8006cdc <xTaskResumeAll>
 8007b9c:	69fb      	ldr	r3, [r7, #28]
 8007b9e:	f003 0307 	and.w	r3, r3, #7
 8007ba2:	2b00      	cmp	r3, #0
 8007ba4:	d00a      	beq.n	8007bbc <pvPortMalloc+0x174>
 8007ba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007baa:	f383 8811 	msr	BASEPRI, r3
 8007bae:	f3bf 8f6f 	isb	sy
 8007bb2:	f3bf 8f4f 	dsb	sy
 8007bb6:	60fb      	str	r3, [r7, #12]
 8007bb8:	bf00      	nop
 8007bba:	e7fe      	b.n	8007bba <pvPortMalloc+0x172>
 8007bbc:	69fb      	ldr	r3, [r7, #28]
 8007bbe:	4618      	mov	r0, r3
 8007bc0:	3728      	adds	r7, #40	; 0x28
 8007bc2:	46bd      	mov	sp, r7
 8007bc4:	bd80      	pop	{r7, pc}
 8007bc6:	bf00      	nop
 8007bc8:	20005400 	.word	0x20005400
 8007bcc:	20005414 	.word	0x20005414
 8007bd0:	20005404 	.word	0x20005404
 8007bd4:	200053f8 	.word	0x200053f8
 8007bd8:	20005408 	.word	0x20005408
 8007bdc:	2000540c 	.word	0x2000540c

08007be0 <vPortFree>:
 8007be0:	b580      	push	{r7, lr}
 8007be2:	b086      	sub	sp, #24
 8007be4:	af00      	add	r7, sp, #0
 8007be6:	6078      	str	r0, [r7, #4]
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	617b      	str	r3, [r7, #20]
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	2b00      	cmp	r3, #0
 8007bf0:	d04d      	beq.n	8007c8e <vPortFree+0xae>
 8007bf2:	2308      	movs	r3, #8
 8007bf4:	425b      	negs	r3, r3
 8007bf6:	697a      	ldr	r2, [r7, #20]
 8007bf8:	4413      	add	r3, r2
 8007bfa:	617b      	str	r3, [r7, #20]
 8007bfc:	697b      	ldr	r3, [r7, #20]
 8007bfe:	613b      	str	r3, [r7, #16]
 8007c00:	693b      	ldr	r3, [r7, #16]
 8007c02:	685a      	ldr	r2, [r3, #4]
 8007c04:	4b24      	ldr	r3, [pc, #144]	; (8007c98 <vPortFree+0xb8>)
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	4013      	ands	r3, r2
 8007c0a:	2b00      	cmp	r3, #0
 8007c0c:	d10a      	bne.n	8007c24 <vPortFree+0x44>
 8007c0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c12:	f383 8811 	msr	BASEPRI, r3
 8007c16:	f3bf 8f6f 	isb	sy
 8007c1a:	f3bf 8f4f 	dsb	sy
 8007c1e:	60fb      	str	r3, [r7, #12]
 8007c20:	bf00      	nop
 8007c22:	e7fe      	b.n	8007c22 <vPortFree+0x42>
 8007c24:	693b      	ldr	r3, [r7, #16]
 8007c26:	681b      	ldr	r3, [r3, #0]
 8007c28:	2b00      	cmp	r3, #0
 8007c2a:	d00a      	beq.n	8007c42 <vPortFree+0x62>
 8007c2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c30:	f383 8811 	msr	BASEPRI, r3
 8007c34:	f3bf 8f6f 	isb	sy
 8007c38:	f3bf 8f4f 	dsb	sy
 8007c3c:	60bb      	str	r3, [r7, #8]
 8007c3e:	bf00      	nop
 8007c40:	e7fe      	b.n	8007c40 <vPortFree+0x60>
 8007c42:	693b      	ldr	r3, [r7, #16]
 8007c44:	685a      	ldr	r2, [r3, #4]
 8007c46:	4b14      	ldr	r3, [pc, #80]	; (8007c98 <vPortFree+0xb8>)
 8007c48:	681b      	ldr	r3, [r3, #0]
 8007c4a:	4013      	ands	r3, r2
 8007c4c:	2b00      	cmp	r3, #0
 8007c4e:	d01e      	beq.n	8007c8e <vPortFree+0xae>
 8007c50:	693b      	ldr	r3, [r7, #16]
 8007c52:	681b      	ldr	r3, [r3, #0]
 8007c54:	2b00      	cmp	r3, #0
 8007c56:	d11a      	bne.n	8007c8e <vPortFree+0xae>
 8007c58:	693b      	ldr	r3, [r7, #16]
 8007c5a:	685a      	ldr	r2, [r3, #4]
 8007c5c:	4b0e      	ldr	r3, [pc, #56]	; (8007c98 <vPortFree+0xb8>)
 8007c5e:	681b      	ldr	r3, [r3, #0]
 8007c60:	43db      	mvns	r3, r3
 8007c62:	401a      	ands	r2, r3
 8007c64:	693b      	ldr	r3, [r7, #16]
 8007c66:	605a      	str	r2, [r3, #4]
 8007c68:	f7ff f82a 	bl	8006cc0 <vTaskSuspendAll>
 8007c6c:	693b      	ldr	r3, [r7, #16]
 8007c6e:	685a      	ldr	r2, [r3, #4]
 8007c70:	4b0a      	ldr	r3, [pc, #40]	; (8007c9c <vPortFree+0xbc>)
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	4413      	add	r3, r2
 8007c76:	4a09      	ldr	r2, [pc, #36]	; (8007c9c <vPortFree+0xbc>)
 8007c78:	6013      	str	r3, [r2, #0]
 8007c7a:	6938      	ldr	r0, [r7, #16]
 8007c7c:	f000 f874 	bl	8007d68 <prvInsertBlockIntoFreeList>
 8007c80:	4b07      	ldr	r3, [pc, #28]	; (8007ca0 <vPortFree+0xc0>)
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	3301      	adds	r3, #1
 8007c86:	4a06      	ldr	r2, [pc, #24]	; (8007ca0 <vPortFree+0xc0>)
 8007c88:	6013      	str	r3, [r2, #0]
 8007c8a:	f7ff f827 	bl	8006cdc <xTaskResumeAll>
 8007c8e:	bf00      	nop
 8007c90:	3718      	adds	r7, #24
 8007c92:	46bd      	mov	sp, r7
 8007c94:	bd80      	pop	{r7, pc}
 8007c96:	bf00      	nop
 8007c98:	20005414 	.word	0x20005414
 8007c9c:	20005404 	.word	0x20005404
 8007ca0:	20005410 	.word	0x20005410

08007ca4 <prvHeapInit>:
 8007ca4:	b480      	push	{r7}
 8007ca6:	b085      	sub	sp, #20
 8007ca8:	af00      	add	r7, sp, #0
 8007caa:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 8007cae:	60bb      	str	r3, [r7, #8]
 8007cb0:	4b27      	ldr	r3, [pc, #156]	; (8007d50 <prvHeapInit+0xac>)
 8007cb2:	60fb      	str	r3, [r7, #12]
 8007cb4:	68fb      	ldr	r3, [r7, #12]
 8007cb6:	f003 0307 	and.w	r3, r3, #7
 8007cba:	2b00      	cmp	r3, #0
 8007cbc:	d00c      	beq.n	8007cd8 <prvHeapInit+0x34>
 8007cbe:	68fb      	ldr	r3, [r7, #12]
 8007cc0:	3307      	adds	r3, #7
 8007cc2:	60fb      	str	r3, [r7, #12]
 8007cc4:	68fb      	ldr	r3, [r7, #12]
 8007cc6:	f023 0307 	bic.w	r3, r3, #7
 8007cca:	60fb      	str	r3, [r7, #12]
 8007ccc:	68ba      	ldr	r2, [r7, #8]
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	1ad3      	subs	r3, r2, r3
 8007cd2:	4a1f      	ldr	r2, [pc, #124]	; (8007d50 <prvHeapInit+0xac>)
 8007cd4:	4413      	add	r3, r2
 8007cd6:	60bb      	str	r3, [r7, #8]
 8007cd8:	68fb      	ldr	r3, [r7, #12]
 8007cda:	607b      	str	r3, [r7, #4]
 8007cdc:	4a1d      	ldr	r2, [pc, #116]	; (8007d54 <prvHeapInit+0xb0>)
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	6013      	str	r3, [r2, #0]
 8007ce2:	4b1c      	ldr	r3, [pc, #112]	; (8007d54 <prvHeapInit+0xb0>)
 8007ce4:	2200      	movs	r2, #0
 8007ce6:	605a      	str	r2, [r3, #4]
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	68ba      	ldr	r2, [r7, #8]
 8007cec:	4413      	add	r3, r2
 8007cee:	60fb      	str	r3, [r7, #12]
 8007cf0:	2208      	movs	r2, #8
 8007cf2:	68fb      	ldr	r3, [r7, #12]
 8007cf4:	1a9b      	subs	r3, r3, r2
 8007cf6:	60fb      	str	r3, [r7, #12]
 8007cf8:	68fb      	ldr	r3, [r7, #12]
 8007cfa:	f023 0307 	bic.w	r3, r3, #7
 8007cfe:	60fb      	str	r3, [r7, #12]
 8007d00:	68fb      	ldr	r3, [r7, #12]
 8007d02:	4a15      	ldr	r2, [pc, #84]	; (8007d58 <prvHeapInit+0xb4>)
 8007d04:	6013      	str	r3, [r2, #0]
 8007d06:	4b14      	ldr	r3, [pc, #80]	; (8007d58 <prvHeapInit+0xb4>)
 8007d08:	681b      	ldr	r3, [r3, #0]
 8007d0a:	2200      	movs	r2, #0
 8007d0c:	605a      	str	r2, [r3, #4]
 8007d0e:	4b12      	ldr	r3, [pc, #72]	; (8007d58 <prvHeapInit+0xb4>)
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	2200      	movs	r2, #0
 8007d14:	601a      	str	r2, [r3, #0]
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	603b      	str	r3, [r7, #0]
 8007d1a:	683b      	ldr	r3, [r7, #0]
 8007d1c:	68fa      	ldr	r2, [r7, #12]
 8007d1e:	1ad2      	subs	r2, r2, r3
 8007d20:	683b      	ldr	r3, [r7, #0]
 8007d22:	605a      	str	r2, [r3, #4]
 8007d24:	4b0c      	ldr	r3, [pc, #48]	; (8007d58 <prvHeapInit+0xb4>)
 8007d26:	681a      	ldr	r2, [r3, #0]
 8007d28:	683b      	ldr	r3, [r7, #0]
 8007d2a:	601a      	str	r2, [r3, #0]
 8007d2c:	683b      	ldr	r3, [r7, #0]
 8007d2e:	685b      	ldr	r3, [r3, #4]
 8007d30:	4a0a      	ldr	r2, [pc, #40]	; (8007d5c <prvHeapInit+0xb8>)
 8007d32:	6013      	str	r3, [r2, #0]
 8007d34:	683b      	ldr	r3, [r7, #0]
 8007d36:	685b      	ldr	r3, [r3, #4]
 8007d38:	4a09      	ldr	r2, [pc, #36]	; (8007d60 <prvHeapInit+0xbc>)
 8007d3a:	6013      	str	r3, [r2, #0]
 8007d3c:	4b09      	ldr	r3, [pc, #36]	; (8007d64 <prvHeapInit+0xc0>)
 8007d3e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8007d42:	601a      	str	r2, [r3, #0]
 8007d44:	bf00      	nop
 8007d46:	3714      	adds	r7, #20
 8007d48:	46bd      	mov	sp, r7
 8007d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d4e:	4770      	bx	lr
 8007d50:	200017f8 	.word	0x200017f8
 8007d54:	200053f8 	.word	0x200053f8
 8007d58:	20005400 	.word	0x20005400
 8007d5c:	20005408 	.word	0x20005408
 8007d60:	20005404 	.word	0x20005404
 8007d64:	20005414 	.word	0x20005414

08007d68 <prvInsertBlockIntoFreeList>:
 8007d68:	b480      	push	{r7}
 8007d6a:	b085      	sub	sp, #20
 8007d6c:	af00      	add	r7, sp, #0
 8007d6e:	6078      	str	r0, [r7, #4]
 8007d70:	4b28      	ldr	r3, [pc, #160]	; (8007e14 <prvInsertBlockIntoFreeList+0xac>)
 8007d72:	60fb      	str	r3, [r7, #12]
 8007d74:	e002      	b.n	8007d7c <prvInsertBlockIntoFreeList+0x14>
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	681b      	ldr	r3, [r3, #0]
 8007d7a:	60fb      	str	r3, [r7, #12]
 8007d7c:	68fb      	ldr	r3, [r7, #12]
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	687a      	ldr	r2, [r7, #4]
 8007d82:	429a      	cmp	r2, r3
 8007d84:	d8f7      	bhi.n	8007d76 <prvInsertBlockIntoFreeList+0xe>
 8007d86:	68fb      	ldr	r3, [r7, #12]
 8007d88:	60bb      	str	r3, [r7, #8]
 8007d8a:	68fb      	ldr	r3, [r7, #12]
 8007d8c:	685b      	ldr	r3, [r3, #4]
 8007d8e:	68ba      	ldr	r2, [r7, #8]
 8007d90:	4413      	add	r3, r2
 8007d92:	687a      	ldr	r2, [r7, #4]
 8007d94:	429a      	cmp	r2, r3
 8007d96:	d108      	bne.n	8007daa <prvInsertBlockIntoFreeList+0x42>
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	685a      	ldr	r2, [r3, #4]
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	685b      	ldr	r3, [r3, #4]
 8007da0:	441a      	add	r2, r3
 8007da2:	68fb      	ldr	r3, [r7, #12]
 8007da4:	605a      	str	r2, [r3, #4]
 8007da6:	68fb      	ldr	r3, [r7, #12]
 8007da8:	607b      	str	r3, [r7, #4]
 8007daa:	687b      	ldr	r3, [r7, #4]
 8007dac:	60bb      	str	r3, [r7, #8]
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	685b      	ldr	r3, [r3, #4]
 8007db2:	68ba      	ldr	r2, [r7, #8]
 8007db4:	441a      	add	r2, r3
 8007db6:	68fb      	ldr	r3, [r7, #12]
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	429a      	cmp	r2, r3
 8007dbc:	d118      	bne.n	8007df0 <prvInsertBlockIntoFreeList+0x88>
 8007dbe:	68fb      	ldr	r3, [r7, #12]
 8007dc0:	681a      	ldr	r2, [r3, #0]
 8007dc2:	4b15      	ldr	r3, [pc, #84]	; (8007e18 <prvInsertBlockIntoFreeList+0xb0>)
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	429a      	cmp	r2, r3
 8007dc8:	d00d      	beq.n	8007de6 <prvInsertBlockIntoFreeList+0x7e>
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	685a      	ldr	r2, [r3, #4]
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	681b      	ldr	r3, [r3, #0]
 8007dd2:	685b      	ldr	r3, [r3, #4]
 8007dd4:	441a      	add	r2, r3
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	605a      	str	r2, [r3, #4]
 8007dda:	68fb      	ldr	r3, [r7, #12]
 8007ddc:	681b      	ldr	r3, [r3, #0]
 8007dde:	681a      	ldr	r2, [r3, #0]
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	601a      	str	r2, [r3, #0]
 8007de4:	e008      	b.n	8007df8 <prvInsertBlockIntoFreeList+0x90>
 8007de6:	4b0c      	ldr	r3, [pc, #48]	; (8007e18 <prvInsertBlockIntoFreeList+0xb0>)
 8007de8:	681a      	ldr	r2, [r3, #0]
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	601a      	str	r2, [r3, #0]
 8007dee:	e003      	b.n	8007df8 <prvInsertBlockIntoFreeList+0x90>
 8007df0:	68fb      	ldr	r3, [r7, #12]
 8007df2:	681a      	ldr	r2, [r3, #0]
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	601a      	str	r2, [r3, #0]
 8007df8:	68fa      	ldr	r2, [r7, #12]
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	429a      	cmp	r2, r3
 8007dfe:	d002      	beq.n	8007e06 <prvInsertBlockIntoFreeList+0x9e>
 8007e00:	68fb      	ldr	r3, [r7, #12]
 8007e02:	687a      	ldr	r2, [r7, #4]
 8007e04:	601a      	str	r2, [r3, #0]
 8007e06:	bf00      	nop
 8007e08:	3714      	adds	r7, #20
 8007e0a:	46bd      	mov	sp, r7
 8007e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e10:	4770      	bx	lr
 8007e12:	bf00      	nop
 8007e14:	200053f8 	.word	0x200053f8
 8007e18:	20005400 	.word	0x20005400

08007e1c <std>:
 8007e1c:	2300      	movs	r3, #0
 8007e1e:	b510      	push	{r4, lr}
 8007e20:	4604      	mov	r4, r0
 8007e22:	e9c0 3300 	strd	r3, r3, [r0]
 8007e26:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007e2a:	6083      	str	r3, [r0, #8]
 8007e2c:	8181      	strh	r1, [r0, #12]
 8007e2e:	6643      	str	r3, [r0, #100]	; 0x64
 8007e30:	81c2      	strh	r2, [r0, #14]
 8007e32:	6183      	str	r3, [r0, #24]
 8007e34:	4619      	mov	r1, r3
 8007e36:	2208      	movs	r2, #8
 8007e38:	305c      	adds	r0, #92	; 0x5c
 8007e3a:	f000 fa09 	bl	8008250 <memset>
 8007e3e:	4b0d      	ldr	r3, [pc, #52]	; (8007e74 <std+0x58>)
 8007e40:	6263      	str	r3, [r4, #36]	; 0x24
 8007e42:	4b0d      	ldr	r3, [pc, #52]	; (8007e78 <std+0x5c>)
 8007e44:	62a3      	str	r3, [r4, #40]	; 0x28
 8007e46:	4b0d      	ldr	r3, [pc, #52]	; (8007e7c <std+0x60>)
 8007e48:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007e4a:	4b0d      	ldr	r3, [pc, #52]	; (8007e80 <std+0x64>)
 8007e4c:	6323      	str	r3, [r4, #48]	; 0x30
 8007e4e:	4b0d      	ldr	r3, [pc, #52]	; (8007e84 <std+0x68>)
 8007e50:	6224      	str	r4, [r4, #32]
 8007e52:	429c      	cmp	r4, r3
 8007e54:	d006      	beq.n	8007e64 <std+0x48>
 8007e56:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8007e5a:	4294      	cmp	r4, r2
 8007e5c:	d002      	beq.n	8007e64 <std+0x48>
 8007e5e:	33d0      	adds	r3, #208	; 0xd0
 8007e60:	429c      	cmp	r4, r3
 8007e62:	d105      	bne.n	8007e70 <std+0x54>
 8007e64:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007e68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007e6c:	f000 babe 	b.w	80083ec <__retarget_lock_init_recursive>
 8007e70:	bd10      	pop	{r4, pc}
 8007e72:	bf00      	nop
 8007e74:	080080a1 	.word	0x080080a1
 8007e78:	080080c3 	.word	0x080080c3
 8007e7c:	080080fb 	.word	0x080080fb
 8007e80:	0800811f 	.word	0x0800811f
 8007e84:	20005418 	.word	0x20005418

08007e88 <stdio_exit_handler>:
 8007e88:	4a02      	ldr	r2, [pc, #8]	; (8007e94 <stdio_exit_handler+0xc>)
 8007e8a:	4903      	ldr	r1, [pc, #12]	; (8007e98 <stdio_exit_handler+0x10>)
 8007e8c:	4803      	ldr	r0, [pc, #12]	; (8007e9c <stdio_exit_handler+0x14>)
 8007e8e:	f000 b869 	b.w	8007f64 <_fwalk_sglue>
 8007e92:	bf00      	nop
 8007e94:	200000a0 	.word	0x200000a0
 8007e98:	080092bd 	.word	0x080092bd
 8007e9c:	200000ac 	.word	0x200000ac

08007ea0 <cleanup_stdio>:
 8007ea0:	6841      	ldr	r1, [r0, #4]
 8007ea2:	4b0c      	ldr	r3, [pc, #48]	; (8007ed4 <cleanup_stdio+0x34>)
 8007ea4:	4299      	cmp	r1, r3
 8007ea6:	b510      	push	{r4, lr}
 8007ea8:	4604      	mov	r4, r0
 8007eaa:	d001      	beq.n	8007eb0 <cleanup_stdio+0x10>
 8007eac:	f001 fa06 	bl	80092bc <_fflush_r>
 8007eb0:	68a1      	ldr	r1, [r4, #8]
 8007eb2:	4b09      	ldr	r3, [pc, #36]	; (8007ed8 <cleanup_stdio+0x38>)
 8007eb4:	4299      	cmp	r1, r3
 8007eb6:	d002      	beq.n	8007ebe <cleanup_stdio+0x1e>
 8007eb8:	4620      	mov	r0, r4
 8007eba:	f001 f9ff 	bl	80092bc <_fflush_r>
 8007ebe:	68e1      	ldr	r1, [r4, #12]
 8007ec0:	4b06      	ldr	r3, [pc, #24]	; (8007edc <cleanup_stdio+0x3c>)
 8007ec2:	4299      	cmp	r1, r3
 8007ec4:	d004      	beq.n	8007ed0 <cleanup_stdio+0x30>
 8007ec6:	4620      	mov	r0, r4
 8007ec8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ecc:	f001 b9f6 	b.w	80092bc <_fflush_r>
 8007ed0:	bd10      	pop	{r4, pc}
 8007ed2:	bf00      	nop
 8007ed4:	20005418 	.word	0x20005418
 8007ed8:	20005480 	.word	0x20005480
 8007edc:	200054e8 	.word	0x200054e8

08007ee0 <global_stdio_init.part.0>:
 8007ee0:	b510      	push	{r4, lr}
 8007ee2:	4b0b      	ldr	r3, [pc, #44]	; (8007f10 <global_stdio_init.part.0+0x30>)
 8007ee4:	4c0b      	ldr	r4, [pc, #44]	; (8007f14 <global_stdio_init.part.0+0x34>)
 8007ee6:	4a0c      	ldr	r2, [pc, #48]	; (8007f18 <global_stdio_init.part.0+0x38>)
 8007ee8:	601a      	str	r2, [r3, #0]
 8007eea:	4620      	mov	r0, r4
 8007eec:	2200      	movs	r2, #0
 8007eee:	2104      	movs	r1, #4
 8007ef0:	f7ff ff94 	bl	8007e1c <std>
 8007ef4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8007ef8:	2201      	movs	r2, #1
 8007efa:	2109      	movs	r1, #9
 8007efc:	f7ff ff8e 	bl	8007e1c <std>
 8007f00:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007f04:	2202      	movs	r2, #2
 8007f06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007f0a:	2112      	movs	r1, #18
 8007f0c:	f7ff bf86 	b.w	8007e1c <std>
 8007f10:	20005550 	.word	0x20005550
 8007f14:	20005418 	.word	0x20005418
 8007f18:	08007e89 	.word	0x08007e89

08007f1c <__sfp_lock_acquire>:
 8007f1c:	4801      	ldr	r0, [pc, #4]	; (8007f24 <__sfp_lock_acquire+0x8>)
 8007f1e:	f000 ba66 	b.w	80083ee <__retarget_lock_acquire_recursive>
 8007f22:	bf00      	nop
 8007f24:	20005559 	.word	0x20005559

08007f28 <__sfp_lock_release>:
 8007f28:	4801      	ldr	r0, [pc, #4]	; (8007f30 <__sfp_lock_release+0x8>)
 8007f2a:	f000 ba61 	b.w	80083f0 <__retarget_lock_release_recursive>
 8007f2e:	bf00      	nop
 8007f30:	20005559 	.word	0x20005559

08007f34 <__sinit>:
 8007f34:	b510      	push	{r4, lr}
 8007f36:	4604      	mov	r4, r0
 8007f38:	f7ff fff0 	bl	8007f1c <__sfp_lock_acquire>
 8007f3c:	6a23      	ldr	r3, [r4, #32]
 8007f3e:	b11b      	cbz	r3, 8007f48 <__sinit+0x14>
 8007f40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007f44:	f7ff bff0 	b.w	8007f28 <__sfp_lock_release>
 8007f48:	4b04      	ldr	r3, [pc, #16]	; (8007f5c <__sinit+0x28>)
 8007f4a:	6223      	str	r3, [r4, #32]
 8007f4c:	4b04      	ldr	r3, [pc, #16]	; (8007f60 <__sinit+0x2c>)
 8007f4e:	681b      	ldr	r3, [r3, #0]
 8007f50:	2b00      	cmp	r3, #0
 8007f52:	d1f5      	bne.n	8007f40 <__sinit+0xc>
 8007f54:	f7ff ffc4 	bl	8007ee0 <global_stdio_init.part.0>
 8007f58:	e7f2      	b.n	8007f40 <__sinit+0xc>
 8007f5a:	bf00      	nop
 8007f5c:	08007ea1 	.word	0x08007ea1
 8007f60:	20005550 	.word	0x20005550

08007f64 <_fwalk_sglue>:
 8007f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f68:	4607      	mov	r7, r0
 8007f6a:	4688      	mov	r8, r1
 8007f6c:	4614      	mov	r4, r2
 8007f6e:	2600      	movs	r6, #0
 8007f70:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007f74:	f1b9 0901 	subs.w	r9, r9, #1
 8007f78:	d505      	bpl.n	8007f86 <_fwalk_sglue+0x22>
 8007f7a:	6824      	ldr	r4, [r4, #0]
 8007f7c:	2c00      	cmp	r4, #0
 8007f7e:	d1f7      	bne.n	8007f70 <_fwalk_sglue+0xc>
 8007f80:	4630      	mov	r0, r6
 8007f82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007f86:	89ab      	ldrh	r3, [r5, #12]
 8007f88:	2b01      	cmp	r3, #1
 8007f8a:	d907      	bls.n	8007f9c <_fwalk_sglue+0x38>
 8007f8c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007f90:	3301      	adds	r3, #1
 8007f92:	d003      	beq.n	8007f9c <_fwalk_sglue+0x38>
 8007f94:	4629      	mov	r1, r5
 8007f96:	4638      	mov	r0, r7
 8007f98:	47c0      	blx	r8
 8007f9a:	4306      	orrs	r6, r0
 8007f9c:	3568      	adds	r5, #104	; 0x68
 8007f9e:	e7e9      	b.n	8007f74 <_fwalk_sglue+0x10>

08007fa0 <iprintf>:
 8007fa0:	b40f      	push	{r0, r1, r2, r3}
 8007fa2:	b507      	push	{r0, r1, r2, lr}
 8007fa4:	4906      	ldr	r1, [pc, #24]	; (8007fc0 <iprintf+0x20>)
 8007fa6:	ab04      	add	r3, sp, #16
 8007fa8:	6808      	ldr	r0, [r1, #0]
 8007faa:	f853 2b04 	ldr.w	r2, [r3], #4
 8007fae:	6881      	ldr	r1, [r0, #8]
 8007fb0:	9301      	str	r3, [sp, #4]
 8007fb2:	f000 fb4f 	bl	8008654 <_vfiprintf_r>
 8007fb6:	b003      	add	sp, #12
 8007fb8:	f85d eb04 	ldr.w	lr, [sp], #4
 8007fbc:	b004      	add	sp, #16
 8007fbe:	4770      	bx	lr
 8007fc0:	200000f8 	.word	0x200000f8

08007fc4 <_puts_r>:
 8007fc4:	6a03      	ldr	r3, [r0, #32]
 8007fc6:	b570      	push	{r4, r5, r6, lr}
 8007fc8:	6884      	ldr	r4, [r0, #8]
 8007fca:	4605      	mov	r5, r0
 8007fcc:	460e      	mov	r6, r1
 8007fce:	b90b      	cbnz	r3, 8007fd4 <_puts_r+0x10>
 8007fd0:	f7ff ffb0 	bl	8007f34 <__sinit>
 8007fd4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007fd6:	07db      	lsls	r3, r3, #31
 8007fd8:	d405      	bmi.n	8007fe6 <_puts_r+0x22>
 8007fda:	89a3      	ldrh	r3, [r4, #12]
 8007fdc:	0598      	lsls	r0, r3, #22
 8007fde:	d402      	bmi.n	8007fe6 <_puts_r+0x22>
 8007fe0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007fe2:	f000 fa04 	bl	80083ee <__retarget_lock_acquire_recursive>
 8007fe6:	89a3      	ldrh	r3, [r4, #12]
 8007fe8:	0719      	lsls	r1, r3, #28
 8007fea:	d513      	bpl.n	8008014 <_puts_r+0x50>
 8007fec:	6923      	ldr	r3, [r4, #16]
 8007fee:	b18b      	cbz	r3, 8008014 <_puts_r+0x50>
 8007ff0:	3e01      	subs	r6, #1
 8007ff2:	68a3      	ldr	r3, [r4, #8]
 8007ff4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8007ff8:	3b01      	subs	r3, #1
 8007ffa:	60a3      	str	r3, [r4, #8]
 8007ffc:	b9e9      	cbnz	r1, 800803a <_puts_r+0x76>
 8007ffe:	2b00      	cmp	r3, #0
 8008000:	da2e      	bge.n	8008060 <_puts_r+0x9c>
 8008002:	4622      	mov	r2, r4
 8008004:	210a      	movs	r1, #10
 8008006:	4628      	mov	r0, r5
 8008008:	f000 f88d 	bl	8008126 <__swbuf_r>
 800800c:	3001      	adds	r0, #1
 800800e:	d007      	beq.n	8008020 <_puts_r+0x5c>
 8008010:	250a      	movs	r5, #10
 8008012:	e007      	b.n	8008024 <_puts_r+0x60>
 8008014:	4621      	mov	r1, r4
 8008016:	4628      	mov	r0, r5
 8008018:	f000 f8c2 	bl	80081a0 <__swsetup_r>
 800801c:	2800      	cmp	r0, #0
 800801e:	d0e7      	beq.n	8007ff0 <_puts_r+0x2c>
 8008020:	f04f 35ff 	mov.w	r5, #4294967295
 8008024:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008026:	07da      	lsls	r2, r3, #31
 8008028:	d405      	bmi.n	8008036 <_puts_r+0x72>
 800802a:	89a3      	ldrh	r3, [r4, #12]
 800802c:	059b      	lsls	r3, r3, #22
 800802e:	d402      	bmi.n	8008036 <_puts_r+0x72>
 8008030:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008032:	f000 f9dd 	bl	80083f0 <__retarget_lock_release_recursive>
 8008036:	4628      	mov	r0, r5
 8008038:	bd70      	pop	{r4, r5, r6, pc}
 800803a:	2b00      	cmp	r3, #0
 800803c:	da04      	bge.n	8008048 <_puts_r+0x84>
 800803e:	69a2      	ldr	r2, [r4, #24]
 8008040:	429a      	cmp	r2, r3
 8008042:	dc06      	bgt.n	8008052 <_puts_r+0x8e>
 8008044:	290a      	cmp	r1, #10
 8008046:	d004      	beq.n	8008052 <_puts_r+0x8e>
 8008048:	6823      	ldr	r3, [r4, #0]
 800804a:	1c5a      	adds	r2, r3, #1
 800804c:	6022      	str	r2, [r4, #0]
 800804e:	7019      	strb	r1, [r3, #0]
 8008050:	e7cf      	b.n	8007ff2 <_puts_r+0x2e>
 8008052:	4622      	mov	r2, r4
 8008054:	4628      	mov	r0, r5
 8008056:	f000 f866 	bl	8008126 <__swbuf_r>
 800805a:	3001      	adds	r0, #1
 800805c:	d1c9      	bne.n	8007ff2 <_puts_r+0x2e>
 800805e:	e7df      	b.n	8008020 <_puts_r+0x5c>
 8008060:	6823      	ldr	r3, [r4, #0]
 8008062:	250a      	movs	r5, #10
 8008064:	1c5a      	adds	r2, r3, #1
 8008066:	6022      	str	r2, [r4, #0]
 8008068:	701d      	strb	r5, [r3, #0]
 800806a:	e7db      	b.n	8008024 <_puts_r+0x60>

0800806c <puts>:
 800806c:	4b02      	ldr	r3, [pc, #8]	; (8008078 <puts+0xc>)
 800806e:	4601      	mov	r1, r0
 8008070:	6818      	ldr	r0, [r3, #0]
 8008072:	f7ff bfa7 	b.w	8007fc4 <_puts_r>
 8008076:	bf00      	nop
 8008078:	200000f8 	.word	0x200000f8

0800807c <iscanf>:
 800807c:	b40f      	push	{r0, r1, r2, r3}
 800807e:	b507      	push	{r0, r1, r2, lr}
 8008080:	4906      	ldr	r1, [pc, #24]	; (800809c <iscanf+0x20>)
 8008082:	ab04      	add	r3, sp, #16
 8008084:	6808      	ldr	r0, [r1, #0]
 8008086:	f853 2b04 	ldr.w	r2, [r3], #4
 800808a:	6841      	ldr	r1, [r0, #4]
 800808c:	9301      	str	r3, [sp, #4]
 800808e:	f000 ff2d 	bl	8008eec <_vfiscanf_r>
 8008092:	b003      	add	sp, #12
 8008094:	f85d eb04 	ldr.w	lr, [sp], #4
 8008098:	b004      	add	sp, #16
 800809a:	4770      	bx	lr
 800809c:	200000f8 	.word	0x200000f8

080080a0 <__sread>:
 80080a0:	b510      	push	{r4, lr}
 80080a2:	460c      	mov	r4, r1
 80080a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80080a8:	f000 f952 	bl	8008350 <_read_r>
 80080ac:	2800      	cmp	r0, #0
 80080ae:	bfab      	itete	ge
 80080b0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80080b2:	89a3      	ldrhlt	r3, [r4, #12]
 80080b4:	181b      	addge	r3, r3, r0
 80080b6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80080ba:	bfac      	ite	ge
 80080bc:	6563      	strge	r3, [r4, #84]	; 0x54
 80080be:	81a3      	strhlt	r3, [r4, #12]
 80080c0:	bd10      	pop	{r4, pc}

080080c2 <__swrite>:
 80080c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080c6:	461f      	mov	r7, r3
 80080c8:	898b      	ldrh	r3, [r1, #12]
 80080ca:	05db      	lsls	r3, r3, #23
 80080cc:	4605      	mov	r5, r0
 80080ce:	460c      	mov	r4, r1
 80080d0:	4616      	mov	r6, r2
 80080d2:	d505      	bpl.n	80080e0 <__swrite+0x1e>
 80080d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80080d8:	2302      	movs	r3, #2
 80080da:	2200      	movs	r2, #0
 80080dc:	f000 f926 	bl	800832c <_lseek_r>
 80080e0:	89a3      	ldrh	r3, [r4, #12]
 80080e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80080e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80080ea:	81a3      	strh	r3, [r4, #12]
 80080ec:	4632      	mov	r2, r6
 80080ee:	463b      	mov	r3, r7
 80080f0:	4628      	mov	r0, r5
 80080f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80080f6:	f000 b93d 	b.w	8008374 <_write_r>

080080fa <__sseek>:
 80080fa:	b510      	push	{r4, lr}
 80080fc:	460c      	mov	r4, r1
 80080fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008102:	f000 f913 	bl	800832c <_lseek_r>
 8008106:	1c43      	adds	r3, r0, #1
 8008108:	89a3      	ldrh	r3, [r4, #12]
 800810a:	bf15      	itete	ne
 800810c:	6560      	strne	r0, [r4, #84]	; 0x54
 800810e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8008112:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8008116:	81a3      	strheq	r3, [r4, #12]
 8008118:	bf18      	it	ne
 800811a:	81a3      	strhne	r3, [r4, #12]
 800811c:	bd10      	pop	{r4, pc}

0800811e <__sclose>:
 800811e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008122:	f000 b89d 	b.w	8008260 <_close_r>

08008126 <__swbuf_r>:
 8008126:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008128:	460e      	mov	r6, r1
 800812a:	4614      	mov	r4, r2
 800812c:	4605      	mov	r5, r0
 800812e:	b118      	cbz	r0, 8008138 <__swbuf_r+0x12>
 8008130:	6a03      	ldr	r3, [r0, #32]
 8008132:	b90b      	cbnz	r3, 8008138 <__swbuf_r+0x12>
 8008134:	f7ff fefe 	bl	8007f34 <__sinit>
 8008138:	69a3      	ldr	r3, [r4, #24]
 800813a:	60a3      	str	r3, [r4, #8]
 800813c:	89a3      	ldrh	r3, [r4, #12]
 800813e:	071a      	lsls	r2, r3, #28
 8008140:	d525      	bpl.n	800818e <__swbuf_r+0x68>
 8008142:	6923      	ldr	r3, [r4, #16]
 8008144:	b31b      	cbz	r3, 800818e <__swbuf_r+0x68>
 8008146:	6823      	ldr	r3, [r4, #0]
 8008148:	6922      	ldr	r2, [r4, #16]
 800814a:	1a98      	subs	r0, r3, r2
 800814c:	6963      	ldr	r3, [r4, #20]
 800814e:	b2f6      	uxtb	r6, r6
 8008150:	4283      	cmp	r3, r0
 8008152:	4637      	mov	r7, r6
 8008154:	dc04      	bgt.n	8008160 <__swbuf_r+0x3a>
 8008156:	4621      	mov	r1, r4
 8008158:	4628      	mov	r0, r5
 800815a:	f001 f8af 	bl	80092bc <_fflush_r>
 800815e:	b9e0      	cbnz	r0, 800819a <__swbuf_r+0x74>
 8008160:	68a3      	ldr	r3, [r4, #8]
 8008162:	3b01      	subs	r3, #1
 8008164:	60a3      	str	r3, [r4, #8]
 8008166:	6823      	ldr	r3, [r4, #0]
 8008168:	1c5a      	adds	r2, r3, #1
 800816a:	6022      	str	r2, [r4, #0]
 800816c:	701e      	strb	r6, [r3, #0]
 800816e:	6962      	ldr	r2, [r4, #20]
 8008170:	1c43      	adds	r3, r0, #1
 8008172:	429a      	cmp	r2, r3
 8008174:	d004      	beq.n	8008180 <__swbuf_r+0x5a>
 8008176:	89a3      	ldrh	r3, [r4, #12]
 8008178:	07db      	lsls	r3, r3, #31
 800817a:	d506      	bpl.n	800818a <__swbuf_r+0x64>
 800817c:	2e0a      	cmp	r6, #10
 800817e:	d104      	bne.n	800818a <__swbuf_r+0x64>
 8008180:	4621      	mov	r1, r4
 8008182:	4628      	mov	r0, r5
 8008184:	f001 f89a 	bl	80092bc <_fflush_r>
 8008188:	b938      	cbnz	r0, 800819a <__swbuf_r+0x74>
 800818a:	4638      	mov	r0, r7
 800818c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800818e:	4621      	mov	r1, r4
 8008190:	4628      	mov	r0, r5
 8008192:	f000 f805 	bl	80081a0 <__swsetup_r>
 8008196:	2800      	cmp	r0, #0
 8008198:	d0d5      	beq.n	8008146 <__swbuf_r+0x20>
 800819a:	f04f 37ff 	mov.w	r7, #4294967295
 800819e:	e7f4      	b.n	800818a <__swbuf_r+0x64>

080081a0 <__swsetup_r>:
 80081a0:	b538      	push	{r3, r4, r5, lr}
 80081a2:	4b2a      	ldr	r3, [pc, #168]	; (800824c <__swsetup_r+0xac>)
 80081a4:	4605      	mov	r5, r0
 80081a6:	6818      	ldr	r0, [r3, #0]
 80081a8:	460c      	mov	r4, r1
 80081aa:	b118      	cbz	r0, 80081b4 <__swsetup_r+0x14>
 80081ac:	6a03      	ldr	r3, [r0, #32]
 80081ae:	b90b      	cbnz	r3, 80081b4 <__swsetup_r+0x14>
 80081b0:	f7ff fec0 	bl	8007f34 <__sinit>
 80081b4:	89a3      	ldrh	r3, [r4, #12]
 80081b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80081ba:	0718      	lsls	r0, r3, #28
 80081bc:	d422      	bmi.n	8008204 <__swsetup_r+0x64>
 80081be:	06d9      	lsls	r1, r3, #27
 80081c0:	d407      	bmi.n	80081d2 <__swsetup_r+0x32>
 80081c2:	2309      	movs	r3, #9
 80081c4:	602b      	str	r3, [r5, #0]
 80081c6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80081ca:	81a3      	strh	r3, [r4, #12]
 80081cc:	f04f 30ff 	mov.w	r0, #4294967295
 80081d0:	e034      	b.n	800823c <__swsetup_r+0x9c>
 80081d2:	0758      	lsls	r0, r3, #29
 80081d4:	d512      	bpl.n	80081fc <__swsetup_r+0x5c>
 80081d6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80081d8:	b141      	cbz	r1, 80081ec <__swsetup_r+0x4c>
 80081da:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80081de:	4299      	cmp	r1, r3
 80081e0:	d002      	beq.n	80081e8 <__swsetup_r+0x48>
 80081e2:	4628      	mov	r0, r5
 80081e4:	f000 f914 	bl	8008410 <_free_r>
 80081e8:	2300      	movs	r3, #0
 80081ea:	6363      	str	r3, [r4, #52]	; 0x34
 80081ec:	89a3      	ldrh	r3, [r4, #12]
 80081ee:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80081f2:	81a3      	strh	r3, [r4, #12]
 80081f4:	2300      	movs	r3, #0
 80081f6:	6063      	str	r3, [r4, #4]
 80081f8:	6923      	ldr	r3, [r4, #16]
 80081fa:	6023      	str	r3, [r4, #0]
 80081fc:	89a3      	ldrh	r3, [r4, #12]
 80081fe:	f043 0308 	orr.w	r3, r3, #8
 8008202:	81a3      	strh	r3, [r4, #12]
 8008204:	6923      	ldr	r3, [r4, #16]
 8008206:	b94b      	cbnz	r3, 800821c <__swsetup_r+0x7c>
 8008208:	89a3      	ldrh	r3, [r4, #12]
 800820a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800820e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008212:	d003      	beq.n	800821c <__swsetup_r+0x7c>
 8008214:	4621      	mov	r1, r4
 8008216:	4628      	mov	r0, r5
 8008218:	f001 f89e 	bl	8009358 <__smakebuf_r>
 800821c:	89a0      	ldrh	r0, [r4, #12]
 800821e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8008222:	f010 0301 	ands.w	r3, r0, #1
 8008226:	d00a      	beq.n	800823e <__swsetup_r+0x9e>
 8008228:	2300      	movs	r3, #0
 800822a:	60a3      	str	r3, [r4, #8]
 800822c:	6963      	ldr	r3, [r4, #20]
 800822e:	425b      	negs	r3, r3
 8008230:	61a3      	str	r3, [r4, #24]
 8008232:	6923      	ldr	r3, [r4, #16]
 8008234:	b943      	cbnz	r3, 8008248 <__swsetup_r+0xa8>
 8008236:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800823a:	d1c4      	bne.n	80081c6 <__swsetup_r+0x26>
 800823c:	bd38      	pop	{r3, r4, r5, pc}
 800823e:	0781      	lsls	r1, r0, #30
 8008240:	bf58      	it	pl
 8008242:	6963      	ldrpl	r3, [r4, #20]
 8008244:	60a3      	str	r3, [r4, #8]
 8008246:	e7f4      	b.n	8008232 <__swsetup_r+0x92>
 8008248:	2000      	movs	r0, #0
 800824a:	e7f7      	b.n	800823c <__swsetup_r+0x9c>
 800824c:	200000f8 	.word	0x200000f8

08008250 <memset>:
 8008250:	4402      	add	r2, r0
 8008252:	4603      	mov	r3, r0
 8008254:	4293      	cmp	r3, r2
 8008256:	d100      	bne.n	800825a <memset+0xa>
 8008258:	4770      	bx	lr
 800825a:	f803 1b01 	strb.w	r1, [r3], #1
 800825e:	e7f9      	b.n	8008254 <memset+0x4>

08008260 <_close_r>:
 8008260:	b538      	push	{r3, r4, r5, lr}
 8008262:	4d06      	ldr	r5, [pc, #24]	; (800827c <_close_r+0x1c>)
 8008264:	2300      	movs	r3, #0
 8008266:	4604      	mov	r4, r0
 8008268:	4608      	mov	r0, r1
 800826a:	602b      	str	r3, [r5, #0]
 800826c:	f7f9 f99b 	bl	80015a6 <_close>
 8008270:	1c43      	adds	r3, r0, #1
 8008272:	d102      	bne.n	800827a <_close_r+0x1a>
 8008274:	682b      	ldr	r3, [r5, #0]
 8008276:	b103      	cbz	r3, 800827a <_close_r+0x1a>
 8008278:	6023      	str	r3, [r4, #0]
 800827a:	bd38      	pop	{r3, r4, r5, pc}
 800827c:	20005554 	.word	0x20005554

08008280 <_reclaim_reent>:
 8008280:	4b29      	ldr	r3, [pc, #164]	; (8008328 <_reclaim_reent+0xa8>)
 8008282:	681b      	ldr	r3, [r3, #0]
 8008284:	4283      	cmp	r3, r0
 8008286:	b570      	push	{r4, r5, r6, lr}
 8008288:	4604      	mov	r4, r0
 800828a:	d04b      	beq.n	8008324 <_reclaim_reent+0xa4>
 800828c:	69c3      	ldr	r3, [r0, #28]
 800828e:	b143      	cbz	r3, 80082a2 <_reclaim_reent+0x22>
 8008290:	68db      	ldr	r3, [r3, #12]
 8008292:	2b00      	cmp	r3, #0
 8008294:	d144      	bne.n	8008320 <_reclaim_reent+0xa0>
 8008296:	69e3      	ldr	r3, [r4, #28]
 8008298:	6819      	ldr	r1, [r3, #0]
 800829a:	b111      	cbz	r1, 80082a2 <_reclaim_reent+0x22>
 800829c:	4620      	mov	r0, r4
 800829e:	f000 f8b7 	bl	8008410 <_free_r>
 80082a2:	6961      	ldr	r1, [r4, #20]
 80082a4:	b111      	cbz	r1, 80082ac <_reclaim_reent+0x2c>
 80082a6:	4620      	mov	r0, r4
 80082a8:	f000 f8b2 	bl	8008410 <_free_r>
 80082ac:	69e1      	ldr	r1, [r4, #28]
 80082ae:	b111      	cbz	r1, 80082b6 <_reclaim_reent+0x36>
 80082b0:	4620      	mov	r0, r4
 80082b2:	f000 f8ad 	bl	8008410 <_free_r>
 80082b6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80082b8:	b111      	cbz	r1, 80082c0 <_reclaim_reent+0x40>
 80082ba:	4620      	mov	r0, r4
 80082bc:	f000 f8a8 	bl	8008410 <_free_r>
 80082c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80082c2:	b111      	cbz	r1, 80082ca <_reclaim_reent+0x4a>
 80082c4:	4620      	mov	r0, r4
 80082c6:	f000 f8a3 	bl	8008410 <_free_r>
 80082ca:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80082cc:	b111      	cbz	r1, 80082d4 <_reclaim_reent+0x54>
 80082ce:	4620      	mov	r0, r4
 80082d0:	f000 f89e 	bl	8008410 <_free_r>
 80082d4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80082d6:	b111      	cbz	r1, 80082de <_reclaim_reent+0x5e>
 80082d8:	4620      	mov	r0, r4
 80082da:	f000 f899 	bl	8008410 <_free_r>
 80082de:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80082e0:	b111      	cbz	r1, 80082e8 <_reclaim_reent+0x68>
 80082e2:	4620      	mov	r0, r4
 80082e4:	f000 f894 	bl	8008410 <_free_r>
 80082e8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80082ea:	b111      	cbz	r1, 80082f2 <_reclaim_reent+0x72>
 80082ec:	4620      	mov	r0, r4
 80082ee:	f000 f88f 	bl	8008410 <_free_r>
 80082f2:	6a23      	ldr	r3, [r4, #32]
 80082f4:	b1b3      	cbz	r3, 8008324 <_reclaim_reent+0xa4>
 80082f6:	4620      	mov	r0, r4
 80082f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80082fc:	4718      	bx	r3
 80082fe:	5949      	ldr	r1, [r1, r5]
 8008300:	b941      	cbnz	r1, 8008314 <_reclaim_reent+0x94>
 8008302:	3504      	adds	r5, #4
 8008304:	69e3      	ldr	r3, [r4, #28]
 8008306:	2d80      	cmp	r5, #128	; 0x80
 8008308:	68d9      	ldr	r1, [r3, #12]
 800830a:	d1f8      	bne.n	80082fe <_reclaim_reent+0x7e>
 800830c:	4620      	mov	r0, r4
 800830e:	f000 f87f 	bl	8008410 <_free_r>
 8008312:	e7c0      	b.n	8008296 <_reclaim_reent+0x16>
 8008314:	680e      	ldr	r6, [r1, #0]
 8008316:	4620      	mov	r0, r4
 8008318:	f000 f87a 	bl	8008410 <_free_r>
 800831c:	4631      	mov	r1, r6
 800831e:	e7ef      	b.n	8008300 <_reclaim_reent+0x80>
 8008320:	2500      	movs	r5, #0
 8008322:	e7ef      	b.n	8008304 <_reclaim_reent+0x84>
 8008324:	bd70      	pop	{r4, r5, r6, pc}
 8008326:	bf00      	nop
 8008328:	200000f8 	.word	0x200000f8

0800832c <_lseek_r>:
 800832c:	b538      	push	{r3, r4, r5, lr}
 800832e:	4d07      	ldr	r5, [pc, #28]	; (800834c <_lseek_r+0x20>)
 8008330:	4604      	mov	r4, r0
 8008332:	4608      	mov	r0, r1
 8008334:	4611      	mov	r1, r2
 8008336:	2200      	movs	r2, #0
 8008338:	602a      	str	r2, [r5, #0]
 800833a:	461a      	mov	r2, r3
 800833c:	f7f9 f95a 	bl	80015f4 <_lseek>
 8008340:	1c43      	adds	r3, r0, #1
 8008342:	d102      	bne.n	800834a <_lseek_r+0x1e>
 8008344:	682b      	ldr	r3, [r5, #0]
 8008346:	b103      	cbz	r3, 800834a <_lseek_r+0x1e>
 8008348:	6023      	str	r3, [r4, #0]
 800834a:	bd38      	pop	{r3, r4, r5, pc}
 800834c:	20005554 	.word	0x20005554

08008350 <_read_r>:
 8008350:	b538      	push	{r3, r4, r5, lr}
 8008352:	4d07      	ldr	r5, [pc, #28]	; (8008370 <_read_r+0x20>)
 8008354:	4604      	mov	r4, r0
 8008356:	4608      	mov	r0, r1
 8008358:	4611      	mov	r1, r2
 800835a:	2200      	movs	r2, #0
 800835c:	602a      	str	r2, [r5, #0]
 800835e:	461a      	mov	r2, r3
 8008360:	f7f9 f8e8 	bl	8001534 <_read>
 8008364:	1c43      	adds	r3, r0, #1
 8008366:	d102      	bne.n	800836e <_read_r+0x1e>
 8008368:	682b      	ldr	r3, [r5, #0]
 800836a:	b103      	cbz	r3, 800836e <_read_r+0x1e>
 800836c:	6023      	str	r3, [r4, #0]
 800836e:	bd38      	pop	{r3, r4, r5, pc}
 8008370:	20005554 	.word	0x20005554

08008374 <_write_r>:
 8008374:	b538      	push	{r3, r4, r5, lr}
 8008376:	4d07      	ldr	r5, [pc, #28]	; (8008394 <_write_r+0x20>)
 8008378:	4604      	mov	r4, r0
 800837a:	4608      	mov	r0, r1
 800837c:	4611      	mov	r1, r2
 800837e:	2200      	movs	r2, #0
 8008380:	602a      	str	r2, [r5, #0]
 8008382:	461a      	mov	r2, r3
 8008384:	f7f9 f8f3 	bl	800156e <_write>
 8008388:	1c43      	adds	r3, r0, #1
 800838a:	d102      	bne.n	8008392 <_write_r+0x1e>
 800838c:	682b      	ldr	r3, [r5, #0]
 800838e:	b103      	cbz	r3, 8008392 <_write_r+0x1e>
 8008390:	6023      	str	r3, [r4, #0]
 8008392:	bd38      	pop	{r3, r4, r5, pc}
 8008394:	20005554 	.word	0x20005554

08008398 <__errno>:
 8008398:	4b01      	ldr	r3, [pc, #4]	; (80083a0 <__errno+0x8>)
 800839a:	6818      	ldr	r0, [r3, #0]
 800839c:	4770      	bx	lr
 800839e:	bf00      	nop
 80083a0:	200000f8 	.word	0x200000f8

080083a4 <__libc_init_array>:
 80083a4:	b570      	push	{r4, r5, r6, lr}
 80083a6:	4d0d      	ldr	r5, [pc, #52]	; (80083dc <__libc_init_array+0x38>)
 80083a8:	4c0d      	ldr	r4, [pc, #52]	; (80083e0 <__libc_init_array+0x3c>)
 80083aa:	1b64      	subs	r4, r4, r5
 80083ac:	10a4      	asrs	r4, r4, #2
 80083ae:	2600      	movs	r6, #0
 80083b0:	42a6      	cmp	r6, r4
 80083b2:	d109      	bne.n	80083c8 <__libc_init_array+0x24>
 80083b4:	4d0b      	ldr	r5, [pc, #44]	; (80083e4 <__libc_init_array+0x40>)
 80083b6:	4c0c      	ldr	r4, [pc, #48]	; (80083e8 <__libc_init_array+0x44>)
 80083b8:	f001 faea 	bl	8009990 <_init>
 80083bc:	1b64      	subs	r4, r4, r5
 80083be:	10a4      	asrs	r4, r4, #2
 80083c0:	2600      	movs	r6, #0
 80083c2:	42a6      	cmp	r6, r4
 80083c4:	d105      	bne.n	80083d2 <__libc_init_array+0x2e>
 80083c6:	bd70      	pop	{r4, r5, r6, pc}
 80083c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80083cc:	4798      	blx	r3
 80083ce:	3601      	adds	r6, #1
 80083d0:	e7ee      	b.n	80083b0 <__libc_init_array+0xc>
 80083d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80083d6:	4798      	blx	r3
 80083d8:	3601      	adds	r6, #1
 80083da:	e7f2      	b.n	80083c2 <__libc_init_array+0x1e>
 80083dc:	08009c34 	.word	0x08009c34
 80083e0:	08009c34 	.word	0x08009c34
 80083e4:	08009c34 	.word	0x08009c34
 80083e8:	08009c38 	.word	0x08009c38

080083ec <__retarget_lock_init_recursive>:
 80083ec:	4770      	bx	lr

080083ee <__retarget_lock_acquire_recursive>:
 80083ee:	4770      	bx	lr

080083f0 <__retarget_lock_release_recursive>:
 80083f0:	4770      	bx	lr

080083f2 <memcpy>:
 80083f2:	440a      	add	r2, r1
 80083f4:	4291      	cmp	r1, r2
 80083f6:	f100 33ff 	add.w	r3, r0, #4294967295
 80083fa:	d100      	bne.n	80083fe <memcpy+0xc>
 80083fc:	4770      	bx	lr
 80083fe:	b510      	push	{r4, lr}
 8008400:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008404:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008408:	4291      	cmp	r1, r2
 800840a:	d1f9      	bne.n	8008400 <memcpy+0xe>
 800840c:	bd10      	pop	{r4, pc}
	...

08008410 <_free_r>:
 8008410:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008412:	2900      	cmp	r1, #0
 8008414:	d044      	beq.n	80084a0 <_free_r+0x90>
 8008416:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800841a:	9001      	str	r0, [sp, #4]
 800841c:	2b00      	cmp	r3, #0
 800841e:	f1a1 0404 	sub.w	r4, r1, #4
 8008422:	bfb8      	it	lt
 8008424:	18e4      	addlt	r4, r4, r3
 8008426:	f000 f8df 	bl	80085e8 <__malloc_lock>
 800842a:	4a1e      	ldr	r2, [pc, #120]	; (80084a4 <_free_r+0x94>)
 800842c:	9801      	ldr	r0, [sp, #4]
 800842e:	6813      	ldr	r3, [r2, #0]
 8008430:	b933      	cbnz	r3, 8008440 <_free_r+0x30>
 8008432:	6063      	str	r3, [r4, #4]
 8008434:	6014      	str	r4, [r2, #0]
 8008436:	b003      	add	sp, #12
 8008438:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800843c:	f000 b8da 	b.w	80085f4 <__malloc_unlock>
 8008440:	42a3      	cmp	r3, r4
 8008442:	d908      	bls.n	8008456 <_free_r+0x46>
 8008444:	6825      	ldr	r5, [r4, #0]
 8008446:	1961      	adds	r1, r4, r5
 8008448:	428b      	cmp	r3, r1
 800844a:	bf01      	itttt	eq
 800844c:	6819      	ldreq	r1, [r3, #0]
 800844e:	685b      	ldreq	r3, [r3, #4]
 8008450:	1949      	addeq	r1, r1, r5
 8008452:	6021      	streq	r1, [r4, #0]
 8008454:	e7ed      	b.n	8008432 <_free_r+0x22>
 8008456:	461a      	mov	r2, r3
 8008458:	685b      	ldr	r3, [r3, #4]
 800845a:	b10b      	cbz	r3, 8008460 <_free_r+0x50>
 800845c:	42a3      	cmp	r3, r4
 800845e:	d9fa      	bls.n	8008456 <_free_r+0x46>
 8008460:	6811      	ldr	r1, [r2, #0]
 8008462:	1855      	adds	r5, r2, r1
 8008464:	42a5      	cmp	r5, r4
 8008466:	d10b      	bne.n	8008480 <_free_r+0x70>
 8008468:	6824      	ldr	r4, [r4, #0]
 800846a:	4421      	add	r1, r4
 800846c:	1854      	adds	r4, r2, r1
 800846e:	42a3      	cmp	r3, r4
 8008470:	6011      	str	r1, [r2, #0]
 8008472:	d1e0      	bne.n	8008436 <_free_r+0x26>
 8008474:	681c      	ldr	r4, [r3, #0]
 8008476:	685b      	ldr	r3, [r3, #4]
 8008478:	6053      	str	r3, [r2, #4]
 800847a:	440c      	add	r4, r1
 800847c:	6014      	str	r4, [r2, #0]
 800847e:	e7da      	b.n	8008436 <_free_r+0x26>
 8008480:	d902      	bls.n	8008488 <_free_r+0x78>
 8008482:	230c      	movs	r3, #12
 8008484:	6003      	str	r3, [r0, #0]
 8008486:	e7d6      	b.n	8008436 <_free_r+0x26>
 8008488:	6825      	ldr	r5, [r4, #0]
 800848a:	1961      	adds	r1, r4, r5
 800848c:	428b      	cmp	r3, r1
 800848e:	bf04      	itt	eq
 8008490:	6819      	ldreq	r1, [r3, #0]
 8008492:	685b      	ldreq	r3, [r3, #4]
 8008494:	6063      	str	r3, [r4, #4]
 8008496:	bf04      	itt	eq
 8008498:	1949      	addeq	r1, r1, r5
 800849a:	6021      	streq	r1, [r4, #0]
 800849c:	6054      	str	r4, [r2, #4]
 800849e:	e7ca      	b.n	8008436 <_free_r+0x26>
 80084a0:	b003      	add	sp, #12
 80084a2:	bd30      	pop	{r4, r5, pc}
 80084a4:	2000555c 	.word	0x2000555c

080084a8 <sbrk_aligned>:
 80084a8:	b570      	push	{r4, r5, r6, lr}
 80084aa:	4e0e      	ldr	r6, [pc, #56]	; (80084e4 <sbrk_aligned+0x3c>)
 80084ac:	460c      	mov	r4, r1
 80084ae:	6831      	ldr	r1, [r6, #0]
 80084b0:	4605      	mov	r5, r0
 80084b2:	b911      	cbnz	r1, 80084ba <sbrk_aligned+0x12>
 80084b4:	f001 f92c 	bl	8009710 <_sbrk_r>
 80084b8:	6030      	str	r0, [r6, #0]
 80084ba:	4621      	mov	r1, r4
 80084bc:	4628      	mov	r0, r5
 80084be:	f001 f927 	bl	8009710 <_sbrk_r>
 80084c2:	1c43      	adds	r3, r0, #1
 80084c4:	d00a      	beq.n	80084dc <sbrk_aligned+0x34>
 80084c6:	1cc4      	adds	r4, r0, #3
 80084c8:	f024 0403 	bic.w	r4, r4, #3
 80084cc:	42a0      	cmp	r0, r4
 80084ce:	d007      	beq.n	80084e0 <sbrk_aligned+0x38>
 80084d0:	1a21      	subs	r1, r4, r0
 80084d2:	4628      	mov	r0, r5
 80084d4:	f001 f91c 	bl	8009710 <_sbrk_r>
 80084d8:	3001      	adds	r0, #1
 80084da:	d101      	bne.n	80084e0 <sbrk_aligned+0x38>
 80084dc:	f04f 34ff 	mov.w	r4, #4294967295
 80084e0:	4620      	mov	r0, r4
 80084e2:	bd70      	pop	{r4, r5, r6, pc}
 80084e4:	20005560 	.word	0x20005560

080084e8 <_malloc_r>:
 80084e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80084ec:	1ccd      	adds	r5, r1, #3
 80084ee:	f025 0503 	bic.w	r5, r5, #3
 80084f2:	3508      	adds	r5, #8
 80084f4:	2d0c      	cmp	r5, #12
 80084f6:	bf38      	it	cc
 80084f8:	250c      	movcc	r5, #12
 80084fa:	2d00      	cmp	r5, #0
 80084fc:	4607      	mov	r7, r0
 80084fe:	db01      	blt.n	8008504 <_malloc_r+0x1c>
 8008500:	42a9      	cmp	r1, r5
 8008502:	d905      	bls.n	8008510 <_malloc_r+0x28>
 8008504:	230c      	movs	r3, #12
 8008506:	603b      	str	r3, [r7, #0]
 8008508:	2600      	movs	r6, #0
 800850a:	4630      	mov	r0, r6
 800850c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008510:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80085e4 <_malloc_r+0xfc>
 8008514:	f000 f868 	bl	80085e8 <__malloc_lock>
 8008518:	f8d8 3000 	ldr.w	r3, [r8]
 800851c:	461c      	mov	r4, r3
 800851e:	bb5c      	cbnz	r4, 8008578 <_malloc_r+0x90>
 8008520:	4629      	mov	r1, r5
 8008522:	4638      	mov	r0, r7
 8008524:	f7ff ffc0 	bl	80084a8 <sbrk_aligned>
 8008528:	1c43      	adds	r3, r0, #1
 800852a:	4604      	mov	r4, r0
 800852c:	d155      	bne.n	80085da <_malloc_r+0xf2>
 800852e:	f8d8 4000 	ldr.w	r4, [r8]
 8008532:	4626      	mov	r6, r4
 8008534:	2e00      	cmp	r6, #0
 8008536:	d145      	bne.n	80085c4 <_malloc_r+0xdc>
 8008538:	2c00      	cmp	r4, #0
 800853a:	d048      	beq.n	80085ce <_malloc_r+0xe6>
 800853c:	6823      	ldr	r3, [r4, #0]
 800853e:	4631      	mov	r1, r6
 8008540:	4638      	mov	r0, r7
 8008542:	eb04 0903 	add.w	r9, r4, r3
 8008546:	f001 f8e3 	bl	8009710 <_sbrk_r>
 800854a:	4581      	cmp	r9, r0
 800854c:	d13f      	bne.n	80085ce <_malloc_r+0xe6>
 800854e:	6821      	ldr	r1, [r4, #0]
 8008550:	1a6d      	subs	r5, r5, r1
 8008552:	4629      	mov	r1, r5
 8008554:	4638      	mov	r0, r7
 8008556:	f7ff ffa7 	bl	80084a8 <sbrk_aligned>
 800855a:	3001      	adds	r0, #1
 800855c:	d037      	beq.n	80085ce <_malloc_r+0xe6>
 800855e:	6823      	ldr	r3, [r4, #0]
 8008560:	442b      	add	r3, r5
 8008562:	6023      	str	r3, [r4, #0]
 8008564:	f8d8 3000 	ldr.w	r3, [r8]
 8008568:	2b00      	cmp	r3, #0
 800856a:	d038      	beq.n	80085de <_malloc_r+0xf6>
 800856c:	685a      	ldr	r2, [r3, #4]
 800856e:	42a2      	cmp	r2, r4
 8008570:	d12b      	bne.n	80085ca <_malloc_r+0xe2>
 8008572:	2200      	movs	r2, #0
 8008574:	605a      	str	r2, [r3, #4]
 8008576:	e00f      	b.n	8008598 <_malloc_r+0xb0>
 8008578:	6822      	ldr	r2, [r4, #0]
 800857a:	1b52      	subs	r2, r2, r5
 800857c:	d41f      	bmi.n	80085be <_malloc_r+0xd6>
 800857e:	2a0b      	cmp	r2, #11
 8008580:	d917      	bls.n	80085b2 <_malloc_r+0xca>
 8008582:	1961      	adds	r1, r4, r5
 8008584:	42a3      	cmp	r3, r4
 8008586:	6025      	str	r5, [r4, #0]
 8008588:	bf18      	it	ne
 800858a:	6059      	strne	r1, [r3, #4]
 800858c:	6863      	ldr	r3, [r4, #4]
 800858e:	bf08      	it	eq
 8008590:	f8c8 1000 	streq.w	r1, [r8]
 8008594:	5162      	str	r2, [r4, r5]
 8008596:	604b      	str	r3, [r1, #4]
 8008598:	4638      	mov	r0, r7
 800859a:	f104 060b 	add.w	r6, r4, #11
 800859e:	f000 f829 	bl	80085f4 <__malloc_unlock>
 80085a2:	f026 0607 	bic.w	r6, r6, #7
 80085a6:	1d23      	adds	r3, r4, #4
 80085a8:	1af2      	subs	r2, r6, r3
 80085aa:	d0ae      	beq.n	800850a <_malloc_r+0x22>
 80085ac:	1b9b      	subs	r3, r3, r6
 80085ae:	50a3      	str	r3, [r4, r2]
 80085b0:	e7ab      	b.n	800850a <_malloc_r+0x22>
 80085b2:	42a3      	cmp	r3, r4
 80085b4:	6862      	ldr	r2, [r4, #4]
 80085b6:	d1dd      	bne.n	8008574 <_malloc_r+0x8c>
 80085b8:	f8c8 2000 	str.w	r2, [r8]
 80085bc:	e7ec      	b.n	8008598 <_malloc_r+0xb0>
 80085be:	4623      	mov	r3, r4
 80085c0:	6864      	ldr	r4, [r4, #4]
 80085c2:	e7ac      	b.n	800851e <_malloc_r+0x36>
 80085c4:	4634      	mov	r4, r6
 80085c6:	6876      	ldr	r6, [r6, #4]
 80085c8:	e7b4      	b.n	8008534 <_malloc_r+0x4c>
 80085ca:	4613      	mov	r3, r2
 80085cc:	e7cc      	b.n	8008568 <_malloc_r+0x80>
 80085ce:	230c      	movs	r3, #12
 80085d0:	603b      	str	r3, [r7, #0]
 80085d2:	4638      	mov	r0, r7
 80085d4:	f000 f80e 	bl	80085f4 <__malloc_unlock>
 80085d8:	e797      	b.n	800850a <_malloc_r+0x22>
 80085da:	6025      	str	r5, [r4, #0]
 80085dc:	e7dc      	b.n	8008598 <_malloc_r+0xb0>
 80085de:	605b      	str	r3, [r3, #4]
 80085e0:	deff      	udf	#255	; 0xff
 80085e2:	bf00      	nop
 80085e4:	2000555c 	.word	0x2000555c

080085e8 <__malloc_lock>:
 80085e8:	4801      	ldr	r0, [pc, #4]	; (80085f0 <__malloc_lock+0x8>)
 80085ea:	f7ff bf00 	b.w	80083ee <__retarget_lock_acquire_recursive>
 80085ee:	bf00      	nop
 80085f0:	20005558 	.word	0x20005558

080085f4 <__malloc_unlock>:
 80085f4:	4801      	ldr	r0, [pc, #4]	; (80085fc <__malloc_unlock+0x8>)
 80085f6:	f7ff befb 	b.w	80083f0 <__retarget_lock_release_recursive>
 80085fa:	bf00      	nop
 80085fc:	20005558 	.word	0x20005558

08008600 <__sfputc_r>:
 8008600:	6893      	ldr	r3, [r2, #8]
 8008602:	3b01      	subs	r3, #1
 8008604:	2b00      	cmp	r3, #0
 8008606:	b410      	push	{r4}
 8008608:	6093      	str	r3, [r2, #8]
 800860a:	da08      	bge.n	800861e <__sfputc_r+0x1e>
 800860c:	6994      	ldr	r4, [r2, #24]
 800860e:	42a3      	cmp	r3, r4
 8008610:	db01      	blt.n	8008616 <__sfputc_r+0x16>
 8008612:	290a      	cmp	r1, #10
 8008614:	d103      	bne.n	800861e <__sfputc_r+0x1e>
 8008616:	f85d 4b04 	ldr.w	r4, [sp], #4
 800861a:	f7ff bd84 	b.w	8008126 <__swbuf_r>
 800861e:	6813      	ldr	r3, [r2, #0]
 8008620:	1c58      	adds	r0, r3, #1
 8008622:	6010      	str	r0, [r2, #0]
 8008624:	7019      	strb	r1, [r3, #0]
 8008626:	4608      	mov	r0, r1
 8008628:	f85d 4b04 	ldr.w	r4, [sp], #4
 800862c:	4770      	bx	lr

0800862e <__sfputs_r>:
 800862e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008630:	4606      	mov	r6, r0
 8008632:	460f      	mov	r7, r1
 8008634:	4614      	mov	r4, r2
 8008636:	18d5      	adds	r5, r2, r3
 8008638:	42ac      	cmp	r4, r5
 800863a:	d101      	bne.n	8008640 <__sfputs_r+0x12>
 800863c:	2000      	movs	r0, #0
 800863e:	e007      	b.n	8008650 <__sfputs_r+0x22>
 8008640:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008644:	463a      	mov	r2, r7
 8008646:	4630      	mov	r0, r6
 8008648:	f7ff ffda 	bl	8008600 <__sfputc_r>
 800864c:	1c43      	adds	r3, r0, #1
 800864e:	d1f3      	bne.n	8008638 <__sfputs_r+0xa>
 8008650:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008654 <_vfiprintf_r>:
 8008654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008658:	460d      	mov	r5, r1
 800865a:	b09d      	sub	sp, #116	; 0x74
 800865c:	4614      	mov	r4, r2
 800865e:	4698      	mov	r8, r3
 8008660:	4606      	mov	r6, r0
 8008662:	b118      	cbz	r0, 800866c <_vfiprintf_r+0x18>
 8008664:	6a03      	ldr	r3, [r0, #32]
 8008666:	b90b      	cbnz	r3, 800866c <_vfiprintf_r+0x18>
 8008668:	f7ff fc64 	bl	8007f34 <__sinit>
 800866c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800866e:	07d9      	lsls	r1, r3, #31
 8008670:	d405      	bmi.n	800867e <_vfiprintf_r+0x2a>
 8008672:	89ab      	ldrh	r3, [r5, #12]
 8008674:	059a      	lsls	r2, r3, #22
 8008676:	d402      	bmi.n	800867e <_vfiprintf_r+0x2a>
 8008678:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800867a:	f7ff feb8 	bl	80083ee <__retarget_lock_acquire_recursive>
 800867e:	89ab      	ldrh	r3, [r5, #12]
 8008680:	071b      	lsls	r3, r3, #28
 8008682:	d501      	bpl.n	8008688 <_vfiprintf_r+0x34>
 8008684:	692b      	ldr	r3, [r5, #16]
 8008686:	b99b      	cbnz	r3, 80086b0 <_vfiprintf_r+0x5c>
 8008688:	4629      	mov	r1, r5
 800868a:	4630      	mov	r0, r6
 800868c:	f7ff fd88 	bl	80081a0 <__swsetup_r>
 8008690:	b170      	cbz	r0, 80086b0 <_vfiprintf_r+0x5c>
 8008692:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008694:	07dc      	lsls	r4, r3, #31
 8008696:	d504      	bpl.n	80086a2 <_vfiprintf_r+0x4e>
 8008698:	f04f 30ff 	mov.w	r0, #4294967295
 800869c:	b01d      	add	sp, #116	; 0x74
 800869e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086a2:	89ab      	ldrh	r3, [r5, #12]
 80086a4:	0598      	lsls	r0, r3, #22
 80086a6:	d4f7      	bmi.n	8008698 <_vfiprintf_r+0x44>
 80086a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80086aa:	f7ff fea1 	bl	80083f0 <__retarget_lock_release_recursive>
 80086ae:	e7f3      	b.n	8008698 <_vfiprintf_r+0x44>
 80086b0:	2300      	movs	r3, #0
 80086b2:	9309      	str	r3, [sp, #36]	; 0x24
 80086b4:	2320      	movs	r3, #32
 80086b6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80086ba:	f8cd 800c 	str.w	r8, [sp, #12]
 80086be:	2330      	movs	r3, #48	; 0x30
 80086c0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8008874 <_vfiprintf_r+0x220>
 80086c4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80086c8:	f04f 0901 	mov.w	r9, #1
 80086cc:	4623      	mov	r3, r4
 80086ce:	469a      	mov	sl, r3
 80086d0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80086d4:	b10a      	cbz	r2, 80086da <_vfiprintf_r+0x86>
 80086d6:	2a25      	cmp	r2, #37	; 0x25
 80086d8:	d1f9      	bne.n	80086ce <_vfiprintf_r+0x7a>
 80086da:	ebba 0b04 	subs.w	fp, sl, r4
 80086de:	d00b      	beq.n	80086f8 <_vfiprintf_r+0xa4>
 80086e0:	465b      	mov	r3, fp
 80086e2:	4622      	mov	r2, r4
 80086e4:	4629      	mov	r1, r5
 80086e6:	4630      	mov	r0, r6
 80086e8:	f7ff ffa1 	bl	800862e <__sfputs_r>
 80086ec:	3001      	adds	r0, #1
 80086ee:	f000 80a9 	beq.w	8008844 <_vfiprintf_r+0x1f0>
 80086f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80086f4:	445a      	add	r2, fp
 80086f6:	9209      	str	r2, [sp, #36]	; 0x24
 80086f8:	f89a 3000 	ldrb.w	r3, [sl]
 80086fc:	2b00      	cmp	r3, #0
 80086fe:	f000 80a1 	beq.w	8008844 <_vfiprintf_r+0x1f0>
 8008702:	2300      	movs	r3, #0
 8008704:	f04f 32ff 	mov.w	r2, #4294967295
 8008708:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800870c:	f10a 0a01 	add.w	sl, sl, #1
 8008710:	9304      	str	r3, [sp, #16]
 8008712:	9307      	str	r3, [sp, #28]
 8008714:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008718:	931a      	str	r3, [sp, #104]	; 0x68
 800871a:	4654      	mov	r4, sl
 800871c:	2205      	movs	r2, #5
 800871e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008722:	4854      	ldr	r0, [pc, #336]	; (8008874 <_vfiprintf_r+0x220>)
 8008724:	f7f7 fd5c 	bl	80001e0 <memchr>
 8008728:	9a04      	ldr	r2, [sp, #16]
 800872a:	b9d8      	cbnz	r0, 8008764 <_vfiprintf_r+0x110>
 800872c:	06d1      	lsls	r1, r2, #27
 800872e:	bf44      	itt	mi
 8008730:	2320      	movmi	r3, #32
 8008732:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008736:	0713      	lsls	r3, r2, #28
 8008738:	bf44      	itt	mi
 800873a:	232b      	movmi	r3, #43	; 0x2b
 800873c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008740:	f89a 3000 	ldrb.w	r3, [sl]
 8008744:	2b2a      	cmp	r3, #42	; 0x2a
 8008746:	d015      	beq.n	8008774 <_vfiprintf_r+0x120>
 8008748:	9a07      	ldr	r2, [sp, #28]
 800874a:	4654      	mov	r4, sl
 800874c:	2000      	movs	r0, #0
 800874e:	f04f 0c0a 	mov.w	ip, #10
 8008752:	4621      	mov	r1, r4
 8008754:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008758:	3b30      	subs	r3, #48	; 0x30
 800875a:	2b09      	cmp	r3, #9
 800875c:	d94d      	bls.n	80087fa <_vfiprintf_r+0x1a6>
 800875e:	b1b0      	cbz	r0, 800878e <_vfiprintf_r+0x13a>
 8008760:	9207      	str	r2, [sp, #28]
 8008762:	e014      	b.n	800878e <_vfiprintf_r+0x13a>
 8008764:	eba0 0308 	sub.w	r3, r0, r8
 8008768:	fa09 f303 	lsl.w	r3, r9, r3
 800876c:	4313      	orrs	r3, r2
 800876e:	9304      	str	r3, [sp, #16]
 8008770:	46a2      	mov	sl, r4
 8008772:	e7d2      	b.n	800871a <_vfiprintf_r+0xc6>
 8008774:	9b03      	ldr	r3, [sp, #12]
 8008776:	1d19      	adds	r1, r3, #4
 8008778:	681b      	ldr	r3, [r3, #0]
 800877a:	9103      	str	r1, [sp, #12]
 800877c:	2b00      	cmp	r3, #0
 800877e:	bfbb      	ittet	lt
 8008780:	425b      	neglt	r3, r3
 8008782:	f042 0202 	orrlt.w	r2, r2, #2
 8008786:	9307      	strge	r3, [sp, #28]
 8008788:	9307      	strlt	r3, [sp, #28]
 800878a:	bfb8      	it	lt
 800878c:	9204      	strlt	r2, [sp, #16]
 800878e:	7823      	ldrb	r3, [r4, #0]
 8008790:	2b2e      	cmp	r3, #46	; 0x2e
 8008792:	d10c      	bne.n	80087ae <_vfiprintf_r+0x15a>
 8008794:	7863      	ldrb	r3, [r4, #1]
 8008796:	2b2a      	cmp	r3, #42	; 0x2a
 8008798:	d134      	bne.n	8008804 <_vfiprintf_r+0x1b0>
 800879a:	9b03      	ldr	r3, [sp, #12]
 800879c:	1d1a      	adds	r2, r3, #4
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	9203      	str	r2, [sp, #12]
 80087a2:	2b00      	cmp	r3, #0
 80087a4:	bfb8      	it	lt
 80087a6:	f04f 33ff 	movlt.w	r3, #4294967295
 80087aa:	3402      	adds	r4, #2
 80087ac:	9305      	str	r3, [sp, #20]
 80087ae:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8008884 <_vfiprintf_r+0x230>
 80087b2:	7821      	ldrb	r1, [r4, #0]
 80087b4:	2203      	movs	r2, #3
 80087b6:	4650      	mov	r0, sl
 80087b8:	f7f7 fd12 	bl	80001e0 <memchr>
 80087bc:	b138      	cbz	r0, 80087ce <_vfiprintf_r+0x17a>
 80087be:	9b04      	ldr	r3, [sp, #16]
 80087c0:	eba0 000a 	sub.w	r0, r0, sl
 80087c4:	2240      	movs	r2, #64	; 0x40
 80087c6:	4082      	lsls	r2, r0
 80087c8:	4313      	orrs	r3, r2
 80087ca:	3401      	adds	r4, #1
 80087cc:	9304      	str	r3, [sp, #16]
 80087ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80087d2:	4829      	ldr	r0, [pc, #164]	; (8008878 <_vfiprintf_r+0x224>)
 80087d4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80087d8:	2206      	movs	r2, #6
 80087da:	f7f7 fd01 	bl	80001e0 <memchr>
 80087de:	2800      	cmp	r0, #0
 80087e0:	d03f      	beq.n	8008862 <_vfiprintf_r+0x20e>
 80087e2:	4b26      	ldr	r3, [pc, #152]	; (800887c <_vfiprintf_r+0x228>)
 80087e4:	bb1b      	cbnz	r3, 800882e <_vfiprintf_r+0x1da>
 80087e6:	9b03      	ldr	r3, [sp, #12]
 80087e8:	3307      	adds	r3, #7
 80087ea:	f023 0307 	bic.w	r3, r3, #7
 80087ee:	3308      	adds	r3, #8
 80087f0:	9303      	str	r3, [sp, #12]
 80087f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80087f4:	443b      	add	r3, r7
 80087f6:	9309      	str	r3, [sp, #36]	; 0x24
 80087f8:	e768      	b.n	80086cc <_vfiprintf_r+0x78>
 80087fa:	fb0c 3202 	mla	r2, ip, r2, r3
 80087fe:	460c      	mov	r4, r1
 8008800:	2001      	movs	r0, #1
 8008802:	e7a6      	b.n	8008752 <_vfiprintf_r+0xfe>
 8008804:	2300      	movs	r3, #0
 8008806:	3401      	adds	r4, #1
 8008808:	9305      	str	r3, [sp, #20]
 800880a:	4619      	mov	r1, r3
 800880c:	f04f 0c0a 	mov.w	ip, #10
 8008810:	4620      	mov	r0, r4
 8008812:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008816:	3a30      	subs	r2, #48	; 0x30
 8008818:	2a09      	cmp	r2, #9
 800881a:	d903      	bls.n	8008824 <_vfiprintf_r+0x1d0>
 800881c:	2b00      	cmp	r3, #0
 800881e:	d0c6      	beq.n	80087ae <_vfiprintf_r+0x15a>
 8008820:	9105      	str	r1, [sp, #20]
 8008822:	e7c4      	b.n	80087ae <_vfiprintf_r+0x15a>
 8008824:	fb0c 2101 	mla	r1, ip, r1, r2
 8008828:	4604      	mov	r4, r0
 800882a:	2301      	movs	r3, #1
 800882c:	e7f0      	b.n	8008810 <_vfiprintf_r+0x1bc>
 800882e:	ab03      	add	r3, sp, #12
 8008830:	9300      	str	r3, [sp, #0]
 8008832:	462a      	mov	r2, r5
 8008834:	4b12      	ldr	r3, [pc, #72]	; (8008880 <_vfiprintf_r+0x22c>)
 8008836:	a904      	add	r1, sp, #16
 8008838:	4630      	mov	r0, r6
 800883a:	f3af 8000 	nop.w
 800883e:	4607      	mov	r7, r0
 8008840:	1c78      	adds	r0, r7, #1
 8008842:	d1d6      	bne.n	80087f2 <_vfiprintf_r+0x19e>
 8008844:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008846:	07d9      	lsls	r1, r3, #31
 8008848:	d405      	bmi.n	8008856 <_vfiprintf_r+0x202>
 800884a:	89ab      	ldrh	r3, [r5, #12]
 800884c:	059a      	lsls	r2, r3, #22
 800884e:	d402      	bmi.n	8008856 <_vfiprintf_r+0x202>
 8008850:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008852:	f7ff fdcd 	bl	80083f0 <__retarget_lock_release_recursive>
 8008856:	89ab      	ldrh	r3, [r5, #12]
 8008858:	065b      	lsls	r3, r3, #25
 800885a:	f53f af1d 	bmi.w	8008698 <_vfiprintf_r+0x44>
 800885e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008860:	e71c      	b.n	800869c <_vfiprintf_r+0x48>
 8008862:	ab03      	add	r3, sp, #12
 8008864:	9300      	str	r3, [sp, #0]
 8008866:	462a      	mov	r2, r5
 8008868:	4b05      	ldr	r3, [pc, #20]	; (8008880 <_vfiprintf_r+0x22c>)
 800886a:	a904      	add	r1, sp, #16
 800886c:	4630      	mov	r0, r6
 800886e:	f000 f879 	bl	8008964 <_printf_i>
 8008872:	e7e4      	b.n	800883e <_vfiprintf_r+0x1ea>
 8008874:	08009adc 	.word	0x08009adc
 8008878:	08009ae6 	.word	0x08009ae6
 800887c:	00000000 	.word	0x00000000
 8008880:	0800862f 	.word	0x0800862f
 8008884:	08009ae2 	.word	0x08009ae2

08008888 <_printf_common>:
 8008888:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800888c:	4616      	mov	r6, r2
 800888e:	4699      	mov	r9, r3
 8008890:	688a      	ldr	r2, [r1, #8]
 8008892:	690b      	ldr	r3, [r1, #16]
 8008894:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8008898:	4293      	cmp	r3, r2
 800889a:	bfb8      	it	lt
 800889c:	4613      	movlt	r3, r2
 800889e:	6033      	str	r3, [r6, #0]
 80088a0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80088a4:	4607      	mov	r7, r0
 80088a6:	460c      	mov	r4, r1
 80088a8:	b10a      	cbz	r2, 80088ae <_printf_common+0x26>
 80088aa:	3301      	adds	r3, #1
 80088ac:	6033      	str	r3, [r6, #0]
 80088ae:	6823      	ldr	r3, [r4, #0]
 80088b0:	0699      	lsls	r1, r3, #26
 80088b2:	bf42      	ittt	mi
 80088b4:	6833      	ldrmi	r3, [r6, #0]
 80088b6:	3302      	addmi	r3, #2
 80088b8:	6033      	strmi	r3, [r6, #0]
 80088ba:	6825      	ldr	r5, [r4, #0]
 80088bc:	f015 0506 	ands.w	r5, r5, #6
 80088c0:	d106      	bne.n	80088d0 <_printf_common+0x48>
 80088c2:	f104 0a19 	add.w	sl, r4, #25
 80088c6:	68e3      	ldr	r3, [r4, #12]
 80088c8:	6832      	ldr	r2, [r6, #0]
 80088ca:	1a9b      	subs	r3, r3, r2
 80088cc:	42ab      	cmp	r3, r5
 80088ce:	dc26      	bgt.n	800891e <_printf_common+0x96>
 80088d0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80088d4:	1e13      	subs	r3, r2, #0
 80088d6:	6822      	ldr	r2, [r4, #0]
 80088d8:	bf18      	it	ne
 80088da:	2301      	movne	r3, #1
 80088dc:	0692      	lsls	r2, r2, #26
 80088de:	d42b      	bmi.n	8008938 <_printf_common+0xb0>
 80088e0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80088e4:	4649      	mov	r1, r9
 80088e6:	4638      	mov	r0, r7
 80088e8:	47c0      	blx	r8
 80088ea:	3001      	adds	r0, #1
 80088ec:	d01e      	beq.n	800892c <_printf_common+0xa4>
 80088ee:	6823      	ldr	r3, [r4, #0]
 80088f0:	6922      	ldr	r2, [r4, #16]
 80088f2:	f003 0306 	and.w	r3, r3, #6
 80088f6:	2b04      	cmp	r3, #4
 80088f8:	bf02      	ittt	eq
 80088fa:	68e5      	ldreq	r5, [r4, #12]
 80088fc:	6833      	ldreq	r3, [r6, #0]
 80088fe:	1aed      	subeq	r5, r5, r3
 8008900:	68a3      	ldr	r3, [r4, #8]
 8008902:	bf0c      	ite	eq
 8008904:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8008908:	2500      	movne	r5, #0
 800890a:	4293      	cmp	r3, r2
 800890c:	bfc4      	itt	gt
 800890e:	1a9b      	subgt	r3, r3, r2
 8008910:	18ed      	addgt	r5, r5, r3
 8008912:	2600      	movs	r6, #0
 8008914:	341a      	adds	r4, #26
 8008916:	42b5      	cmp	r5, r6
 8008918:	d11a      	bne.n	8008950 <_printf_common+0xc8>
 800891a:	2000      	movs	r0, #0
 800891c:	e008      	b.n	8008930 <_printf_common+0xa8>
 800891e:	2301      	movs	r3, #1
 8008920:	4652      	mov	r2, sl
 8008922:	4649      	mov	r1, r9
 8008924:	4638      	mov	r0, r7
 8008926:	47c0      	blx	r8
 8008928:	3001      	adds	r0, #1
 800892a:	d103      	bne.n	8008934 <_printf_common+0xac>
 800892c:	f04f 30ff 	mov.w	r0, #4294967295
 8008930:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008934:	3501      	adds	r5, #1
 8008936:	e7c6      	b.n	80088c6 <_printf_common+0x3e>
 8008938:	18e1      	adds	r1, r4, r3
 800893a:	1c5a      	adds	r2, r3, #1
 800893c:	2030      	movs	r0, #48	; 0x30
 800893e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8008942:	4422      	add	r2, r4
 8008944:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8008948:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800894c:	3302      	adds	r3, #2
 800894e:	e7c7      	b.n	80088e0 <_printf_common+0x58>
 8008950:	2301      	movs	r3, #1
 8008952:	4622      	mov	r2, r4
 8008954:	4649      	mov	r1, r9
 8008956:	4638      	mov	r0, r7
 8008958:	47c0      	blx	r8
 800895a:	3001      	adds	r0, #1
 800895c:	d0e6      	beq.n	800892c <_printf_common+0xa4>
 800895e:	3601      	adds	r6, #1
 8008960:	e7d9      	b.n	8008916 <_printf_common+0x8e>
	...

08008964 <_printf_i>:
 8008964:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008968:	7e0f      	ldrb	r7, [r1, #24]
 800896a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800896c:	2f78      	cmp	r7, #120	; 0x78
 800896e:	4691      	mov	r9, r2
 8008970:	4680      	mov	r8, r0
 8008972:	460c      	mov	r4, r1
 8008974:	469a      	mov	sl, r3
 8008976:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800897a:	d807      	bhi.n	800898c <_printf_i+0x28>
 800897c:	2f62      	cmp	r7, #98	; 0x62
 800897e:	d80a      	bhi.n	8008996 <_printf_i+0x32>
 8008980:	2f00      	cmp	r7, #0
 8008982:	f000 80d4 	beq.w	8008b2e <_printf_i+0x1ca>
 8008986:	2f58      	cmp	r7, #88	; 0x58
 8008988:	f000 80c0 	beq.w	8008b0c <_printf_i+0x1a8>
 800898c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8008990:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8008994:	e03a      	b.n	8008a0c <_printf_i+0xa8>
 8008996:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800899a:	2b15      	cmp	r3, #21
 800899c:	d8f6      	bhi.n	800898c <_printf_i+0x28>
 800899e:	a101      	add	r1, pc, #4	; (adr r1, 80089a4 <_printf_i+0x40>)
 80089a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80089a4:	080089fd 	.word	0x080089fd
 80089a8:	08008a11 	.word	0x08008a11
 80089ac:	0800898d 	.word	0x0800898d
 80089b0:	0800898d 	.word	0x0800898d
 80089b4:	0800898d 	.word	0x0800898d
 80089b8:	0800898d 	.word	0x0800898d
 80089bc:	08008a11 	.word	0x08008a11
 80089c0:	0800898d 	.word	0x0800898d
 80089c4:	0800898d 	.word	0x0800898d
 80089c8:	0800898d 	.word	0x0800898d
 80089cc:	0800898d 	.word	0x0800898d
 80089d0:	08008b15 	.word	0x08008b15
 80089d4:	08008a3d 	.word	0x08008a3d
 80089d8:	08008acf 	.word	0x08008acf
 80089dc:	0800898d 	.word	0x0800898d
 80089e0:	0800898d 	.word	0x0800898d
 80089e4:	08008b37 	.word	0x08008b37
 80089e8:	0800898d 	.word	0x0800898d
 80089ec:	08008a3d 	.word	0x08008a3d
 80089f0:	0800898d 	.word	0x0800898d
 80089f4:	0800898d 	.word	0x0800898d
 80089f8:	08008ad7 	.word	0x08008ad7
 80089fc:	682b      	ldr	r3, [r5, #0]
 80089fe:	1d1a      	adds	r2, r3, #4
 8008a00:	681b      	ldr	r3, [r3, #0]
 8008a02:	602a      	str	r2, [r5, #0]
 8008a04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8008a08:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8008a0c:	2301      	movs	r3, #1
 8008a0e:	e09f      	b.n	8008b50 <_printf_i+0x1ec>
 8008a10:	6820      	ldr	r0, [r4, #0]
 8008a12:	682b      	ldr	r3, [r5, #0]
 8008a14:	0607      	lsls	r7, r0, #24
 8008a16:	f103 0104 	add.w	r1, r3, #4
 8008a1a:	6029      	str	r1, [r5, #0]
 8008a1c:	d501      	bpl.n	8008a22 <_printf_i+0xbe>
 8008a1e:	681e      	ldr	r6, [r3, #0]
 8008a20:	e003      	b.n	8008a2a <_printf_i+0xc6>
 8008a22:	0646      	lsls	r6, r0, #25
 8008a24:	d5fb      	bpl.n	8008a1e <_printf_i+0xba>
 8008a26:	f9b3 6000 	ldrsh.w	r6, [r3]
 8008a2a:	2e00      	cmp	r6, #0
 8008a2c:	da03      	bge.n	8008a36 <_printf_i+0xd2>
 8008a2e:	232d      	movs	r3, #45	; 0x2d
 8008a30:	4276      	negs	r6, r6
 8008a32:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008a36:	485a      	ldr	r0, [pc, #360]	; (8008ba0 <_printf_i+0x23c>)
 8008a38:	230a      	movs	r3, #10
 8008a3a:	e012      	b.n	8008a62 <_printf_i+0xfe>
 8008a3c:	682b      	ldr	r3, [r5, #0]
 8008a3e:	6820      	ldr	r0, [r4, #0]
 8008a40:	1d19      	adds	r1, r3, #4
 8008a42:	6029      	str	r1, [r5, #0]
 8008a44:	0605      	lsls	r5, r0, #24
 8008a46:	d501      	bpl.n	8008a4c <_printf_i+0xe8>
 8008a48:	681e      	ldr	r6, [r3, #0]
 8008a4a:	e002      	b.n	8008a52 <_printf_i+0xee>
 8008a4c:	0641      	lsls	r1, r0, #25
 8008a4e:	d5fb      	bpl.n	8008a48 <_printf_i+0xe4>
 8008a50:	881e      	ldrh	r6, [r3, #0]
 8008a52:	4853      	ldr	r0, [pc, #332]	; (8008ba0 <_printf_i+0x23c>)
 8008a54:	2f6f      	cmp	r7, #111	; 0x6f
 8008a56:	bf0c      	ite	eq
 8008a58:	2308      	moveq	r3, #8
 8008a5a:	230a      	movne	r3, #10
 8008a5c:	2100      	movs	r1, #0
 8008a5e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8008a62:	6865      	ldr	r5, [r4, #4]
 8008a64:	60a5      	str	r5, [r4, #8]
 8008a66:	2d00      	cmp	r5, #0
 8008a68:	bfa2      	ittt	ge
 8008a6a:	6821      	ldrge	r1, [r4, #0]
 8008a6c:	f021 0104 	bicge.w	r1, r1, #4
 8008a70:	6021      	strge	r1, [r4, #0]
 8008a72:	b90e      	cbnz	r6, 8008a78 <_printf_i+0x114>
 8008a74:	2d00      	cmp	r5, #0
 8008a76:	d04b      	beq.n	8008b10 <_printf_i+0x1ac>
 8008a78:	4615      	mov	r5, r2
 8008a7a:	fbb6 f1f3 	udiv	r1, r6, r3
 8008a7e:	fb03 6711 	mls	r7, r3, r1, r6
 8008a82:	5dc7      	ldrb	r7, [r0, r7]
 8008a84:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8008a88:	4637      	mov	r7, r6
 8008a8a:	42bb      	cmp	r3, r7
 8008a8c:	460e      	mov	r6, r1
 8008a8e:	d9f4      	bls.n	8008a7a <_printf_i+0x116>
 8008a90:	2b08      	cmp	r3, #8
 8008a92:	d10b      	bne.n	8008aac <_printf_i+0x148>
 8008a94:	6823      	ldr	r3, [r4, #0]
 8008a96:	07de      	lsls	r6, r3, #31
 8008a98:	d508      	bpl.n	8008aac <_printf_i+0x148>
 8008a9a:	6923      	ldr	r3, [r4, #16]
 8008a9c:	6861      	ldr	r1, [r4, #4]
 8008a9e:	4299      	cmp	r1, r3
 8008aa0:	bfde      	ittt	le
 8008aa2:	2330      	movle	r3, #48	; 0x30
 8008aa4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8008aa8:	f105 35ff 	addle.w	r5, r5, #4294967295
 8008aac:	1b52      	subs	r2, r2, r5
 8008aae:	6122      	str	r2, [r4, #16]
 8008ab0:	f8cd a000 	str.w	sl, [sp]
 8008ab4:	464b      	mov	r3, r9
 8008ab6:	aa03      	add	r2, sp, #12
 8008ab8:	4621      	mov	r1, r4
 8008aba:	4640      	mov	r0, r8
 8008abc:	f7ff fee4 	bl	8008888 <_printf_common>
 8008ac0:	3001      	adds	r0, #1
 8008ac2:	d14a      	bne.n	8008b5a <_printf_i+0x1f6>
 8008ac4:	f04f 30ff 	mov.w	r0, #4294967295
 8008ac8:	b004      	add	sp, #16
 8008aca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008ace:	6823      	ldr	r3, [r4, #0]
 8008ad0:	f043 0320 	orr.w	r3, r3, #32
 8008ad4:	6023      	str	r3, [r4, #0]
 8008ad6:	4833      	ldr	r0, [pc, #204]	; (8008ba4 <_printf_i+0x240>)
 8008ad8:	2778      	movs	r7, #120	; 0x78
 8008ada:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8008ade:	6823      	ldr	r3, [r4, #0]
 8008ae0:	6829      	ldr	r1, [r5, #0]
 8008ae2:	061f      	lsls	r7, r3, #24
 8008ae4:	f851 6b04 	ldr.w	r6, [r1], #4
 8008ae8:	d402      	bmi.n	8008af0 <_printf_i+0x18c>
 8008aea:	065f      	lsls	r7, r3, #25
 8008aec:	bf48      	it	mi
 8008aee:	b2b6      	uxthmi	r6, r6
 8008af0:	07df      	lsls	r7, r3, #31
 8008af2:	bf48      	it	mi
 8008af4:	f043 0320 	orrmi.w	r3, r3, #32
 8008af8:	6029      	str	r1, [r5, #0]
 8008afa:	bf48      	it	mi
 8008afc:	6023      	strmi	r3, [r4, #0]
 8008afe:	b91e      	cbnz	r6, 8008b08 <_printf_i+0x1a4>
 8008b00:	6823      	ldr	r3, [r4, #0]
 8008b02:	f023 0320 	bic.w	r3, r3, #32
 8008b06:	6023      	str	r3, [r4, #0]
 8008b08:	2310      	movs	r3, #16
 8008b0a:	e7a7      	b.n	8008a5c <_printf_i+0xf8>
 8008b0c:	4824      	ldr	r0, [pc, #144]	; (8008ba0 <_printf_i+0x23c>)
 8008b0e:	e7e4      	b.n	8008ada <_printf_i+0x176>
 8008b10:	4615      	mov	r5, r2
 8008b12:	e7bd      	b.n	8008a90 <_printf_i+0x12c>
 8008b14:	682b      	ldr	r3, [r5, #0]
 8008b16:	6826      	ldr	r6, [r4, #0]
 8008b18:	6961      	ldr	r1, [r4, #20]
 8008b1a:	1d18      	adds	r0, r3, #4
 8008b1c:	6028      	str	r0, [r5, #0]
 8008b1e:	0635      	lsls	r5, r6, #24
 8008b20:	681b      	ldr	r3, [r3, #0]
 8008b22:	d501      	bpl.n	8008b28 <_printf_i+0x1c4>
 8008b24:	6019      	str	r1, [r3, #0]
 8008b26:	e002      	b.n	8008b2e <_printf_i+0x1ca>
 8008b28:	0670      	lsls	r0, r6, #25
 8008b2a:	d5fb      	bpl.n	8008b24 <_printf_i+0x1c0>
 8008b2c:	8019      	strh	r1, [r3, #0]
 8008b2e:	2300      	movs	r3, #0
 8008b30:	6123      	str	r3, [r4, #16]
 8008b32:	4615      	mov	r5, r2
 8008b34:	e7bc      	b.n	8008ab0 <_printf_i+0x14c>
 8008b36:	682b      	ldr	r3, [r5, #0]
 8008b38:	1d1a      	adds	r2, r3, #4
 8008b3a:	602a      	str	r2, [r5, #0]
 8008b3c:	681d      	ldr	r5, [r3, #0]
 8008b3e:	6862      	ldr	r2, [r4, #4]
 8008b40:	2100      	movs	r1, #0
 8008b42:	4628      	mov	r0, r5
 8008b44:	f7f7 fb4c 	bl	80001e0 <memchr>
 8008b48:	b108      	cbz	r0, 8008b4e <_printf_i+0x1ea>
 8008b4a:	1b40      	subs	r0, r0, r5
 8008b4c:	6060      	str	r0, [r4, #4]
 8008b4e:	6863      	ldr	r3, [r4, #4]
 8008b50:	6123      	str	r3, [r4, #16]
 8008b52:	2300      	movs	r3, #0
 8008b54:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008b58:	e7aa      	b.n	8008ab0 <_printf_i+0x14c>
 8008b5a:	6923      	ldr	r3, [r4, #16]
 8008b5c:	462a      	mov	r2, r5
 8008b5e:	4649      	mov	r1, r9
 8008b60:	4640      	mov	r0, r8
 8008b62:	47d0      	blx	sl
 8008b64:	3001      	adds	r0, #1
 8008b66:	d0ad      	beq.n	8008ac4 <_printf_i+0x160>
 8008b68:	6823      	ldr	r3, [r4, #0]
 8008b6a:	079b      	lsls	r3, r3, #30
 8008b6c:	d413      	bmi.n	8008b96 <_printf_i+0x232>
 8008b6e:	68e0      	ldr	r0, [r4, #12]
 8008b70:	9b03      	ldr	r3, [sp, #12]
 8008b72:	4298      	cmp	r0, r3
 8008b74:	bfb8      	it	lt
 8008b76:	4618      	movlt	r0, r3
 8008b78:	e7a6      	b.n	8008ac8 <_printf_i+0x164>
 8008b7a:	2301      	movs	r3, #1
 8008b7c:	4632      	mov	r2, r6
 8008b7e:	4649      	mov	r1, r9
 8008b80:	4640      	mov	r0, r8
 8008b82:	47d0      	blx	sl
 8008b84:	3001      	adds	r0, #1
 8008b86:	d09d      	beq.n	8008ac4 <_printf_i+0x160>
 8008b88:	3501      	adds	r5, #1
 8008b8a:	68e3      	ldr	r3, [r4, #12]
 8008b8c:	9903      	ldr	r1, [sp, #12]
 8008b8e:	1a5b      	subs	r3, r3, r1
 8008b90:	42ab      	cmp	r3, r5
 8008b92:	dcf2      	bgt.n	8008b7a <_printf_i+0x216>
 8008b94:	e7eb      	b.n	8008b6e <_printf_i+0x20a>
 8008b96:	2500      	movs	r5, #0
 8008b98:	f104 0619 	add.w	r6, r4, #25
 8008b9c:	e7f5      	b.n	8008b8a <_printf_i+0x226>
 8008b9e:	bf00      	nop
 8008ba0:	08009aed 	.word	0x08009aed
 8008ba4:	08009afe 	.word	0x08009afe

08008ba8 <__svfiscanf_r>:
 8008ba8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008bac:	461d      	mov	r5, r3
 8008bae:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8008bb0:	07df      	lsls	r7, r3, #31
 8008bb2:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 8008bb6:	4606      	mov	r6, r0
 8008bb8:	460c      	mov	r4, r1
 8008bba:	4692      	mov	sl, r2
 8008bbc:	d405      	bmi.n	8008bca <__svfiscanf_r+0x22>
 8008bbe:	898b      	ldrh	r3, [r1, #12]
 8008bc0:	0598      	lsls	r0, r3, #22
 8008bc2:	d402      	bmi.n	8008bca <__svfiscanf_r+0x22>
 8008bc4:	6d88      	ldr	r0, [r1, #88]	; 0x58
 8008bc6:	f7ff fc12 	bl	80083ee <__retarget_lock_acquire_recursive>
 8008bca:	2300      	movs	r3, #0
 8008bcc:	e9cd 3344 	strd	r3, r3, [sp, #272]	; 0x110
 8008bd0:	4baa      	ldr	r3, [pc, #680]	; (8008e7c <__svfiscanf_r+0x2d4>)
 8008bd2:	93a0      	str	r3, [sp, #640]	; 0x280
 8008bd4:	f10d 0804 	add.w	r8, sp, #4
 8008bd8:	4ba9      	ldr	r3, [pc, #676]	; (8008e80 <__svfiscanf_r+0x2d8>)
 8008bda:	4faa      	ldr	r7, [pc, #680]	; (8008e84 <__svfiscanf_r+0x2dc>)
 8008bdc:	f8df 92a8 	ldr.w	r9, [pc, #680]	; 8008e88 <__svfiscanf_r+0x2e0>
 8008be0:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8008be4:	93a1      	str	r3, [sp, #644]	; 0x284
 8008be6:	9500      	str	r5, [sp, #0]
 8008be8:	f89a 3000 	ldrb.w	r3, [sl]
 8008bec:	2b00      	cmp	r3, #0
 8008bee:	f000 8170 	beq.w	8008ed2 <__svfiscanf_r+0x32a>
 8008bf2:	5cf9      	ldrb	r1, [r7, r3]
 8008bf4:	f011 0108 	ands.w	r1, r1, #8
 8008bf8:	f10a 0501 	add.w	r5, sl, #1
 8008bfc:	d019      	beq.n	8008c32 <__svfiscanf_r+0x8a>
 8008bfe:	6863      	ldr	r3, [r4, #4]
 8008c00:	2b00      	cmp	r3, #0
 8008c02:	dd0f      	ble.n	8008c24 <__svfiscanf_r+0x7c>
 8008c04:	6823      	ldr	r3, [r4, #0]
 8008c06:	781a      	ldrb	r2, [r3, #0]
 8008c08:	5cba      	ldrb	r2, [r7, r2]
 8008c0a:	0711      	lsls	r1, r2, #28
 8008c0c:	d401      	bmi.n	8008c12 <__svfiscanf_r+0x6a>
 8008c0e:	46aa      	mov	sl, r5
 8008c10:	e7ea      	b.n	8008be8 <__svfiscanf_r+0x40>
 8008c12:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8008c14:	3201      	adds	r2, #1
 8008c16:	9245      	str	r2, [sp, #276]	; 0x114
 8008c18:	6862      	ldr	r2, [r4, #4]
 8008c1a:	3301      	adds	r3, #1
 8008c1c:	3a01      	subs	r2, #1
 8008c1e:	6062      	str	r2, [r4, #4]
 8008c20:	6023      	str	r3, [r4, #0]
 8008c22:	e7ec      	b.n	8008bfe <__svfiscanf_r+0x56>
 8008c24:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8008c26:	4621      	mov	r1, r4
 8008c28:	4630      	mov	r0, r6
 8008c2a:	4798      	blx	r3
 8008c2c:	2800      	cmp	r0, #0
 8008c2e:	d0e9      	beq.n	8008c04 <__svfiscanf_r+0x5c>
 8008c30:	e7ed      	b.n	8008c0e <__svfiscanf_r+0x66>
 8008c32:	2b25      	cmp	r3, #37	; 0x25
 8008c34:	d012      	beq.n	8008c5c <__svfiscanf_r+0xb4>
 8008c36:	469a      	mov	sl, r3
 8008c38:	6863      	ldr	r3, [r4, #4]
 8008c3a:	2b00      	cmp	r3, #0
 8008c3c:	f340 8093 	ble.w	8008d66 <__svfiscanf_r+0x1be>
 8008c40:	6822      	ldr	r2, [r4, #0]
 8008c42:	7813      	ldrb	r3, [r2, #0]
 8008c44:	4553      	cmp	r3, sl
 8008c46:	f040 8144 	bne.w	8008ed2 <__svfiscanf_r+0x32a>
 8008c4a:	6863      	ldr	r3, [r4, #4]
 8008c4c:	3b01      	subs	r3, #1
 8008c4e:	6063      	str	r3, [r4, #4]
 8008c50:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8008c52:	3201      	adds	r2, #1
 8008c54:	3301      	adds	r3, #1
 8008c56:	6022      	str	r2, [r4, #0]
 8008c58:	9345      	str	r3, [sp, #276]	; 0x114
 8008c5a:	e7d8      	b.n	8008c0e <__svfiscanf_r+0x66>
 8008c5c:	9141      	str	r1, [sp, #260]	; 0x104
 8008c5e:	9143      	str	r1, [sp, #268]	; 0x10c
 8008c60:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8008c64:	2b2a      	cmp	r3, #42	; 0x2a
 8008c66:	bf02      	ittt	eq
 8008c68:	2310      	moveq	r3, #16
 8008c6a:	9341      	streq	r3, [sp, #260]	; 0x104
 8008c6c:	f10a 0502 	addeq.w	r5, sl, #2
 8008c70:	220a      	movs	r2, #10
 8008c72:	46aa      	mov	sl, r5
 8008c74:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8008c78:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8008c7c:	2b09      	cmp	r3, #9
 8008c7e:	d91d      	bls.n	8008cbc <__svfiscanf_r+0x114>
 8008c80:	4881      	ldr	r0, [pc, #516]	; (8008e88 <__svfiscanf_r+0x2e0>)
 8008c82:	2203      	movs	r2, #3
 8008c84:	f7f7 faac 	bl	80001e0 <memchr>
 8008c88:	b138      	cbz	r0, 8008c9a <__svfiscanf_r+0xf2>
 8008c8a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8008c8c:	eba0 0009 	sub.w	r0, r0, r9
 8008c90:	2301      	movs	r3, #1
 8008c92:	4083      	lsls	r3, r0
 8008c94:	4313      	orrs	r3, r2
 8008c96:	9341      	str	r3, [sp, #260]	; 0x104
 8008c98:	4655      	mov	r5, sl
 8008c9a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8008c9e:	2b78      	cmp	r3, #120	; 0x78
 8008ca0:	d807      	bhi.n	8008cb2 <__svfiscanf_r+0x10a>
 8008ca2:	2b57      	cmp	r3, #87	; 0x57
 8008ca4:	d811      	bhi.n	8008cca <__svfiscanf_r+0x122>
 8008ca6:	2b25      	cmp	r3, #37	; 0x25
 8008ca8:	d0c5      	beq.n	8008c36 <__svfiscanf_r+0x8e>
 8008caa:	d857      	bhi.n	8008d5c <__svfiscanf_r+0x1b4>
 8008cac:	2b00      	cmp	r3, #0
 8008cae:	f000 80c6 	beq.w	8008e3e <__svfiscanf_r+0x296>
 8008cb2:	2303      	movs	r3, #3
 8008cb4:	9347      	str	r3, [sp, #284]	; 0x11c
 8008cb6:	230a      	movs	r3, #10
 8008cb8:	9342      	str	r3, [sp, #264]	; 0x108
 8008cba:	e07f      	b.n	8008dbc <__svfiscanf_r+0x214>
 8008cbc:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8008cbe:	fb02 1103 	mla	r1, r2, r3, r1
 8008cc2:	3930      	subs	r1, #48	; 0x30
 8008cc4:	9143      	str	r1, [sp, #268]	; 0x10c
 8008cc6:	4655      	mov	r5, sl
 8008cc8:	e7d3      	b.n	8008c72 <__svfiscanf_r+0xca>
 8008cca:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8008cce:	2a20      	cmp	r2, #32
 8008cd0:	d8ef      	bhi.n	8008cb2 <__svfiscanf_r+0x10a>
 8008cd2:	a101      	add	r1, pc, #4	; (adr r1, 8008cd8 <__svfiscanf_r+0x130>)
 8008cd4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8008cd8:	08008d9f 	.word	0x08008d9f
 8008cdc:	08008cb3 	.word	0x08008cb3
 8008ce0:	08008cb3 	.word	0x08008cb3
 8008ce4:	08008dfd 	.word	0x08008dfd
 8008ce8:	08008cb3 	.word	0x08008cb3
 8008cec:	08008cb3 	.word	0x08008cb3
 8008cf0:	08008cb3 	.word	0x08008cb3
 8008cf4:	08008cb3 	.word	0x08008cb3
 8008cf8:	08008cb3 	.word	0x08008cb3
 8008cfc:	08008cb3 	.word	0x08008cb3
 8008d00:	08008cb3 	.word	0x08008cb3
 8008d04:	08008e13 	.word	0x08008e13
 8008d08:	08008df9 	.word	0x08008df9
 8008d0c:	08008d63 	.word	0x08008d63
 8008d10:	08008d63 	.word	0x08008d63
 8008d14:	08008d63 	.word	0x08008d63
 8008d18:	08008cb3 	.word	0x08008cb3
 8008d1c:	08008db5 	.word	0x08008db5
 8008d20:	08008cb3 	.word	0x08008cb3
 8008d24:	08008cb3 	.word	0x08008cb3
 8008d28:	08008cb3 	.word	0x08008cb3
 8008d2c:	08008cb3 	.word	0x08008cb3
 8008d30:	08008e23 	.word	0x08008e23
 8008d34:	08008df1 	.word	0x08008df1
 8008d38:	08008d97 	.word	0x08008d97
 8008d3c:	08008cb3 	.word	0x08008cb3
 8008d40:	08008cb3 	.word	0x08008cb3
 8008d44:	08008e1f 	.word	0x08008e1f
 8008d48:	08008cb3 	.word	0x08008cb3
 8008d4c:	08008df9 	.word	0x08008df9
 8008d50:	08008cb3 	.word	0x08008cb3
 8008d54:	08008cb3 	.word	0x08008cb3
 8008d58:	08008d9f 	.word	0x08008d9f
 8008d5c:	3b45      	subs	r3, #69	; 0x45
 8008d5e:	2b02      	cmp	r3, #2
 8008d60:	d8a7      	bhi.n	8008cb2 <__svfiscanf_r+0x10a>
 8008d62:	2305      	movs	r3, #5
 8008d64:	e029      	b.n	8008dba <__svfiscanf_r+0x212>
 8008d66:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8008d68:	4621      	mov	r1, r4
 8008d6a:	4630      	mov	r0, r6
 8008d6c:	4798      	blx	r3
 8008d6e:	2800      	cmp	r0, #0
 8008d70:	f43f af66 	beq.w	8008c40 <__svfiscanf_r+0x98>
 8008d74:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008d76:	07da      	lsls	r2, r3, #31
 8008d78:	f140 80a3 	bpl.w	8008ec2 <__svfiscanf_r+0x31a>
 8008d7c:	9844      	ldr	r0, [sp, #272]	; 0x110
 8008d7e:	2800      	cmp	r0, #0
 8008d80:	d066      	beq.n	8008e50 <__svfiscanf_r+0x2a8>
 8008d82:	89a3      	ldrh	r3, [r4, #12]
 8008d84:	f013 0f40 	tst.w	r3, #64	; 0x40
 8008d88:	bf18      	it	ne
 8008d8a:	f04f 30ff 	movne.w	r0, #4294967295
 8008d8e:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 8008d92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008d96:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8008d98:	f042 0220 	orr.w	r2, r2, #32
 8008d9c:	9241      	str	r2, [sp, #260]	; 0x104
 8008d9e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8008da0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008da4:	9241      	str	r2, [sp, #260]	; 0x104
 8008da6:	2210      	movs	r2, #16
 8008da8:	2b6f      	cmp	r3, #111	; 0x6f
 8008daa:	9242      	str	r2, [sp, #264]	; 0x108
 8008dac:	bf34      	ite	cc
 8008dae:	2303      	movcc	r3, #3
 8008db0:	2304      	movcs	r3, #4
 8008db2:	e002      	b.n	8008dba <__svfiscanf_r+0x212>
 8008db4:	2300      	movs	r3, #0
 8008db6:	9342      	str	r3, [sp, #264]	; 0x108
 8008db8:	2303      	movs	r3, #3
 8008dba:	9347      	str	r3, [sp, #284]	; 0x11c
 8008dbc:	6863      	ldr	r3, [r4, #4]
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	dd49      	ble.n	8008e56 <__svfiscanf_r+0x2ae>
 8008dc2:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8008dc4:	065b      	lsls	r3, r3, #25
 8008dc6:	d404      	bmi.n	8008dd2 <__svfiscanf_r+0x22a>
 8008dc8:	6823      	ldr	r3, [r4, #0]
 8008dca:	781a      	ldrb	r2, [r3, #0]
 8008dcc:	5cba      	ldrb	r2, [r7, r2]
 8008dce:	0710      	lsls	r0, r2, #28
 8008dd0:	d448      	bmi.n	8008e64 <__svfiscanf_r+0x2bc>
 8008dd2:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8008dd4:	2b02      	cmp	r3, #2
 8008dd6:	dc60      	bgt.n	8008e9a <__svfiscanf_r+0x2f2>
 8008dd8:	466b      	mov	r3, sp
 8008dda:	4622      	mov	r2, r4
 8008ddc:	a941      	add	r1, sp, #260	; 0x104
 8008dde:	4630      	mov	r0, r6
 8008de0:	f000 f898 	bl	8008f14 <_scanf_chars>
 8008de4:	2801      	cmp	r0, #1
 8008de6:	d074      	beq.n	8008ed2 <__svfiscanf_r+0x32a>
 8008de8:	2802      	cmp	r0, #2
 8008dea:	f47f af10 	bne.w	8008c0e <__svfiscanf_r+0x66>
 8008dee:	e7c1      	b.n	8008d74 <__svfiscanf_r+0x1cc>
 8008df0:	2308      	movs	r3, #8
 8008df2:	9342      	str	r3, [sp, #264]	; 0x108
 8008df4:	2304      	movs	r3, #4
 8008df6:	e7e0      	b.n	8008dba <__svfiscanf_r+0x212>
 8008df8:	220a      	movs	r2, #10
 8008dfa:	e7d5      	b.n	8008da8 <__svfiscanf_r+0x200>
 8008dfc:	4629      	mov	r1, r5
 8008dfe:	4640      	mov	r0, r8
 8008e00:	f000 fb6c 	bl	80094dc <__sccl>
 8008e04:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8008e06:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008e0a:	9341      	str	r3, [sp, #260]	; 0x104
 8008e0c:	4605      	mov	r5, r0
 8008e0e:	2301      	movs	r3, #1
 8008e10:	e7d3      	b.n	8008dba <__svfiscanf_r+0x212>
 8008e12:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8008e14:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008e18:	9341      	str	r3, [sp, #260]	; 0x104
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	e7cd      	b.n	8008dba <__svfiscanf_r+0x212>
 8008e1e:	2302      	movs	r3, #2
 8008e20:	e7cb      	b.n	8008dba <__svfiscanf_r+0x212>
 8008e22:	9841      	ldr	r0, [sp, #260]	; 0x104
 8008e24:	06c3      	lsls	r3, r0, #27
 8008e26:	f53f aef2 	bmi.w	8008c0e <__svfiscanf_r+0x66>
 8008e2a:	9b00      	ldr	r3, [sp, #0]
 8008e2c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8008e2e:	1d19      	adds	r1, r3, #4
 8008e30:	9100      	str	r1, [sp, #0]
 8008e32:	681b      	ldr	r3, [r3, #0]
 8008e34:	07c0      	lsls	r0, r0, #31
 8008e36:	bf4c      	ite	mi
 8008e38:	801a      	strhmi	r2, [r3, #0]
 8008e3a:	601a      	strpl	r2, [r3, #0]
 8008e3c:	e6e7      	b.n	8008c0e <__svfiscanf_r+0x66>
 8008e3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008e40:	07d8      	lsls	r0, r3, #31
 8008e42:	d405      	bmi.n	8008e50 <__svfiscanf_r+0x2a8>
 8008e44:	89a3      	ldrh	r3, [r4, #12]
 8008e46:	0599      	lsls	r1, r3, #22
 8008e48:	d402      	bmi.n	8008e50 <__svfiscanf_r+0x2a8>
 8008e4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008e4c:	f7ff fad0 	bl	80083f0 <__retarget_lock_release_recursive>
 8008e50:	f04f 30ff 	mov.w	r0, #4294967295
 8008e54:	e79b      	b.n	8008d8e <__svfiscanf_r+0x1e6>
 8008e56:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8008e58:	4621      	mov	r1, r4
 8008e5a:	4630      	mov	r0, r6
 8008e5c:	4798      	blx	r3
 8008e5e:	2800      	cmp	r0, #0
 8008e60:	d0af      	beq.n	8008dc2 <__svfiscanf_r+0x21a>
 8008e62:	e787      	b.n	8008d74 <__svfiscanf_r+0x1cc>
 8008e64:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8008e66:	3201      	adds	r2, #1
 8008e68:	9245      	str	r2, [sp, #276]	; 0x114
 8008e6a:	6862      	ldr	r2, [r4, #4]
 8008e6c:	3a01      	subs	r2, #1
 8008e6e:	2a00      	cmp	r2, #0
 8008e70:	6062      	str	r2, [r4, #4]
 8008e72:	dd0b      	ble.n	8008e8c <__svfiscanf_r+0x2e4>
 8008e74:	3301      	adds	r3, #1
 8008e76:	6023      	str	r3, [r4, #0]
 8008e78:	e7a6      	b.n	8008dc8 <__svfiscanf_r+0x220>
 8008e7a:	bf00      	nop
 8008e7c:	080095c3 	.word	0x080095c3
 8008e80:	080093ed 	.word	0x080093ed
 8008e84:	08009b2b 	.word	0x08009b2b
 8008e88:	08009ae2 	.word	0x08009ae2
 8008e8c:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8008e8e:	4621      	mov	r1, r4
 8008e90:	4630      	mov	r0, r6
 8008e92:	4798      	blx	r3
 8008e94:	2800      	cmp	r0, #0
 8008e96:	d097      	beq.n	8008dc8 <__svfiscanf_r+0x220>
 8008e98:	e76c      	b.n	8008d74 <__svfiscanf_r+0x1cc>
 8008e9a:	2b04      	cmp	r3, #4
 8008e9c:	dc06      	bgt.n	8008eac <__svfiscanf_r+0x304>
 8008e9e:	466b      	mov	r3, sp
 8008ea0:	4622      	mov	r2, r4
 8008ea2:	a941      	add	r1, sp, #260	; 0x104
 8008ea4:	4630      	mov	r0, r6
 8008ea6:	f000 f88f 	bl	8008fc8 <_scanf_i>
 8008eaa:	e79b      	b.n	8008de4 <__svfiscanf_r+0x23c>
 8008eac:	4b0e      	ldr	r3, [pc, #56]	; (8008ee8 <__svfiscanf_r+0x340>)
 8008eae:	2b00      	cmp	r3, #0
 8008eb0:	f43f aead 	beq.w	8008c0e <__svfiscanf_r+0x66>
 8008eb4:	466b      	mov	r3, sp
 8008eb6:	4622      	mov	r2, r4
 8008eb8:	a941      	add	r1, sp, #260	; 0x104
 8008eba:	4630      	mov	r0, r6
 8008ebc:	f3af 8000 	nop.w
 8008ec0:	e790      	b.n	8008de4 <__svfiscanf_r+0x23c>
 8008ec2:	89a3      	ldrh	r3, [r4, #12]
 8008ec4:	0599      	lsls	r1, r3, #22
 8008ec6:	f53f af59 	bmi.w	8008d7c <__svfiscanf_r+0x1d4>
 8008eca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008ecc:	f7ff fa90 	bl	80083f0 <__retarget_lock_release_recursive>
 8008ed0:	e754      	b.n	8008d7c <__svfiscanf_r+0x1d4>
 8008ed2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008ed4:	07da      	lsls	r2, r3, #31
 8008ed6:	d405      	bmi.n	8008ee4 <__svfiscanf_r+0x33c>
 8008ed8:	89a3      	ldrh	r3, [r4, #12]
 8008eda:	059b      	lsls	r3, r3, #22
 8008edc:	d402      	bmi.n	8008ee4 <__svfiscanf_r+0x33c>
 8008ede:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008ee0:	f7ff fa86 	bl	80083f0 <__retarget_lock_release_recursive>
 8008ee4:	9844      	ldr	r0, [sp, #272]	; 0x110
 8008ee6:	e752      	b.n	8008d8e <__svfiscanf_r+0x1e6>
 8008ee8:	00000000 	.word	0x00000000

08008eec <_vfiscanf_r>:
 8008eec:	b530      	push	{r4, r5, lr}
 8008eee:	4604      	mov	r4, r0
 8008ef0:	b085      	sub	sp, #20
 8008ef2:	b148      	cbz	r0, 8008f08 <_vfiscanf_r+0x1c>
 8008ef4:	6a05      	ldr	r5, [r0, #32]
 8008ef6:	b93d      	cbnz	r5, 8008f08 <_vfiscanf_r+0x1c>
 8008ef8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008efc:	9101      	str	r1, [sp, #4]
 8008efe:	f7ff f819 	bl	8007f34 <__sinit>
 8008f02:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008f06:	9901      	ldr	r1, [sp, #4]
 8008f08:	4620      	mov	r0, r4
 8008f0a:	b005      	add	sp, #20
 8008f0c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008f10:	f7ff be4a 	b.w	8008ba8 <__svfiscanf_r>

08008f14 <_scanf_chars>:
 8008f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008f18:	4615      	mov	r5, r2
 8008f1a:	688a      	ldr	r2, [r1, #8]
 8008f1c:	4680      	mov	r8, r0
 8008f1e:	460c      	mov	r4, r1
 8008f20:	b932      	cbnz	r2, 8008f30 <_scanf_chars+0x1c>
 8008f22:	698a      	ldr	r2, [r1, #24]
 8008f24:	2a00      	cmp	r2, #0
 8008f26:	bf0c      	ite	eq
 8008f28:	2201      	moveq	r2, #1
 8008f2a:	f04f 32ff 	movne.w	r2, #4294967295
 8008f2e:	608a      	str	r2, [r1, #8]
 8008f30:	6822      	ldr	r2, [r4, #0]
 8008f32:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8008fc4 <_scanf_chars+0xb0>
 8008f36:	06d1      	lsls	r1, r2, #27
 8008f38:	bf5f      	itttt	pl
 8008f3a:	681a      	ldrpl	r2, [r3, #0]
 8008f3c:	1d11      	addpl	r1, r2, #4
 8008f3e:	6019      	strpl	r1, [r3, #0]
 8008f40:	6816      	ldrpl	r6, [r2, #0]
 8008f42:	2700      	movs	r7, #0
 8008f44:	69a0      	ldr	r0, [r4, #24]
 8008f46:	b188      	cbz	r0, 8008f6c <_scanf_chars+0x58>
 8008f48:	2801      	cmp	r0, #1
 8008f4a:	d107      	bne.n	8008f5c <_scanf_chars+0x48>
 8008f4c:	682a      	ldr	r2, [r5, #0]
 8008f4e:	7811      	ldrb	r1, [r2, #0]
 8008f50:	6962      	ldr	r2, [r4, #20]
 8008f52:	5c52      	ldrb	r2, [r2, r1]
 8008f54:	b952      	cbnz	r2, 8008f6c <_scanf_chars+0x58>
 8008f56:	2f00      	cmp	r7, #0
 8008f58:	d031      	beq.n	8008fbe <_scanf_chars+0xaa>
 8008f5a:	e022      	b.n	8008fa2 <_scanf_chars+0x8e>
 8008f5c:	2802      	cmp	r0, #2
 8008f5e:	d120      	bne.n	8008fa2 <_scanf_chars+0x8e>
 8008f60:	682b      	ldr	r3, [r5, #0]
 8008f62:	781b      	ldrb	r3, [r3, #0]
 8008f64:	f819 3003 	ldrb.w	r3, [r9, r3]
 8008f68:	071b      	lsls	r3, r3, #28
 8008f6a:	d41a      	bmi.n	8008fa2 <_scanf_chars+0x8e>
 8008f6c:	6823      	ldr	r3, [r4, #0]
 8008f6e:	06da      	lsls	r2, r3, #27
 8008f70:	bf5e      	ittt	pl
 8008f72:	682b      	ldrpl	r3, [r5, #0]
 8008f74:	781b      	ldrbpl	r3, [r3, #0]
 8008f76:	f806 3b01 	strbpl.w	r3, [r6], #1
 8008f7a:	682a      	ldr	r2, [r5, #0]
 8008f7c:	686b      	ldr	r3, [r5, #4]
 8008f7e:	3201      	adds	r2, #1
 8008f80:	602a      	str	r2, [r5, #0]
 8008f82:	68a2      	ldr	r2, [r4, #8]
 8008f84:	3b01      	subs	r3, #1
 8008f86:	3a01      	subs	r2, #1
 8008f88:	606b      	str	r3, [r5, #4]
 8008f8a:	3701      	adds	r7, #1
 8008f8c:	60a2      	str	r2, [r4, #8]
 8008f8e:	b142      	cbz	r2, 8008fa2 <_scanf_chars+0x8e>
 8008f90:	2b00      	cmp	r3, #0
 8008f92:	dcd7      	bgt.n	8008f44 <_scanf_chars+0x30>
 8008f94:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8008f98:	4629      	mov	r1, r5
 8008f9a:	4640      	mov	r0, r8
 8008f9c:	4798      	blx	r3
 8008f9e:	2800      	cmp	r0, #0
 8008fa0:	d0d0      	beq.n	8008f44 <_scanf_chars+0x30>
 8008fa2:	6823      	ldr	r3, [r4, #0]
 8008fa4:	f013 0310 	ands.w	r3, r3, #16
 8008fa8:	d105      	bne.n	8008fb6 <_scanf_chars+0xa2>
 8008faa:	68e2      	ldr	r2, [r4, #12]
 8008fac:	3201      	adds	r2, #1
 8008fae:	60e2      	str	r2, [r4, #12]
 8008fb0:	69a2      	ldr	r2, [r4, #24]
 8008fb2:	b102      	cbz	r2, 8008fb6 <_scanf_chars+0xa2>
 8008fb4:	7033      	strb	r3, [r6, #0]
 8008fb6:	6923      	ldr	r3, [r4, #16]
 8008fb8:	443b      	add	r3, r7
 8008fba:	6123      	str	r3, [r4, #16]
 8008fbc:	2000      	movs	r0, #0
 8008fbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008fc2:	bf00      	nop
 8008fc4:	08009b2b 	.word	0x08009b2b

08008fc8 <_scanf_i>:
 8008fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008fcc:	4698      	mov	r8, r3
 8008fce:	4b74      	ldr	r3, [pc, #464]	; (80091a0 <_scanf_i+0x1d8>)
 8008fd0:	460c      	mov	r4, r1
 8008fd2:	4682      	mov	sl, r0
 8008fd4:	4616      	mov	r6, r2
 8008fd6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8008fda:	b087      	sub	sp, #28
 8008fdc:	ab03      	add	r3, sp, #12
 8008fde:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008fe2:	4b70      	ldr	r3, [pc, #448]	; (80091a4 <_scanf_i+0x1dc>)
 8008fe4:	69a1      	ldr	r1, [r4, #24]
 8008fe6:	4a70      	ldr	r2, [pc, #448]	; (80091a8 <_scanf_i+0x1e0>)
 8008fe8:	2903      	cmp	r1, #3
 8008fea:	bf18      	it	ne
 8008fec:	461a      	movne	r2, r3
 8008fee:	68a3      	ldr	r3, [r4, #8]
 8008ff0:	9201      	str	r2, [sp, #4]
 8008ff2:	1e5a      	subs	r2, r3, #1
 8008ff4:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8008ff8:	bf88      	it	hi
 8008ffa:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8008ffe:	4627      	mov	r7, r4
 8009000:	bf82      	ittt	hi
 8009002:	eb03 0905 	addhi.w	r9, r3, r5
 8009006:	f240 135d 	movwhi	r3, #349	; 0x15d
 800900a:	60a3      	strhi	r3, [r4, #8]
 800900c:	f857 3b1c 	ldr.w	r3, [r7], #28
 8009010:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8009014:	bf98      	it	ls
 8009016:	f04f 0900 	movls.w	r9, #0
 800901a:	6023      	str	r3, [r4, #0]
 800901c:	463d      	mov	r5, r7
 800901e:	f04f 0b00 	mov.w	fp, #0
 8009022:	6831      	ldr	r1, [r6, #0]
 8009024:	ab03      	add	r3, sp, #12
 8009026:	7809      	ldrb	r1, [r1, #0]
 8009028:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800902c:	2202      	movs	r2, #2
 800902e:	f7f7 f8d7 	bl	80001e0 <memchr>
 8009032:	b328      	cbz	r0, 8009080 <_scanf_i+0xb8>
 8009034:	f1bb 0f01 	cmp.w	fp, #1
 8009038:	d159      	bne.n	80090ee <_scanf_i+0x126>
 800903a:	6862      	ldr	r2, [r4, #4]
 800903c:	b92a      	cbnz	r2, 800904a <_scanf_i+0x82>
 800903e:	6822      	ldr	r2, [r4, #0]
 8009040:	2308      	movs	r3, #8
 8009042:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009046:	6063      	str	r3, [r4, #4]
 8009048:	6022      	str	r2, [r4, #0]
 800904a:	6822      	ldr	r2, [r4, #0]
 800904c:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 8009050:	6022      	str	r2, [r4, #0]
 8009052:	68a2      	ldr	r2, [r4, #8]
 8009054:	1e51      	subs	r1, r2, #1
 8009056:	60a1      	str	r1, [r4, #8]
 8009058:	b192      	cbz	r2, 8009080 <_scanf_i+0xb8>
 800905a:	6832      	ldr	r2, [r6, #0]
 800905c:	1c51      	adds	r1, r2, #1
 800905e:	6031      	str	r1, [r6, #0]
 8009060:	7812      	ldrb	r2, [r2, #0]
 8009062:	f805 2b01 	strb.w	r2, [r5], #1
 8009066:	6872      	ldr	r2, [r6, #4]
 8009068:	3a01      	subs	r2, #1
 800906a:	2a00      	cmp	r2, #0
 800906c:	6072      	str	r2, [r6, #4]
 800906e:	dc07      	bgt.n	8009080 <_scanf_i+0xb8>
 8009070:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 8009074:	4631      	mov	r1, r6
 8009076:	4650      	mov	r0, sl
 8009078:	4790      	blx	r2
 800907a:	2800      	cmp	r0, #0
 800907c:	f040 8085 	bne.w	800918a <_scanf_i+0x1c2>
 8009080:	f10b 0b01 	add.w	fp, fp, #1
 8009084:	f1bb 0f03 	cmp.w	fp, #3
 8009088:	d1cb      	bne.n	8009022 <_scanf_i+0x5a>
 800908a:	6863      	ldr	r3, [r4, #4]
 800908c:	b90b      	cbnz	r3, 8009092 <_scanf_i+0xca>
 800908e:	230a      	movs	r3, #10
 8009090:	6063      	str	r3, [r4, #4]
 8009092:	6863      	ldr	r3, [r4, #4]
 8009094:	4945      	ldr	r1, [pc, #276]	; (80091ac <_scanf_i+0x1e4>)
 8009096:	6960      	ldr	r0, [r4, #20]
 8009098:	1ac9      	subs	r1, r1, r3
 800909a:	f000 fa1f 	bl	80094dc <__sccl>
 800909e:	f04f 0b00 	mov.w	fp, #0
 80090a2:	68a3      	ldr	r3, [r4, #8]
 80090a4:	6822      	ldr	r2, [r4, #0]
 80090a6:	2b00      	cmp	r3, #0
 80090a8:	d03d      	beq.n	8009126 <_scanf_i+0x15e>
 80090aa:	6831      	ldr	r1, [r6, #0]
 80090ac:	6960      	ldr	r0, [r4, #20]
 80090ae:	f891 c000 	ldrb.w	ip, [r1]
 80090b2:	f810 000c 	ldrb.w	r0, [r0, ip]
 80090b6:	2800      	cmp	r0, #0
 80090b8:	d035      	beq.n	8009126 <_scanf_i+0x15e>
 80090ba:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 80090be:	d124      	bne.n	800910a <_scanf_i+0x142>
 80090c0:	0510      	lsls	r0, r2, #20
 80090c2:	d522      	bpl.n	800910a <_scanf_i+0x142>
 80090c4:	f10b 0b01 	add.w	fp, fp, #1
 80090c8:	f1b9 0f00 	cmp.w	r9, #0
 80090cc:	d003      	beq.n	80090d6 <_scanf_i+0x10e>
 80090ce:	3301      	adds	r3, #1
 80090d0:	f109 39ff 	add.w	r9, r9, #4294967295
 80090d4:	60a3      	str	r3, [r4, #8]
 80090d6:	6873      	ldr	r3, [r6, #4]
 80090d8:	3b01      	subs	r3, #1
 80090da:	2b00      	cmp	r3, #0
 80090dc:	6073      	str	r3, [r6, #4]
 80090de:	dd1b      	ble.n	8009118 <_scanf_i+0x150>
 80090e0:	6833      	ldr	r3, [r6, #0]
 80090e2:	3301      	adds	r3, #1
 80090e4:	6033      	str	r3, [r6, #0]
 80090e6:	68a3      	ldr	r3, [r4, #8]
 80090e8:	3b01      	subs	r3, #1
 80090ea:	60a3      	str	r3, [r4, #8]
 80090ec:	e7d9      	b.n	80090a2 <_scanf_i+0xda>
 80090ee:	f1bb 0f02 	cmp.w	fp, #2
 80090f2:	d1ae      	bne.n	8009052 <_scanf_i+0x8a>
 80090f4:	6822      	ldr	r2, [r4, #0]
 80090f6:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 80090fa:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80090fe:	d1bf      	bne.n	8009080 <_scanf_i+0xb8>
 8009100:	2310      	movs	r3, #16
 8009102:	6063      	str	r3, [r4, #4]
 8009104:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009108:	e7a2      	b.n	8009050 <_scanf_i+0x88>
 800910a:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800910e:	6022      	str	r2, [r4, #0]
 8009110:	780b      	ldrb	r3, [r1, #0]
 8009112:	f805 3b01 	strb.w	r3, [r5], #1
 8009116:	e7de      	b.n	80090d6 <_scanf_i+0x10e>
 8009118:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800911c:	4631      	mov	r1, r6
 800911e:	4650      	mov	r0, sl
 8009120:	4798      	blx	r3
 8009122:	2800      	cmp	r0, #0
 8009124:	d0df      	beq.n	80090e6 <_scanf_i+0x11e>
 8009126:	6823      	ldr	r3, [r4, #0]
 8009128:	05d9      	lsls	r1, r3, #23
 800912a:	d50d      	bpl.n	8009148 <_scanf_i+0x180>
 800912c:	42bd      	cmp	r5, r7
 800912e:	d909      	bls.n	8009144 <_scanf_i+0x17c>
 8009130:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8009134:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009138:	4632      	mov	r2, r6
 800913a:	4650      	mov	r0, sl
 800913c:	4798      	blx	r3
 800913e:	f105 39ff 	add.w	r9, r5, #4294967295
 8009142:	464d      	mov	r5, r9
 8009144:	42bd      	cmp	r5, r7
 8009146:	d028      	beq.n	800919a <_scanf_i+0x1d2>
 8009148:	6822      	ldr	r2, [r4, #0]
 800914a:	f012 0210 	ands.w	r2, r2, #16
 800914e:	d113      	bne.n	8009178 <_scanf_i+0x1b0>
 8009150:	702a      	strb	r2, [r5, #0]
 8009152:	6863      	ldr	r3, [r4, #4]
 8009154:	9e01      	ldr	r6, [sp, #4]
 8009156:	4639      	mov	r1, r7
 8009158:	4650      	mov	r0, sl
 800915a:	47b0      	blx	r6
 800915c:	f8d8 3000 	ldr.w	r3, [r8]
 8009160:	6821      	ldr	r1, [r4, #0]
 8009162:	1d1a      	adds	r2, r3, #4
 8009164:	f8c8 2000 	str.w	r2, [r8]
 8009168:	f011 0f20 	tst.w	r1, #32
 800916c:	681b      	ldr	r3, [r3, #0]
 800916e:	d00f      	beq.n	8009190 <_scanf_i+0x1c8>
 8009170:	6018      	str	r0, [r3, #0]
 8009172:	68e3      	ldr	r3, [r4, #12]
 8009174:	3301      	adds	r3, #1
 8009176:	60e3      	str	r3, [r4, #12]
 8009178:	6923      	ldr	r3, [r4, #16]
 800917a:	1bed      	subs	r5, r5, r7
 800917c:	445d      	add	r5, fp
 800917e:	442b      	add	r3, r5
 8009180:	6123      	str	r3, [r4, #16]
 8009182:	2000      	movs	r0, #0
 8009184:	b007      	add	sp, #28
 8009186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800918a:	f04f 0b00 	mov.w	fp, #0
 800918e:	e7ca      	b.n	8009126 <_scanf_i+0x15e>
 8009190:	07ca      	lsls	r2, r1, #31
 8009192:	bf4c      	ite	mi
 8009194:	8018      	strhmi	r0, [r3, #0]
 8009196:	6018      	strpl	r0, [r3, #0]
 8009198:	e7eb      	b.n	8009172 <_scanf_i+0x1aa>
 800919a:	2001      	movs	r0, #1
 800919c:	e7f2      	b.n	8009184 <_scanf_i+0x1bc>
 800919e:	bf00      	nop
 80091a0:	08009ab0 	.word	0x08009ab0
 80091a4:	0800997d 	.word	0x0800997d
 80091a8:	08009895 	.word	0x08009895
 80091ac:	08009b1f 	.word	0x08009b1f

080091b0 <__sflush_r>:
 80091b0:	898a      	ldrh	r2, [r1, #12]
 80091b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80091b6:	4605      	mov	r5, r0
 80091b8:	0710      	lsls	r0, r2, #28
 80091ba:	460c      	mov	r4, r1
 80091bc:	d458      	bmi.n	8009270 <__sflush_r+0xc0>
 80091be:	684b      	ldr	r3, [r1, #4]
 80091c0:	2b00      	cmp	r3, #0
 80091c2:	dc05      	bgt.n	80091d0 <__sflush_r+0x20>
 80091c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80091c6:	2b00      	cmp	r3, #0
 80091c8:	dc02      	bgt.n	80091d0 <__sflush_r+0x20>
 80091ca:	2000      	movs	r0, #0
 80091cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80091d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80091d2:	2e00      	cmp	r6, #0
 80091d4:	d0f9      	beq.n	80091ca <__sflush_r+0x1a>
 80091d6:	2300      	movs	r3, #0
 80091d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80091dc:	682f      	ldr	r7, [r5, #0]
 80091de:	6a21      	ldr	r1, [r4, #32]
 80091e0:	602b      	str	r3, [r5, #0]
 80091e2:	d032      	beq.n	800924a <__sflush_r+0x9a>
 80091e4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80091e6:	89a3      	ldrh	r3, [r4, #12]
 80091e8:	075a      	lsls	r2, r3, #29
 80091ea:	d505      	bpl.n	80091f8 <__sflush_r+0x48>
 80091ec:	6863      	ldr	r3, [r4, #4]
 80091ee:	1ac0      	subs	r0, r0, r3
 80091f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80091f2:	b10b      	cbz	r3, 80091f8 <__sflush_r+0x48>
 80091f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80091f6:	1ac0      	subs	r0, r0, r3
 80091f8:	2300      	movs	r3, #0
 80091fa:	4602      	mov	r2, r0
 80091fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80091fe:	6a21      	ldr	r1, [r4, #32]
 8009200:	4628      	mov	r0, r5
 8009202:	47b0      	blx	r6
 8009204:	1c43      	adds	r3, r0, #1
 8009206:	89a3      	ldrh	r3, [r4, #12]
 8009208:	d106      	bne.n	8009218 <__sflush_r+0x68>
 800920a:	6829      	ldr	r1, [r5, #0]
 800920c:	291d      	cmp	r1, #29
 800920e:	d82b      	bhi.n	8009268 <__sflush_r+0xb8>
 8009210:	4a29      	ldr	r2, [pc, #164]	; (80092b8 <__sflush_r+0x108>)
 8009212:	410a      	asrs	r2, r1
 8009214:	07d6      	lsls	r6, r2, #31
 8009216:	d427      	bmi.n	8009268 <__sflush_r+0xb8>
 8009218:	2200      	movs	r2, #0
 800921a:	6062      	str	r2, [r4, #4]
 800921c:	04d9      	lsls	r1, r3, #19
 800921e:	6922      	ldr	r2, [r4, #16]
 8009220:	6022      	str	r2, [r4, #0]
 8009222:	d504      	bpl.n	800922e <__sflush_r+0x7e>
 8009224:	1c42      	adds	r2, r0, #1
 8009226:	d101      	bne.n	800922c <__sflush_r+0x7c>
 8009228:	682b      	ldr	r3, [r5, #0]
 800922a:	b903      	cbnz	r3, 800922e <__sflush_r+0x7e>
 800922c:	6560      	str	r0, [r4, #84]	; 0x54
 800922e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009230:	602f      	str	r7, [r5, #0]
 8009232:	2900      	cmp	r1, #0
 8009234:	d0c9      	beq.n	80091ca <__sflush_r+0x1a>
 8009236:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800923a:	4299      	cmp	r1, r3
 800923c:	d002      	beq.n	8009244 <__sflush_r+0x94>
 800923e:	4628      	mov	r0, r5
 8009240:	f7ff f8e6 	bl	8008410 <_free_r>
 8009244:	2000      	movs	r0, #0
 8009246:	6360      	str	r0, [r4, #52]	; 0x34
 8009248:	e7c0      	b.n	80091cc <__sflush_r+0x1c>
 800924a:	2301      	movs	r3, #1
 800924c:	4628      	mov	r0, r5
 800924e:	47b0      	blx	r6
 8009250:	1c41      	adds	r1, r0, #1
 8009252:	d1c8      	bne.n	80091e6 <__sflush_r+0x36>
 8009254:	682b      	ldr	r3, [r5, #0]
 8009256:	2b00      	cmp	r3, #0
 8009258:	d0c5      	beq.n	80091e6 <__sflush_r+0x36>
 800925a:	2b1d      	cmp	r3, #29
 800925c:	d001      	beq.n	8009262 <__sflush_r+0xb2>
 800925e:	2b16      	cmp	r3, #22
 8009260:	d101      	bne.n	8009266 <__sflush_r+0xb6>
 8009262:	602f      	str	r7, [r5, #0]
 8009264:	e7b1      	b.n	80091ca <__sflush_r+0x1a>
 8009266:	89a3      	ldrh	r3, [r4, #12]
 8009268:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800926c:	81a3      	strh	r3, [r4, #12]
 800926e:	e7ad      	b.n	80091cc <__sflush_r+0x1c>
 8009270:	690f      	ldr	r7, [r1, #16]
 8009272:	2f00      	cmp	r7, #0
 8009274:	d0a9      	beq.n	80091ca <__sflush_r+0x1a>
 8009276:	0793      	lsls	r3, r2, #30
 8009278:	680e      	ldr	r6, [r1, #0]
 800927a:	bf08      	it	eq
 800927c:	694b      	ldreq	r3, [r1, #20]
 800927e:	600f      	str	r7, [r1, #0]
 8009280:	bf18      	it	ne
 8009282:	2300      	movne	r3, #0
 8009284:	eba6 0807 	sub.w	r8, r6, r7
 8009288:	608b      	str	r3, [r1, #8]
 800928a:	f1b8 0f00 	cmp.w	r8, #0
 800928e:	dd9c      	ble.n	80091ca <__sflush_r+0x1a>
 8009290:	6a21      	ldr	r1, [r4, #32]
 8009292:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009294:	4643      	mov	r3, r8
 8009296:	463a      	mov	r2, r7
 8009298:	4628      	mov	r0, r5
 800929a:	47b0      	blx	r6
 800929c:	2800      	cmp	r0, #0
 800929e:	dc06      	bgt.n	80092ae <__sflush_r+0xfe>
 80092a0:	89a3      	ldrh	r3, [r4, #12]
 80092a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80092a6:	81a3      	strh	r3, [r4, #12]
 80092a8:	f04f 30ff 	mov.w	r0, #4294967295
 80092ac:	e78e      	b.n	80091cc <__sflush_r+0x1c>
 80092ae:	4407      	add	r7, r0
 80092b0:	eba8 0800 	sub.w	r8, r8, r0
 80092b4:	e7e9      	b.n	800928a <__sflush_r+0xda>
 80092b6:	bf00      	nop
 80092b8:	dfbffffe 	.word	0xdfbffffe

080092bc <_fflush_r>:
 80092bc:	b538      	push	{r3, r4, r5, lr}
 80092be:	690b      	ldr	r3, [r1, #16]
 80092c0:	4605      	mov	r5, r0
 80092c2:	460c      	mov	r4, r1
 80092c4:	b913      	cbnz	r3, 80092cc <_fflush_r+0x10>
 80092c6:	2500      	movs	r5, #0
 80092c8:	4628      	mov	r0, r5
 80092ca:	bd38      	pop	{r3, r4, r5, pc}
 80092cc:	b118      	cbz	r0, 80092d6 <_fflush_r+0x1a>
 80092ce:	6a03      	ldr	r3, [r0, #32]
 80092d0:	b90b      	cbnz	r3, 80092d6 <_fflush_r+0x1a>
 80092d2:	f7fe fe2f 	bl	8007f34 <__sinit>
 80092d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80092da:	2b00      	cmp	r3, #0
 80092dc:	d0f3      	beq.n	80092c6 <_fflush_r+0xa>
 80092de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80092e0:	07d0      	lsls	r0, r2, #31
 80092e2:	d404      	bmi.n	80092ee <_fflush_r+0x32>
 80092e4:	0599      	lsls	r1, r3, #22
 80092e6:	d402      	bmi.n	80092ee <_fflush_r+0x32>
 80092e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80092ea:	f7ff f880 	bl	80083ee <__retarget_lock_acquire_recursive>
 80092ee:	4628      	mov	r0, r5
 80092f0:	4621      	mov	r1, r4
 80092f2:	f7ff ff5d 	bl	80091b0 <__sflush_r>
 80092f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80092f8:	07da      	lsls	r2, r3, #31
 80092fa:	4605      	mov	r5, r0
 80092fc:	d4e4      	bmi.n	80092c8 <_fflush_r+0xc>
 80092fe:	89a3      	ldrh	r3, [r4, #12]
 8009300:	059b      	lsls	r3, r3, #22
 8009302:	d4e1      	bmi.n	80092c8 <_fflush_r+0xc>
 8009304:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009306:	f7ff f873 	bl	80083f0 <__retarget_lock_release_recursive>
 800930a:	e7dd      	b.n	80092c8 <_fflush_r+0xc>

0800930c <__swhatbuf_r>:
 800930c:	b570      	push	{r4, r5, r6, lr}
 800930e:	460c      	mov	r4, r1
 8009310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009314:	2900      	cmp	r1, #0
 8009316:	b096      	sub	sp, #88	; 0x58
 8009318:	4615      	mov	r5, r2
 800931a:	461e      	mov	r6, r3
 800931c:	da0d      	bge.n	800933a <__swhatbuf_r+0x2e>
 800931e:	89a3      	ldrh	r3, [r4, #12]
 8009320:	f013 0f80 	tst.w	r3, #128	; 0x80
 8009324:	f04f 0100 	mov.w	r1, #0
 8009328:	bf0c      	ite	eq
 800932a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800932e:	2340      	movne	r3, #64	; 0x40
 8009330:	2000      	movs	r0, #0
 8009332:	6031      	str	r1, [r6, #0]
 8009334:	602b      	str	r3, [r5, #0]
 8009336:	b016      	add	sp, #88	; 0x58
 8009338:	bd70      	pop	{r4, r5, r6, pc}
 800933a:	466a      	mov	r2, sp
 800933c:	f000 f9c6 	bl	80096cc <_fstat_r>
 8009340:	2800      	cmp	r0, #0
 8009342:	dbec      	blt.n	800931e <__swhatbuf_r+0x12>
 8009344:	9901      	ldr	r1, [sp, #4]
 8009346:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800934a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800934e:	4259      	negs	r1, r3
 8009350:	4159      	adcs	r1, r3
 8009352:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009356:	e7eb      	b.n	8009330 <__swhatbuf_r+0x24>

08009358 <__smakebuf_r>:
 8009358:	898b      	ldrh	r3, [r1, #12]
 800935a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800935c:	079d      	lsls	r5, r3, #30
 800935e:	4606      	mov	r6, r0
 8009360:	460c      	mov	r4, r1
 8009362:	d507      	bpl.n	8009374 <__smakebuf_r+0x1c>
 8009364:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8009368:	6023      	str	r3, [r4, #0]
 800936a:	6123      	str	r3, [r4, #16]
 800936c:	2301      	movs	r3, #1
 800936e:	6163      	str	r3, [r4, #20]
 8009370:	b002      	add	sp, #8
 8009372:	bd70      	pop	{r4, r5, r6, pc}
 8009374:	ab01      	add	r3, sp, #4
 8009376:	466a      	mov	r2, sp
 8009378:	f7ff ffc8 	bl	800930c <__swhatbuf_r>
 800937c:	9900      	ldr	r1, [sp, #0]
 800937e:	4605      	mov	r5, r0
 8009380:	4630      	mov	r0, r6
 8009382:	f7ff f8b1 	bl	80084e8 <_malloc_r>
 8009386:	b948      	cbnz	r0, 800939c <__smakebuf_r+0x44>
 8009388:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800938c:	059a      	lsls	r2, r3, #22
 800938e:	d4ef      	bmi.n	8009370 <__smakebuf_r+0x18>
 8009390:	f023 0303 	bic.w	r3, r3, #3
 8009394:	f043 0302 	orr.w	r3, r3, #2
 8009398:	81a3      	strh	r3, [r4, #12]
 800939a:	e7e3      	b.n	8009364 <__smakebuf_r+0xc>
 800939c:	89a3      	ldrh	r3, [r4, #12]
 800939e:	6020      	str	r0, [r4, #0]
 80093a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80093a4:	81a3      	strh	r3, [r4, #12]
 80093a6:	9b00      	ldr	r3, [sp, #0]
 80093a8:	6163      	str	r3, [r4, #20]
 80093aa:	9b01      	ldr	r3, [sp, #4]
 80093ac:	6120      	str	r0, [r4, #16]
 80093ae:	b15b      	cbz	r3, 80093c8 <__smakebuf_r+0x70>
 80093b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80093b4:	4630      	mov	r0, r6
 80093b6:	f000 f99b 	bl	80096f0 <_isatty_r>
 80093ba:	b128      	cbz	r0, 80093c8 <__smakebuf_r+0x70>
 80093bc:	89a3      	ldrh	r3, [r4, #12]
 80093be:	f023 0303 	bic.w	r3, r3, #3
 80093c2:	f043 0301 	orr.w	r3, r3, #1
 80093c6:	81a3      	strh	r3, [r4, #12]
 80093c8:	89a3      	ldrh	r3, [r4, #12]
 80093ca:	431d      	orrs	r5, r3
 80093cc:	81a5      	strh	r5, [r4, #12]
 80093ce:	e7cf      	b.n	8009370 <__smakebuf_r+0x18>

080093d0 <lflush>:
 80093d0:	898b      	ldrh	r3, [r1, #12]
 80093d2:	f003 0309 	and.w	r3, r3, #9
 80093d6:	2b09      	cmp	r3, #9
 80093d8:	d103      	bne.n	80093e2 <lflush+0x12>
 80093da:	4b03      	ldr	r3, [pc, #12]	; (80093e8 <lflush+0x18>)
 80093dc:	6818      	ldr	r0, [r3, #0]
 80093de:	f7ff bf6d 	b.w	80092bc <_fflush_r>
 80093e2:	2000      	movs	r0, #0
 80093e4:	4770      	bx	lr
 80093e6:	bf00      	nop
 80093e8:	200000f8 	.word	0x200000f8

080093ec <__srefill_r>:
 80093ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093ee:	460c      	mov	r4, r1
 80093f0:	4605      	mov	r5, r0
 80093f2:	b118      	cbz	r0, 80093fc <__srefill_r+0x10>
 80093f4:	6a03      	ldr	r3, [r0, #32]
 80093f6:	b90b      	cbnz	r3, 80093fc <__srefill_r+0x10>
 80093f8:	f7fe fd9c 	bl	8007f34 <__sinit>
 80093fc:	2300      	movs	r3, #0
 80093fe:	6063      	str	r3, [r4, #4]
 8009400:	89a3      	ldrh	r3, [r4, #12]
 8009402:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8009406:	069e      	lsls	r6, r3, #26
 8009408:	d502      	bpl.n	8009410 <__srefill_r+0x24>
 800940a:	f04f 30ff 	mov.w	r0, #4294967295
 800940e:	e05c      	b.n	80094ca <__srefill_r+0xde>
 8009410:	0758      	lsls	r0, r3, #29
 8009412:	d448      	bmi.n	80094a6 <__srefill_r+0xba>
 8009414:	06d9      	lsls	r1, r3, #27
 8009416:	d405      	bmi.n	8009424 <__srefill_r+0x38>
 8009418:	2309      	movs	r3, #9
 800941a:	602b      	str	r3, [r5, #0]
 800941c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8009420:	81a3      	strh	r3, [r4, #12]
 8009422:	e7f2      	b.n	800940a <__srefill_r+0x1e>
 8009424:	071a      	lsls	r2, r3, #28
 8009426:	d50b      	bpl.n	8009440 <__srefill_r+0x54>
 8009428:	4621      	mov	r1, r4
 800942a:	4628      	mov	r0, r5
 800942c:	f7ff ff46 	bl	80092bc <_fflush_r>
 8009430:	2800      	cmp	r0, #0
 8009432:	d1ea      	bne.n	800940a <__srefill_r+0x1e>
 8009434:	89a3      	ldrh	r3, [r4, #12]
 8009436:	60a0      	str	r0, [r4, #8]
 8009438:	f023 0308 	bic.w	r3, r3, #8
 800943c:	81a3      	strh	r3, [r4, #12]
 800943e:	61a0      	str	r0, [r4, #24]
 8009440:	89a3      	ldrh	r3, [r4, #12]
 8009442:	f043 0304 	orr.w	r3, r3, #4
 8009446:	81a3      	strh	r3, [r4, #12]
 8009448:	6923      	ldr	r3, [r4, #16]
 800944a:	b91b      	cbnz	r3, 8009454 <__srefill_r+0x68>
 800944c:	4621      	mov	r1, r4
 800944e:	4628      	mov	r0, r5
 8009450:	f7ff ff82 	bl	8009358 <__smakebuf_r>
 8009454:	89a6      	ldrh	r6, [r4, #12]
 8009456:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 800945a:	07b3      	lsls	r3, r6, #30
 800945c:	d00f      	beq.n	800947e <__srefill_r+0x92>
 800945e:	2301      	movs	r3, #1
 8009460:	4a1b      	ldr	r2, [pc, #108]	; (80094d0 <__srefill_r+0xe4>)
 8009462:	491c      	ldr	r1, [pc, #112]	; (80094d4 <__srefill_r+0xe8>)
 8009464:	481c      	ldr	r0, [pc, #112]	; (80094d8 <__srefill_r+0xec>)
 8009466:	81a3      	strh	r3, [r4, #12]
 8009468:	f006 0609 	and.w	r6, r6, #9
 800946c:	f7fe fd7a 	bl	8007f64 <_fwalk_sglue>
 8009470:	2e09      	cmp	r6, #9
 8009472:	81a7      	strh	r7, [r4, #12]
 8009474:	d103      	bne.n	800947e <__srefill_r+0x92>
 8009476:	4621      	mov	r1, r4
 8009478:	4628      	mov	r0, r5
 800947a:	f7ff fe99 	bl	80091b0 <__sflush_r>
 800947e:	6922      	ldr	r2, [r4, #16]
 8009480:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8009482:	6963      	ldr	r3, [r4, #20]
 8009484:	6a21      	ldr	r1, [r4, #32]
 8009486:	6022      	str	r2, [r4, #0]
 8009488:	4628      	mov	r0, r5
 800948a:	47b0      	blx	r6
 800948c:	2800      	cmp	r0, #0
 800948e:	6060      	str	r0, [r4, #4]
 8009490:	dc1c      	bgt.n	80094cc <__srefill_r+0xe0>
 8009492:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009496:	bf17      	itett	ne
 8009498:	2200      	movne	r2, #0
 800949a:	f043 0320 	orreq.w	r3, r3, #32
 800949e:	6062      	strne	r2, [r4, #4]
 80094a0:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80094a4:	e7bc      	b.n	8009420 <__srefill_r+0x34>
 80094a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80094a8:	2900      	cmp	r1, #0
 80094aa:	d0cd      	beq.n	8009448 <__srefill_r+0x5c>
 80094ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80094b0:	4299      	cmp	r1, r3
 80094b2:	d002      	beq.n	80094ba <__srefill_r+0xce>
 80094b4:	4628      	mov	r0, r5
 80094b6:	f7fe ffab 	bl	8008410 <_free_r>
 80094ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80094bc:	6063      	str	r3, [r4, #4]
 80094be:	2000      	movs	r0, #0
 80094c0:	6360      	str	r0, [r4, #52]	; 0x34
 80094c2:	2b00      	cmp	r3, #0
 80094c4:	d0c0      	beq.n	8009448 <__srefill_r+0x5c>
 80094c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094c8:	6023      	str	r3, [r4, #0]
 80094ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80094cc:	2000      	movs	r0, #0
 80094ce:	e7fc      	b.n	80094ca <__srefill_r+0xde>
 80094d0:	200000a0 	.word	0x200000a0
 80094d4:	080093d1 	.word	0x080093d1
 80094d8:	200000ac 	.word	0x200000ac

080094dc <__sccl>:
 80094dc:	b570      	push	{r4, r5, r6, lr}
 80094de:	780b      	ldrb	r3, [r1, #0]
 80094e0:	4604      	mov	r4, r0
 80094e2:	2b5e      	cmp	r3, #94	; 0x5e
 80094e4:	bf0b      	itete	eq
 80094e6:	784b      	ldrbeq	r3, [r1, #1]
 80094e8:	1c4a      	addne	r2, r1, #1
 80094ea:	1c8a      	addeq	r2, r1, #2
 80094ec:	2100      	movne	r1, #0
 80094ee:	bf08      	it	eq
 80094f0:	2101      	moveq	r1, #1
 80094f2:	3801      	subs	r0, #1
 80094f4:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 80094f8:	f800 1f01 	strb.w	r1, [r0, #1]!
 80094fc:	42a8      	cmp	r0, r5
 80094fe:	d1fb      	bne.n	80094f8 <__sccl+0x1c>
 8009500:	b90b      	cbnz	r3, 8009506 <__sccl+0x2a>
 8009502:	1e50      	subs	r0, r2, #1
 8009504:	bd70      	pop	{r4, r5, r6, pc}
 8009506:	f081 0101 	eor.w	r1, r1, #1
 800950a:	54e1      	strb	r1, [r4, r3]
 800950c:	4610      	mov	r0, r2
 800950e:	4602      	mov	r2, r0
 8009510:	f812 5b01 	ldrb.w	r5, [r2], #1
 8009514:	2d2d      	cmp	r5, #45	; 0x2d
 8009516:	d005      	beq.n	8009524 <__sccl+0x48>
 8009518:	2d5d      	cmp	r5, #93	; 0x5d
 800951a:	d016      	beq.n	800954a <__sccl+0x6e>
 800951c:	2d00      	cmp	r5, #0
 800951e:	d0f1      	beq.n	8009504 <__sccl+0x28>
 8009520:	462b      	mov	r3, r5
 8009522:	e7f2      	b.n	800950a <__sccl+0x2e>
 8009524:	7846      	ldrb	r6, [r0, #1]
 8009526:	2e5d      	cmp	r6, #93	; 0x5d
 8009528:	d0fa      	beq.n	8009520 <__sccl+0x44>
 800952a:	42b3      	cmp	r3, r6
 800952c:	dcf8      	bgt.n	8009520 <__sccl+0x44>
 800952e:	3002      	adds	r0, #2
 8009530:	461a      	mov	r2, r3
 8009532:	3201      	adds	r2, #1
 8009534:	4296      	cmp	r6, r2
 8009536:	54a1      	strb	r1, [r4, r2]
 8009538:	dcfb      	bgt.n	8009532 <__sccl+0x56>
 800953a:	1af2      	subs	r2, r6, r3
 800953c:	3a01      	subs	r2, #1
 800953e:	1c5d      	adds	r5, r3, #1
 8009540:	42b3      	cmp	r3, r6
 8009542:	bfa8      	it	ge
 8009544:	2200      	movge	r2, #0
 8009546:	18ab      	adds	r3, r5, r2
 8009548:	e7e1      	b.n	800950e <__sccl+0x32>
 800954a:	4610      	mov	r0, r2
 800954c:	e7da      	b.n	8009504 <__sccl+0x28>

0800954e <__submore>:
 800954e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009552:	460c      	mov	r4, r1
 8009554:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8009556:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800955a:	4299      	cmp	r1, r3
 800955c:	d11d      	bne.n	800959a <__submore+0x4c>
 800955e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009562:	f7fe ffc1 	bl	80084e8 <_malloc_r>
 8009566:	b918      	cbnz	r0, 8009570 <__submore+0x22>
 8009568:	f04f 30ff 	mov.w	r0, #4294967295
 800956c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009570:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009574:	63a3      	str	r3, [r4, #56]	; 0x38
 8009576:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800957a:	6360      	str	r0, [r4, #52]	; 0x34
 800957c:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8009580:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009584:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8009588:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800958c:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 8009590:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8009594:	6020      	str	r0, [r4, #0]
 8009596:	2000      	movs	r0, #0
 8009598:	e7e8      	b.n	800956c <__submore+0x1e>
 800959a:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800959c:	0077      	lsls	r7, r6, #1
 800959e:	463a      	mov	r2, r7
 80095a0:	f000 f8c6 	bl	8009730 <_realloc_r>
 80095a4:	4605      	mov	r5, r0
 80095a6:	2800      	cmp	r0, #0
 80095a8:	d0de      	beq.n	8009568 <__submore+0x1a>
 80095aa:	eb00 0806 	add.w	r8, r0, r6
 80095ae:	4601      	mov	r1, r0
 80095b0:	4632      	mov	r2, r6
 80095b2:	4640      	mov	r0, r8
 80095b4:	f7fe ff1d 	bl	80083f2 <memcpy>
 80095b8:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 80095bc:	f8c4 8000 	str.w	r8, [r4]
 80095c0:	e7e9      	b.n	8009596 <__submore+0x48>

080095c2 <_ungetc_r>:
 80095c2:	b570      	push	{r4, r5, r6, lr}
 80095c4:	4614      	mov	r4, r2
 80095c6:	1c4a      	adds	r2, r1, #1
 80095c8:	4606      	mov	r6, r0
 80095ca:	460d      	mov	r5, r1
 80095cc:	d103      	bne.n	80095d6 <_ungetc_r+0x14>
 80095ce:	f04f 35ff 	mov.w	r5, #4294967295
 80095d2:	4628      	mov	r0, r5
 80095d4:	bd70      	pop	{r4, r5, r6, pc}
 80095d6:	b118      	cbz	r0, 80095e0 <_ungetc_r+0x1e>
 80095d8:	6a03      	ldr	r3, [r0, #32]
 80095da:	b90b      	cbnz	r3, 80095e0 <_ungetc_r+0x1e>
 80095dc:	f7fe fcaa 	bl	8007f34 <__sinit>
 80095e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80095e2:	07db      	lsls	r3, r3, #31
 80095e4:	d405      	bmi.n	80095f2 <_ungetc_r+0x30>
 80095e6:	89a3      	ldrh	r3, [r4, #12]
 80095e8:	0598      	lsls	r0, r3, #22
 80095ea:	d402      	bmi.n	80095f2 <_ungetc_r+0x30>
 80095ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80095ee:	f7fe fefe 	bl	80083ee <__retarget_lock_acquire_recursive>
 80095f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80095f6:	f023 0320 	bic.w	r3, r3, #32
 80095fa:	0759      	lsls	r1, r3, #29
 80095fc:	81a3      	strh	r3, [r4, #12]
 80095fe:	b29a      	uxth	r2, r3
 8009600:	d423      	bmi.n	800964a <_ungetc_r+0x88>
 8009602:	06d3      	lsls	r3, r2, #27
 8009604:	d409      	bmi.n	800961a <_ungetc_r+0x58>
 8009606:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009608:	07dd      	lsls	r5, r3, #31
 800960a:	d4e0      	bmi.n	80095ce <_ungetc_r+0xc>
 800960c:	f412 7f00 	tst.w	r2, #512	; 0x200
 8009610:	d1dd      	bne.n	80095ce <_ungetc_r+0xc>
 8009612:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009614:	f7fe feec 	bl	80083f0 <__retarget_lock_release_recursive>
 8009618:	e7d9      	b.n	80095ce <_ungetc_r+0xc>
 800961a:	0710      	lsls	r0, r2, #28
 800961c:	d511      	bpl.n	8009642 <_ungetc_r+0x80>
 800961e:	4621      	mov	r1, r4
 8009620:	4630      	mov	r0, r6
 8009622:	f7ff fe4b 	bl	80092bc <_fflush_r>
 8009626:	b130      	cbz	r0, 8009636 <_ungetc_r+0x74>
 8009628:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800962a:	07d9      	lsls	r1, r3, #31
 800962c:	d4cf      	bmi.n	80095ce <_ungetc_r+0xc>
 800962e:	89a3      	ldrh	r3, [r4, #12]
 8009630:	f413 7f00 	tst.w	r3, #512	; 0x200
 8009634:	e7ec      	b.n	8009610 <_ungetc_r+0x4e>
 8009636:	89a3      	ldrh	r3, [r4, #12]
 8009638:	60a0      	str	r0, [r4, #8]
 800963a:	f023 0308 	bic.w	r3, r3, #8
 800963e:	81a3      	strh	r3, [r4, #12]
 8009640:	61a0      	str	r0, [r4, #24]
 8009642:	89a3      	ldrh	r3, [r4, #12]
 8009644:	f043 0304 	orr.w	r3, r3, #4
 8009648:	81a3      	strh	r3, [r4, #12]
 800964a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800964c:	6862      	ldr	r2, [r4, #4]
 800964e:	b2ed      	uxtb	r5, r5
 8009650:	b1d3      	cbz	r3, 8009688 <_ungetc_r+0xc6>
 8009652:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009654:	4293      	cmp	r3, r2
 8009656:	dc05      	bgt.n	8009664 <_ungetc_r+0xa2>
 8009658:	4621      	mov	r1, r4
 800965a:	4630      	mov	r0, r6
 800965c:	f7ff ff77 	bl	800954e <__submore>
 8009660:	2800      	cmp	r0, #0
 8009662:	d1e1      	bne.n	8009628 <_ungetc_r+0x66>
 8009664:	6823      	ldr	r3, [r4, #0]
 8009666:	1e5a      	subs	r2, r3, #1
 8009668:	6022      	str	r2, [r4, #0]
 800966a:	f803 5c01 	strb.w	r5, [r3, #-1]
 800966e:	6863      	ldr	r3, [r4, #4]
 8009670:	3301      	adds	r3, #1
 8009672:	6063      	str	r3, [r4, #4]
 8009674:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009676:	07da      	lsls	r2, r3, #31
 8009678:	d4ab      	bmi.n	80095d2 <_ungetc_r+0x10>
 800967a:	89a3      	ldrh	r3, [r4, #12]
 800967c:	059b      	lsls	r3, r3, #22
 800967e:	d4a8      	bmi.n	80095d2 <_ungetc_r+0x10>
 8009680:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009682:	f7fe feb5 	bl	80083f0 <__retarget_lock_release_recursive>
 8009686:	e7a4      	b.n	80095d2 <_ungetc_r+0x10>
 8009688:	6e61      	ldr	r1, [r4, #100]	; 0x64
 800968a:	6920      	ldr	r0, [r4, #16]
 800968c:	6823      	ldr	r3, [r4, #0]
 800968e:	f001 0101 	and.w	r1, r1, #1
 8009692:	b160      	cbz	r0, 80096ae <_ungetc_r+0xec>
 8009694:	4298      	cmp	r0, r3
 8009696:	d20a      	bcs.n	80096ae <_ungetc_r+0xec>
 8009698:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 800969c:	42a8      	cmp	r0, r5
 800969e:	d106      	bne.n	80096ae <_ungetc_r+0xec>
 80096a0:	3b01      	subs	r3, #1
 80096a2:	3201      	adds	r2, #1
 80096a4:	6023      	str	r3, [r4, #0]
 80096a6:	6062      	str	r2, [r4, #4]
 80096a8:	2900      	cmp	r1, #0
 80096aa:	d192      	bne.n	80095d2 <_ungetc_r+0x10>
 80096ac:	e7e5      	b.n	800967a <_ungetc_r+0xb8>
 80096ae:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 80096b2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80096b6:	6363      	str	r3, [r4, #52]	; 0x34
 80096b8:	2303      	movs	r3, #3
 80096ba:	63a3      	str	r3, [r4, #56]	; 0x38
 80096bc:	4623      	mov	r3, r4
 80096be:	f803 5f46 	strb.w	r5, [r3, #70]!
 80096c2:	6023      	str	r3, [r4, #0]
 80096c4:	2301      	movs	r3, #1
 80096c6:	6063      	str	r3, [r4, #4]
 80096c8:	e7ee      	b.n	80096a8 <_ungetc_r+0xe6>
	...

080096cc <_fstat_r>:
 80096cc:	b538      	push	{r3, r4, r5, lr}
 80096ce:	4d07      	ldr	r5, [pc, #28]	; (80096ec <_fstat_r+0x20>)
 80096d0:	2300      	movs	r3, #0
 80096d2:	4604      	mov	r4, r0
 80096d4:	4608      	mov	r0, r1
 80096d6:	4611      	mov	r1, r2
 80096d8:	602b      	str	r3, [r5, #0]
 80096da:	f7f7 ff70 	bl	80015be <_fstat>
 80096de:	1c43      	adds	r3, r0, #1
 80096e0:	d102      	bne.n	80096e8 <_fstat_r+0x1c>
 80096e2:	682b      	ldr	r3, [r5, #0]
 80096e4:	b103      	cbz	r3, 80096e8 <_fstat_r+0x1c>
 80096e6:	6023      	str	r3, [r4, #0]
 80096e8:	bd38      	pop	{r3, r4, r5, pc}
 80096ea:	bf00      	nop
 80096ec:	20005554 	.word	0x20005554

080096f0 <_isatty_r>:
 80096f0:	b538      	push	{r3, r4, r5, lr}
 80096f2:	4d06      	ldr	r5, [pc, #24]	; (800970c <_isatty_r+0x1c>)
 80096f4:	2300      	movs	r3, #0
 80096f6:	4604      	mov	r4, r0
 80096f8:	4608      	mov	r0, r1
 80096fa:	602b      	str	r3, [r5, #0]
 80096fc:	f7f7 ff6f 	bl	80015de <_isatty>
 8009700:	1c43      	adds	r3, r0, #1
 8009702:	d102      	bne.n	800970a <_isatty_r+0x1a>
 8009704:	682b      	ldr	r3, [r5, #0]
 8009706:	b103      	cbz	r3, 800970a <_isatty_r+0x1a>
 8009708:	6023      	str	r3, [r4, #0]
 800970a:	bd38      	pop	{r3, r4, r5, pc}
 800970c:	20005554 	.word	0x20005554

08009710 <_sbrk_r>:
 8009710:	b538      	push	{r3, r4, r5, lr}
 8009712:	4d06      	ldr	r5, [pc, #24]	; (800972c <_sbrk_r+0x1c>)
 8009714:	2300      	movs	r3, #0
 8009716:	4604      	mov	r4, r0
 8009718:	4608      	mov	r0, r1
 800971a:	602b      	str	r3, [r5, #0]
 800971c:	f7f7 ff78 	bl	8001610 <_sbrk>
 8009720:	1c43      	adds	r3, r0, #1
 8009722:	d102      	bne.n	800972a <_sbrk_r+0x1a>
 8009724:	682b      	ldr	r3, [r5, #0]
 8009726:	b103      	cbz	r3, 800972a <_sbrk_r+0x1a>
 8009728:	6023      	str	r3, [r4, #0]
 800972a:	bd38      	pop	{r3, r4, r5, pc}
 800972c:	20005554 	.word	0x20005554

08009730 <_realloc_r>:
 8009730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009734:	4680      	mov	r8, r0
 8009736:	4614      	mov	r4, r2
 8009738:	460e      	mov	r6, r1
 800973a:	b921      	cbnz	r1, 8009746 <_realloc_r+0x16>
 800973c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009740:	4611      	mov	r1, r2
 8009742:	f7fe bed1 	b.w	80084e8 <_malloc_r>
 8009746:	b92a      	cbnz	r2, 8009754 <_realloc_r+0x24>
 8009748:	f7fe fe62 	bl	8008410 <_free_r>
 800974c:	4625      	mov	r5, r4
 800974e:	4628      	mov	r0, r5
 8009750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009754:	f000 f914 	bl	8009980 <_malloc_usable_size_r>
 8009758:	4284      	cmp	r4, r0
 800975a:	4607      	mov	r7, r0
 800975c:	d802      	bhi.n	8009764 <_realloc_r+0x34>
 800975e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8009762:	d812      	bhi.n	800978a <_realloc_r+0x5a>
 8009764:	4621      	mov	r1, r4
 8009766:	4640      	mov	r0, r8
 8009768:	f7fe febe 	bl	80084e8 <_malloc_r>
 800976c:	4605      	mov	r5, r0
 800976e:	2800      	cmp	r0, #0
 8009770:	d0ed      	beq.n	800974e <_realloc_r+0x1e>
 8009772:	42bc      	cmp	r4, r7
 8009774:	4622      	mov	r2, r4
 8009776:	4631      	mov	r1, r6
 8009778:	bf28      	it	cs
 800977a:	463a      	movcs	r2, r7
 800977c:	f7fe fe39 	bl	80083f2 <memcpy>
 8009780:	4631      	mov	r1, r6
 8009782:	4640      	mov	r0, r8
 8009784:	f7fe fe44 	bl	8008410 <_free_r>
 8009788:	e7e1      	b.n	800974e <_realloc_r+0x1e>
 800978a:	4635      	mov	r5, r6
 800978c:	e7df      	b.n	800974e <_realloc_r+0x1e>
	...

08009790 <_strtol_l.constprop.0>:
 8009790:	2b01      	cmp	r3, #1
 8009792:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009796:	d001      	beq.n	800979c <_strtol_l.constprop.0+0xc>
 8009798:	2b24      	cmp	r3, #36	; 0x24
 800979a:	d906      	bls.n	80097aa <_strtol_l.constprop.0+0x1a>
 800979c:	f7fe fdfc 	bl	8008398 <__errno>
 80097a0:	2316      	movs	r3, #22
 80097a2:	6003      	str	r3, [r0, #0]
 80097a4:	2000      	movs	r0, #0
 80097a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80097aa:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8009890 <_strtol_l.constprop.0+0x100>
 80097ae:	460d      	mov	r5, r1
 80097b0:	462e      	mov	r6, r5
 80097b2:	f815 4b01 	ldrb.w	r4, [r5], #1
 80097b6:	f81c 7004 	ldrb.w	r7, [ip, r4]
 80097ba:	f017 0708 	ands.w	r7, r7, #8
 80097be:	d1f7      	bne.n	80097b0 <_strtol_l.constprop.0+0x20>
 80097c0:	2c2d      	cmp	r4, #45	; 0x2d
 80097c2:	d132      	bne.n	800982a <_strtol_l.constprop.0+0x9a>
 80097c4:	782c      	ldrb	r4, [r5, #0]
 80097c6:	2701      	movs	r7, #1
 80097c8:	1cb5      	adds	r5, r6, #2
 80097ca:	2b00      	cmp	r3, #0
 80097cc:	d05b      	beq.n	8009886 <_strtol_l.constprop.0+0xf6>
 80097ce:	2b10      	cmp	r3, #16
 80097d0:	d109      	bne.n	80097e6 <_strtol_l.constprop.0+0x56>
 80097d2:	2c30      	cmp	r4, #48	; 0x30
 80097d4:	d107      	bne.n	80097e6 <_strtol_l.constprop.0+0x56>
 80097d6:	782c      	ldrb	r4, [r5, #0]
 80097d8:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80097dc:	2c58      	cmp	r4, #88	; 0x58
 80097de:	d14d      	bne.n	800987c <_strtol_l.constprop.0+0xec>
 80097e0:	786c      	ldrb	r4, [r5, #1]
 80097e2:	2310      	movs	r3, #16
 80097e4:	3502      	adds	r5, #2
 80097e6:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 80097ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80097ee:	f04f 0e00 	mov.w	lr, #0
 80097f2:	fbb8 f9f3 	udiv	r9, r8, r3
 80097f6:	4676      	mov	r6, lr
 80097f8:	fb03 8a19 	mls	sl, r3, r9, r8
 80097fc:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8009800:	f1bc 0f09 	cmp.w	ip, #9
 8009804:	d816      	bhi.n	8009834 <_strtol_l.constprop.0+0xa4>
 8009806:	4664      	mov	r4, ip
 8009808:	42a3      	cmp	r3, r4
 800980a:	dd24      	ble.n	8009856 <_strtol_l.constprop.0+0xc6>
 800980c:	f1be 3fff 	cmp.w	lr, #4294967295
 8009810:	d008      	beq.n	8009824 <_strtol_l.constprop.0+0x94>
 8009812:	45b1      	cmp	r9, r6
 8009814:	d31c      	bcc.n	8009850 <_strtol_l.constprop.0+0xc0>
 8009816:	d101      	bne.n	800981c <_strtol_l.constprop.0+0x8c>
 8009818:	45a2      	cmp	sl, r4
 800981a:	db19      	blt.n	8009850 <_strtol_l.constprop.0+0xc0>
 800981c:	fb06 4603 	mla	r6, r6, r3, r4
 8009820:	f04f 0e01 	mov.w	lr, #1
 8009824:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009828:	e7e8      	b.n	80097fc <_strtol_l.constprop.0+0x6c>
 800982a:	2c2b      	cmp	r4, #43	; 0x2b
 800982c:	bf04      	itt	eq
 800982e:	782c      	ldrbeq	r4, [r5, #0]
 8009830:	1cb5      	addeq	r5, r6, #2
 8009832:	e7ca      	b.n	80097ca <_strtol_l.constprop.0+0x3a>
 8009834:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8009838:	f1bc 0f19 	cmp.w	ip, #25
 800983c:	d801      	bhi.n	8009842 <_strtol_l.constprop.0+0xb2>
 800983e:	3c37      	subs	r4, #55	; 0x37
 8009840:	e7e2      	b.n	8009808 <_strtol_l.constprop.0+0x78>
 8009842:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8009846:	f1bc 0f19 	cmp.w	ip, #25
 800984a:	d804      	bhi.n	8009856 <_strtol_l.constprop.0+0xc6>
 800984c:	3c57      	subs	r4, #87	; 0x57
 800984e:	e7db      	b.n	8009808 <_strtol_l.constprop.0+0x78>
 8009850:	f04f 3eff 	mov.w	lr, #4294967295
 8009854:	e7e6      	b.n	8009824 <_strtol_l.constprop.0+0x94>
 8009856:	f1be 3fff 	cmp.w	lr, #4294967295
 800985a:	d105      	bne.n	8009868 <_strtol_l.constprop.0+0xd8>
 800985c:	2322      	movs	r3, #34	; 0x22
 800985e:	6003      	str	r3, [r0, #0]
 8009860:	4646      	mov	r6, r8
 8009862:	b942      	cbnz	r2, 8009876 <_strtol_l.constprop.0+0xe6>
 8009864:	4630      	mov	r0, r6
 8009866:	e79e      	b.n	80097a6 <_strtol_l.constprop.0+0x16>
 8009868:	b107      	cbz	r7, 800986c <_strtol_l.constprop.0+0xdc>
 800986a:	4276      	negs	r6, r6
 800986c:	2a00      	cmp	r2, #0
 800986e:	d0f9      	beq.n	8009864 <_strtol_l.constprop.0+0xd4>
 8009870:	f1be 0f00 	cmp.w	lr, #0
 8009874:	d000      	beq.n	8009878 <_strtol_l.constprop.0+0xe8>
 8009876:	1e69      	subs	r1, r5, #1
 8009878:	6011      	str	r1, [r2, #0]
 800987a:	e7f3      	b.n	8009864 <_strtol_l.constprop.0+0xd4>
 800987c:	2430      	movs	r4, #48	; 0x30
 800987e:	2b00      	cmp	r3, #0
 8009880:	d1b1      	bne.n	80097e6 <_strtol_l.constprop.0+0x56>
 8009882:	2308      	movs	r3, #8
 8009884:	e7af      	b.n	80097e6 <_strtol_l.constprop.0+0x56>
 8009886:	2c30      	cmp	r4, #48	; 0x30
 8009888:	d0a5      	beq.n	80097d6 <_strtol_l.constprop.0+0x46>
 800988a:	230a      	movs	r3, #10
 800988c:	e7ab      	b.n	80097e6 <_strtol_l.constprop.0+0x56>
 800988e:	bf00      	nop
 8009890:	08009b2b 	.word	0x08009b2b

08009894 <_strtol_r>:
 8009894:	f7ff bf7c 	b.w	8009790 <_strtol_l.constprop.0>

08009898 <_strtoul_l.constprop.0>:
 8009898:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800989c:	4f36      	ldr	r7, [pc, #216]	; (8009978 <_strtoul_l.constprop.0+0xe0>)
 800989e:	4686      	mov	lr, r0
 80098a0:	460d      	mov	r5, r1
 80098a2:	4628      	mov	r0, r5
 80098a4:	f815 4b01 	ldrb.w	r4, [r5], #1
 80098a8:	5d3e      	ldrb	r6, [r7, r4]
 80098aa:	f016 0608 	ands.w	r6, r6, #8
 80098ae:	d1f8      	bne.n	80098a2 <_strtoul_l.constprop.0+0xa>
 80098b0:	2c2d      	cmp	r4, #45	; 0x2d
 80098b2:	d130      	bne.n	8009916 <_strtoul_l.constprop.0+0x7e>
 80098b4:	782c      	ldrb	r4, [r5, #0]
 80098b6:	2601      	movs	r6, #1
 80098b8:	1c85      	adds	r5, r0, #2
 80098ba:	2b00      	cmp	r3, #0
 80098bc:	d057      	beq.n	800996e <_strtoul_l.constprop.0+0xd6>
 80098be:	2b10      	cmp	r3, #16
 80098c0:	d109      	bne.n	80098d6 <_strtoul_l.constprop.0+0x3e>
 80098c2:	2c30      	cmp	r4, #48	; 0x30
 80098c4:	d107      	bne.n	80098d6 <_strtoul_l.constprop.0+0x3e>
 80098c6:	7828      	ldrb	r0, [r5, #0]
 80098c8:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80098cc:	2858      	cmp	r0, #88	; 0x58
 80098ce:	d149      	bne.n	8009964 <_strtoul_l.constprop.0+0xcc>
 80098d0:	786c      	ldrb	r4, [r5, #1]
 80098d2:	2310      	movs	r3, #16
 80098d4:	3502      	adds	r5, #2
 80098d6:	f04f 38ff 	mov.w	r8, #4294967295
 80098da:	2700      	movs	r7, #0
 80098dc:	fbb8 f8f3 	udiv	r8, r8, r3
 80098e0:	fb03 f908 	mul.w	r9, r3, r8
 80098e4:	ea6f 0909 	mvn.w	r9, r9
 80098e8:	4638      	mov	r0, r7
 80098ea:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80098ee:	f1bc 0f09 	cmp.w	ip, #9
 80098f2:	d815      	bhi.n	8009920 <_strtoul_l.constprop.0+0x88>
 80098f4:	4664      	mov	r4, ip
 80098f6:	42a3      	cmp	r3, r4
 80098f8:	dd23      	ble.n	8009942 <_strtoul_l.constprop.0+0xaa>
 80098fa:	f1b7 3fff 	cmp.w	r7, #4294967295
 80098fe:	d007      	beq.n	8009910 <_strtoul_l.constprop.0+0x78>
 8009900:	4580      	cmp	r8, r0
 8009902:	d31b      	bcc.n	800993c <_strtoul_l.constprop.0+0xa4>
 8009904:	d101      	bne.n	800990a <_strtoul_l.constprop.0+0x72>
 8009906:	45a1      	cmp	r9, r4
 8009908:	db18      	blt.n	800993c <_strtoul_l.constprop.0+0xa4>
 800990a:	fb00 4003 	mla	r0, r0, r3, r4
 800990e:	2701      	movs	r7, #1
 8009910:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009914:	e7e9      	b.n	80098ea <_strtoul_l.constprop.0+0x52>
 8009916:	2c2b      	cmp	r4, #43	; 0x2b
 8009918:	bf04      	itt	eq
 800991a:	782c      	ldrbeq	r4, [r5, #0]
 800991c:	1c85      	addeq	r5, r0, #2
 800991e:	e7cc      	b.n	80098ba <_strtoul_l.constprop.0+0x22>
 8009920:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8009924:	f1bc 0f19 	cmp.w	ip, #25
 8009928:	d801      	bhi.n	800992e <_strtoul_l.constprop.0+0x96>
 800992a:	3c37      	subs	r4, #55	; 0x37
 800992c:	e7e3      	b.n	80098f6 <_strtoul_l.constprop.0+0x5e>
 800992e:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8009932:	f1bc 0f19 	cmp.w	ip, #25
 8009936:	d804      	bhi.n	8009942 <_strtoul_l.constprop.0+0xaa>
 8009938:	3c57      	subs	r4, #87	; 0x57
 800993a:	e7dc      	b.n	80098f6 <_strtoul_l.constprop.0+0x5e>
 800993c:	f04f 37ff 	mov.w	r7, #4294967295
 8009940:	e7e6      	b.n	8009910 <_strtoul_l.constprop.0+0x78>
 8009942:	1c7b      	adds	r3, r7, #1
 8009944:	d106      	bne.n	8009954 <_strtoul_l.constprop.0+0xbc>
 8009946:	2322      	movs	r3, #34	; 0x22
 8009948:	f8ce 3000 	str.w	r3, [lr]
 800994c:	4638      	mov	r0, r7
 800994e:	b932      	cbnz	r2, 800995e <_strtoul_l.constprop.0+0xc6>
 8009950:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009954:	b106      	cbz	r6, 8009958 <_strtoul_l.constprop.0+0xc0>
 8009956:	4240      	negs	r0, r0
 8009958:	2a00      	cmp	r2, #0
 800995a:	d0f9      	beq.n	8009950 <_strtoul_l.constprop.0+0xb8>
 800995c:	b107      	cbz	r7, 8009960 <_strtoul_l.constprop.0+0xc8>
 800995e:	1e69      	subs	r1, r5, #1
 8009960:	6011      	str	r1, [r2, #0]
 8009962:	e7f5      	b.n	8009950 <_strtoul_l.constprop.0+0xb8>
 8009964:	2430      	movs	r4, #48	; 0x30
 8009966:	2b00      	cmp	r3, #0
 8009968:	d1b5      	bne.n	80098d6 <_strtoul_l.constprop.0+0x3e>
 800996a:	2308      	movs	r3, #8
 800996c:	e7b3      	b.n	80098d6 <_strtoul_l.constprop.0+0x3e>
 800996e:	2c30      	cmp	r4, #48	; 0x30
 8009970:	d0a9      	beq.n	80098c6 <_strtoul_l.constprop.0+0x2e>
 8009972:	230a      	movs	r3, #10
 8009974:	e7af      	b.n	80098d6 <_strtoul_l.constprop.0+0x3e>
 8009976:	bf00      	nop
 8009978:	08009b2b 	.word	0x08009b2b

0800997c <_strtoul_r>:
 800997c:	f7ff bf8c 	b.w	8009898 <_strtoul_l.constprop.0>

08009980 <_malloc_usable_size_r>:
 8009980:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009984:	1f18      	subs	r0, r3, #4
 8009986:	2b00      	cmp	r3, #0
 8009988:	bfbc      	itt	lt
 800998a:	580b      	ldrlt	r3, [r1, r0]
 800998c:	18c0      	addlt	r0, r0, r3
 800998e:	4770      	bx	lr

08009990 <_init>:
 8009990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009992:	bf00      	nop
 8009994:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009996:	bc08      	pop	{r3}
 8009998:	469e      	mov	lr, r3
 800999a:	4770      	bx	lr

0800999c <_fini>:
 800999c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800999e:	bf00      	nop
 80099a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80099a2:	bc08      	pop	{r3}
 80099a4:	469e      	mov	lr, r3
 80099a6:	4770      	bx	lr
